id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/8365:117,safety,safe,safe,117,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:282,safety,compl,complete,282,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:291,safety,log,log,291,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:98,security,compl,completely,98,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:282,security,compl,complete,282,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:291,security,log,log,291,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:291,testability,log,log,291,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:130,usability,UseR,UseRWLock,130,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:828,usability,user,user-images,828,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log. [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:. https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this? Here the XML version (lower part of it):. ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:223,performance,deadlock,deadlock,223,"It happens in several places, but it is always in the TList class when retrieving or adding links:. ![image](https://user-images.githubusercontent.com/10653970/124675770-94b4e380-debd-11eb-8d52-eca94f13818f.png). Maybe the deadlock disappears once we fix this last race.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:117,usability,user,user-images,117,"It happens in several places, but it is always in the TList class when retrieving or adding links:. ![image](https://user-images.githubusercontent.com/10653970/124675770-94b4e380-debd-11eb-8d52-eca94f13818f.png). Maybe the deadlock disappears once we fix this last race.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:161,availability,Down,Download,161,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:282,deployability,build,build,282,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:294,deployability,build,build,294,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:322,deployability,build,build-debug-mode-ROOT,322,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:502,deployability,log,log-file,502,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:520,deployability,log,log,520,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:397,interoperability,xml,xml,397,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:407,interoperability,xml,xml-file,407,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:425,interoperability,xml,xml,425,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:53,performance,deadlock,deadlock,53,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:502,safety,log,log-file,502,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:520,safety,log,log,520,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:502,security,log,log-file,502,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:520,security,log,log,520,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:502,testability,log,log-file,502,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:520,testability,log,log,520,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:431,usability,tool,tool,431,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```. 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11. 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it. 2. mkdir build && cd build. 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../. 4. make. 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:67,performance,deadlock,deadlock,67,"Another comment: If I change the TThread::Printf to std::cout, the deadlock and data races disappear. So this points that the data race happens when Printf is called, which creates as TTimer that is somehow lost during the TObjLink creation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:41,performance,lock,lock,41,The race is likely unrelated to the dead lock but maybe that it is time to follow the comment's advise:. ```. class TObjLink ... TObject *fObject; // should be atomic ... ```. well unless we really still have:. > which creates as TTimer that is somehow lost during the TObjLink creation. do we?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:67,performance,time,time,67,The race is likely unrelated to the dead lock but maybe that it is time to follow the comment's advise:. ```. class TObjLink ... TObject *fObject; // should be atomic ... ```. well unless we really still have:. > which creates as TTimer that is somehow lost during the TObjLink creation. do we?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:41,security,lock,lock,41,The race is likely unrelated to the dead lock but maybe that it is time to follow the comment's advise:. ```. class TObjLink ... TObject *fObject; // should be atomic ... ```. well unless we really still have:. > which creates as TTimer that is somehow lost during the TObjLink creation. do we?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:183,deployability,log,log,183,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:480,performance,memor,memory,480,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:183,safety,log,log,183,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:183,security,log,log,183,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:183,testability,log,log,183,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:279,usability,user,user-images,279,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:480,usability,memor,memory,480,"> well unless we really still have:. > . > > which creates as TTimer that is somehow lost during the TObjLink creation. > . > do we? Well, that's what I suspect based on the Helgrind log, because Printf creates a TThreadTimer and then it's racing with NewLink:. ![image](https://user-images.githubusercontent.com/10653970/124826897-abb70c80-df75-11eb-9811-3696dbe32965.png). (Side note: the NewLink function appears also in several places in valgrind-root.supp, so that a related memory leak might be hidden.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:33,performance,lock,lock,33,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:109,performance,lock,lock,109,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:145,performance,lock,lock,145,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:218,safety,safe,safety,218,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:271,safety,safe,safe,271,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:33,security,lock,lock,33,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:109,security,lock,lock,109,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:145,security,lock,lock,145,"In the last screen shot, the ""no lock held"" in the write is suspicious. It is suppose to have take the write lock in `AddLast` line 158. For the lock to be missed, it would need to have been executed before the thread-safety was enable or before the list was made thread-safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:273,integrability,intermediar,intermediary,273,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:273,modifiability,interm,intermediary,273,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:286,modifiability,variab,variable,286,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:298,performance,lock,lock,298,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:148,safety,safe,safe,148,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:298,security,lock,lock,298,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:221,usability,UseR,UseRWLock,221,"Yes, it's weird indeed. Well, I call ROOT::EnableThreadSafety before any thread starts, so that should be fine. the list is immediately made thread-safe in the function TSystem::Init,. ```. fTimers = new TList;. fTimers->UseRWLock();. ```. I can try to rewrite it using an intermediary variable to lock it before assigning it to fTimers, to see if it changes something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:162,deployability,log,log,162,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:22,performance,time,timers,22,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:43,performance,time,timers,43,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:65,performance,lock,lock,65,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:104,performance,time,timers,104,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:113,performance,time,timers,113,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:162,safety,log,log,162,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:65,security,lock,lock,65,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:162,security,log,log,162,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:162,testability,log,log,162,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:51,usability,UseR,UseRWLock,51,"If I do:. ```. TList *timers = new TList;. timers->UseRWLock();//lock it before assigning it. fTimers = timers;. timers = nullptr;. ```. then I get this helgrind log, seems similar:. [helgrindlog.txt](https://github.com/root-project/root/files/6780303/helgrindlog.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9309,availability,Robust,Robust,9309,"t.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15177,availability,Robust,Robust,15177,"ff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:21167,availability,sli,slightly,21167,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:26,deployability,Releas,Release,26,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7436,deployability,build,builds,7436,"ait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7443,deployability,build,build-,7443,"::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13051,deployability,build,builds,13051,"t<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13058,deployability,build,build-,13058,"unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13325,deployability,build,builds,13325,"Unique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13332,deployability,build,build-,13332,"::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16940,deployability,build,build,16940,"ivate=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:17032,deployability,build,build,17032,"nal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:153,energy efficiency,optim,optimized,153,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:476,energy efficiency,optim,optimized,476,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:681,energy efficiency,optim,optimized,681,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:918,energy efficiency,optim,optimized,918,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1958,energy efficiency,optim,optimized,1958,"573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so. #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so. #7 0x00007ffff76d1770 in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3757,energy efficiency,current,current,3757," in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3916,energy efficiency,optim,optimized,3916,"lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4239,energy efficiency,optim,optimized,4239,"chOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4444,energy efficiency,optim,optimized,4444,".so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4681,energy efficiency,optim,optimized,4681,"""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5083,energy efficiency,core,core,5083," directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5248,energy efficiency,core,core,5248,"ut>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5376,energy efficiency,core,core,5376,"2) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5927,energy efficiency,optim,optimized,5927,"x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7124,energy efficiency,core,core,7124,"read_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::Proce",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7311,energy efficiency,core,core,7311,"k<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7611,energy efficiency,core,core,7611,"wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7777,energy efficiency,core,core,7777,"&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8555,energy efficiency,core,core,8555,"x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, fut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8675,energy efficiency,core,core,8675,"tSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8784,energy efficiency,core,core,8784,"src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8911,energy efficiency,core,core,8911,"src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sys",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9526,energy efficiency,optim,optimized,9526,"false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9849,energy efficiency,optim,optimized,9849,":Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10054,energy efficiency,optim,optimized,10054,"print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10291,energy efficiency,optim,optimized,10291,"D = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10693,energy efficiency,core,core,10693," directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10858,energy efficiency,core,core,10858,"ut>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10983,energy efficiency,core,core,10983,"3803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:11540,energy efficiency,optim,optimized,11540,"555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:12737,energy efficiency,core,core,12737,"read_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:12924,energy efficiency,core,core,12924,"k<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13226,energy efficiency,core,core,13226,"it<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13361,energy efficiency,core,core,13361,"(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13468,energy efficiency,core,core,13468,":WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13623,energy efficiency,core,core,13623,"antRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x555555",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14014,energy efficiency,core,core,14014,"is=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14137,energy efficiency,core,core,14137,"in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14271,energy efficiency,core,core,14271,"ff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14421,energy efficiency,core,core,14421,"::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14541,energy efficiency,core,core,14541,"tsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14650,energy efficiency,core,core,14650,". #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or director",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:14777,energy efficiency,core,core,14777,":141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15494,energy efficiency,optim,optimized,15494,"op (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15776,energy efficiency,optim,optimized,15776,"/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15950,energy efficiency,optim,optimized,15950,"ock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16156,energy efficiency,optim,optimized,16156,"r ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 7059",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16296,energy efficiency,clock,clockid,16296,"usercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16559,energy efficiency,core,core,16559,"s/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16724,energy efficiency,core,core,16724," 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::uniqu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16849,energy efficiency,core,core,16849,"utex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:17203,energy efficiency,optim,optimized,17203,"c) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:17343,energy efficiency,clock,clockid,17343,"0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18394,energy efficiency,core,core,18394," at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18580,energy efficiency,core,core,18580,"ique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18739,energy efficiency,core,core,18739,"ex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18892,energy efficiency,core,core,18892,"::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x55555797",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18999,energy efficiency,load,load,18999,"Lock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19078,energy efficiency,core,core,19078,"::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19182,energy efficiency,load,load,19182,"=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19223,energy efficiency,core,core,19223,"ition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19374,energy efficiency,core,core,19374," at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19526,energy efficiency,core,core,19526,"e>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x555555",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19917,energy efficiency,core,core,19917,"x:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20040,energy efficiency,core,core,20040," hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20174,energy efficiency,core,core,20174,"int"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20324,energy efficiency,core,core,20324,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20444,energy efficiency,core,core,20444,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20553,energy efficiency,core,core,20553,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:20680,energy efficiency,core,core,20680,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7878,integrability,event,event,7878,"1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:8016,integrability,event,event,8016,"ck<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9335,integrability,Protocol,Protocol,9335,"6cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555574",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15203,integrability,Protocol,Protocol,15203,"ispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9322,interoperability,Share,Shared,9322,"5 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9335,interoperability,Protocol,Protocol,9335,"6cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555574",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15190,interoperability,Share,Shared,15190,"TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_wor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15203,interoperability,Protocol,Protocol,15203,"ispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:2674,modifiability,Inherit,InheritsFrom,2674,"fff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so. #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so. #7 0x00007ffff76d1770 in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13537,modifiability,Inherit,InheritsFrom,13537," /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_src/core/base/src/TTimer.cxx:146. #16 0x00007ffff6e9b670 in TTimer::CheckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19288,modifiability,Inherit,InheritsFrom,19288,"td::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19440,modifiability,Inherit,InheritsFrom,19440,"ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:153,performance,optimiz,optimized,153,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:476,performance,optimiz,optimized,476,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:681,performance,optimiz,optimized,681,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:918,performance,optimiz,optimized,918,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1958,performance,optimiz,optimized,1958,"573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so. #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so. #7 0x00007ffff76d1770 in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3916,performance,optimiz,optimized,3916,"lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4239,performance,optimiz,optimized,4239,"chOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4444,performance,optimiz,optimized,4444,".so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:4681,performance,optimiz,optimized,4681,"""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5927,performance,optimiz,optimized,5927,"x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7395,performance,Lock,Lock,7395,"4cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9526,performance,optimiz,optimized,9526,"false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9849,performance,optimiz,optimized,9849,":Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10054,performance,optimiz,optimized,10054,"print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:10291,performance,optimiz,optimized,10291,"D = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:11540,performance,optimiz,optimized,11540,"555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13008,performance,Lock,Lock,13008,"4cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15494,performance,optimiz,optimized,15494,"op (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15776,performance,optimiz,optimized,15776,"/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15950,performance,optimiz,optimized,15950,"ock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16156,performance,optimiz,optimized,16156,"r ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 7059",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:17203,performance,optimiz,optimized,17203,"c) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:18999,performance,load,load,18999,"Lock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:19182,performance,load,load,19182,"=..., __p=...) at /usr/include/c++/9/condition_variable:282. #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110. #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33. #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120. #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242. #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973. #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957. #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:21106,performance,time,times,21106,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9309,reliability,Robust,Robust,9309,"t.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15177,reliability,Robust,Robust,15177,"ff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:21167,reliability,sli,slightly,21167,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9309,safety,Robust,Robust,9309,"t.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15177,safety,Robust,Robust,15177,"ff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:73,security,sign,signal,73,"This is the gdb output in Release mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3836,security,sign,signal,3836," #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7395,security,Lock,Lock,7395,"4cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9446,security,sign,signal,9446,"007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:13008,security,Lock,Lock,13008,"4cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/huesof/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc9b0, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6fd9755 in TApplication::Class () at /home/huesof/builds/build-root_src-Desktop-Debug/core/G__Core.cxx:12360. #11 0x00007ffff6e10f79 in TApplication::IsA (this=0x7ffffffdce30) at /opt/root_src/core/base/inc/TApplication.h:162. #12 0x00007ffff6e51951 in TObject::InheritsFrom (this=0x7ffffffdce30, classname=0x7ffff789295d ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #13 0x00007ffff76e6205 in TGCommandPlugin::CheckRemote (this=0x5555566b5b30) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #14 0x00007ffff76e6f8b in TGCommandPlugin::HandleTimer (this=0x5555566b5b30, t=0x555557414fe0) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #15 0x00007ffff6e9b6d9 in TTimer::Notify (this=0x555557414fe0) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15436,security,sign,signal,15436,"xSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3765,testability,context,context,3765,"mmandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/fut",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9407,testability,trace,trace,9407,"/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1475,usability,Stop,Stop,1475,"ptimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1511,usability,user,user,1511,"d=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::Wr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1627,usability,user,user,1627,"00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:1749,usability,user,user,1749,"nix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655. #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so. #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so. #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119. #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250. #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848. #8 0x00007fffa43c802a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):. #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555620d3b0, cond=0x5555562a4110) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562a4110, mutex=0x55555620d3b0) at pthread_cond_wait.c:655. #3 0x00007ffff68678bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff536e1c8 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock() () from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so. #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so. #7 0x00007f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:3524,usability,user,user,3524,"from /opt/root/lib/libThread.so. #5 0x00007ffff709ec6b in TApplication::Class() () from /opt/root/lib/libCore.so. #6 0x00007ffff6f3a04d in TObject::InheritsFrom(char const*) const () from /opt/root/lib/libCore.so. #7 0x00007ffff76d1770 in TGCommandPlugin::CheckRemote(char const*) () from /opt/root/lib/libGui.so. #8 0x00007ffff76d1970 in TGCommandPlugin::HandleTimer(TTimer*) () from /opt/root/lib/libGui.so. #9 0x00007ffff6f7eced in TTimer::Notify() () from /opt/root/lib/libCore.so. #10 0x00007ffff6f7e771 in TTimer::CheckTimer(TTime const&) () from /opt/root/lib/libCore.so. #11 0x00007ffff705487f in TUnixSystem::DispatchTimers(bool) () from /opt/root/lib/libCore.so. #12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so. #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so. #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so. #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context. ```. And here in Debug mode:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5443,usability,Stop,Stop,5443,"ptimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5479,usability,user,user,5479,"d=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5595,usability,user,user,5595,"fffa2a96700 (LWP 23702)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::conditio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:5717,usability,user,user,5717,"=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc640e ""%s finished."") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba8943 in RThread::Stop (this=0x5555569a6820) at /home/user/Desktop/zdt/gui/RThread.cpp:116. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23653)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:7431,usability,user,user,7431,"any::wait<std::unique_lock<std::mutex> > (this=0x5555562dea30, __lock=...) at /usr/include/c++/8/condition_variable:263. #5 0x00007ffff4fc31fc in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x5555562dea30, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:272. #6 0x00007ffff4fbf283 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f8) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:190. #7 0x00007ffff4fcd2f6 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x5555562de9f0) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:42. #8 0x00007ffff701788b in ROOT::TVirtualRWMutex::Lock (this=0x5555562de9f0) at /home/user/builds/build-root_src-Desktop-Debug/include/TVirtualRWMutex.h:79. #9 0x00007ffff76abb7a in TLockGuard::TLockGuard (this=0x7ffffffdc988, mutex=0x5555562de9f0) at /opt/root_src/core/base/inc/TVirtualMutex.h:77. #10 0x00007ffff6f87040 in TObjectSpy::TObjectSpy (this=0x7ffffffdc9e0, obj=0x5555573f9700, fixMustCleanupBit=true) at /opt/root_src/core/gui/src/TObjectSpy.cxx:40. #11 0x00007ffff771f746 in TGFrame::HandleEvent (this=0x5555573f9700, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGFrame.cxx:462. #12 0x00007ffff76d18e6 in TGClient::HandleEvent (this=0x5555563eef20, event=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9018,usability,user,user,9018,"t=0x7ffffffdcac0) at /opt/root_src/gui/gui/src/TGClient.cxx:846. #13 0x00007ffff76d11bc in TGClient::ProcessOneEvent (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:656. #14 0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:9244,usability,Statu,Status,9244,"eInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703. #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117. #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067. #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. ```. again debug, but a different trace. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:11050,usability,Stop,Stop,11050,"=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23803)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747e030, cond=0x55555747df80) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x55555747df80, mutex=0x55555747e030) at pthread_cond_wait.c:655. #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747df70) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", nb=2, ar=0x7fffa2a90420, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff4fd4857 in TThread::Printf (fmt=0x7ffff7bc641c ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7ba89e8 in RThread::Stop (this=0x5555569a4f70) at /home/huesof/Desktop/zdt/gui/RThread.cpp:120. #7 0x00007ffff7bb778e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:1251. #8 0x00007ffff7bb5184 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/huesof/Desktop/zdt/gui/MainWindow.cpp:849. #9 0x00007fffa21d802a in ?? (). #10 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 23769)):. #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88. #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x555556100770, cond=0x5555562dea30) at pthread_cond_wait.c:502. #2 __pthread_cond_wait (cond=0x5555562dea30, mutex=0x555556100770) at pthread_cond_wait.c:655. #3 0x00007ffff665c8bc in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff4fc44cb in std::_V2::condition_variable_any::w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15112,usability,Statu,Status,15112,"...) at /opt/root_src/core/base/src/TTimer.cxx:132. #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 70601",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:15282,usability,user,user-images,15282,"ixSystem.cxx:2956. #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406. #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356. #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112. (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}. (gdb) . ```. Valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:. ```. Thread 1 ""runGUI"" received signal SIGINT, Interrupt. futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 183	../sysdeps/nptl/futex-internal.h: No such file or directory. (gdb) info threads. Id Target Id Frame . * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (absti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:16916,usability,Stop,Stop,16916,"futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638. #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65. #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThread.cxx:1067. #5 0x00007ffff66c24d7 in TThread::Printf (fmt=0x7ffff7fbc0f1 ""Start: %s"") at /opt/root_src/core/thread/src/TThread.cxx:953. #6 0x00007ffff7fa0617 in RThread::Stop() () from /tmp/zdt/build/gui/libZDTgui.so. #7 0x00007ffff7fa6785 in MainWindow::SaveAndExit() () from /tmp/zdt/build/gui/libZDTgui.so. #8 0x00007ffee4c2f02a in ?? (). #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff523cb80 (LWP 705986)):. #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183. #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555556a2a610, cond=0x555556a28e70) at pthread_cond_wait.c:508. #2 __pthread_cond_wait (cond=0x555556a28e70, mutex=0x555556a2a610) at pthread_cond_wait.c:638. #3 0x00007ffff7157e30 in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/x86_64-linux-gnu/libstdc++.so.6. #4 0x00007ffff66b1225 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x555556a28e70, __lock=...) at /usr/include/c++/9/condition_variable:273. #5 0x00007ffff66afe12 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:21221,usability,user,user-images,21221,"d69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871. #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447. #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141. #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275. #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146. #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132. #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956. #19 0x00007ffff7737353 in TUnixSystem::DispatchOneEvent (this=0x5555555c3800, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096. #20 0x00007ffff7610e47 in TSystem::InnerLoop (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:408. #21 0x00007ffff7610bb8 in TSystem::Run (this=0x5555555c3800) at /opt/root_src/core/base/src/TSystem.cxx:358. #22 0x00007ffff75976bd in TApplication::Run (this=0x7ffffffdd280, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604. #23 0x000055555555cd0e in main (). (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex. $1 = {<std::__mutex_base> = {_M_mutex = {__data = {__lock = 0, __count = 1, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, . __size = ""\000\000\000\000\001"", '\000' <repeats 34 times>, __align = 4294967296}}, <No data fields>}. ```. with slightly more warnings in valgrind:. ![image](https://user-images.githubusercontent.com/10653970/125312795-e681c180-e334-11eb-8eea-1446748de6bc.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:25,performance,lock,lock,25,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:255,performance,lock,locking,255,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:25,security,lock,lock,25,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:255,security,lock,locking,255,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:95,usability,stop,stopping,95,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:327,usability,user,user-images,327,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:440,usability,user,user-images,440,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:553,usability,user,user-images,553,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/issues/8365:666,usability,user,user-images,666,"One hypothesis: there is lock is due to a race between TThread::Join and TThread::Printf. When stopping, the thread is asked to ""join"". After that, a Printf is issued, which creates a TThreadTimer and retrieves TThread::Self and TThread::GetThread before locking the mutex, and then it hangs at condimp->Wait. ![image](https://user-images.githubusercontent.com/10653970/125309260-e633f700-e331-11eb-8023-6745087af802.png). ![image](https://user-images.githubusercontent.com/10653970/125309356-fa77f400-e331-11eb-9ff5-028903831c45.png). ![image](https://user-images.githubusercontent.com/10653970/125309149-cd2b4600-e331-11eb-963b-292a399eb9dc.png). ![image](https://user-images.githubusercontent.com/10653970/125317633-7164bb00-e339-11eb-9bdd-a399c4483fa2.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8365
https://github.com/root-project/root/pull/8366:13,availability,error,error,13,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:68,availability,error,error,68,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:211,availability,error,errors,211,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:238,availability,error,error,238,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:271,availability,failur,failure,271,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:7,deployability,build,build,7,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:29,deployability,log,logic,29,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:125,deployability,build,build,125,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:177,deployability,build,build,177,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:183,deployability,log,log,183,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:203,deployability,log,log,203,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:271,deployability,fail,failure,271,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:286,deployability,log,log,286,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:332,deployability,fail,failed,332,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:109,integrability,messag,message,109,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:147,integrability,messag,message,147,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:258,integrability,messag,message,258,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:109,interoperability,messag,message,109,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:147,interoperability,messag,message,147,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:258,interoperability,messag,message,258,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:13,performance,error,error,13,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:68,performance,error,error,68,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:211,performance,error,errors,211,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:238,performance,error,error,238,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:271,performance,failur,failure,271,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:271,reliability,fail,failure,271,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:332,reliability,fail,failed,332,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:13,safety,error,error,13,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:19,safety,detect,detection,19,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:29,safety,log,logic,29,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:68,safety,error,error,68,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:183,safety,log,log,183,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:203,safety,log,log,203,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:211,safety,error,errors,211,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:238,safety,error,error,238,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:286,safety,log,log,286,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:310,safety,test,tests,310,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:326,safety,test,tests,326,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:19,security,detect,detection,19,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:29,security,log,logic,29,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:183,security,log,log,183,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:203,security,log,log,203,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:286,security,log,log,286,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:29,testability,log,logic,29,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:183,testability,log,log,183,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:203,testability,log,log,203,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:286,testability,log,log,286,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:310,testability,test,tests,310,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:326,testability,test,tests,326,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:13,usability,error,error,13,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:68,usability,error,error,68,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:211,usability,error,errors,211,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:238,usability,error,error,238,"The CI build error detection logic is not very clever. I quoted the error the PR is fixing in the git commit message. The CI build puts the commit message from the PR in the CI build log. Then scans the log for errors and tags the quoted error in the commit message as a failure... The log actually says: 100% tests passed, 0 tests failed out of 1120.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:90,availability,error,errors,90,@ellert thanks for the PR! it's a known wart with the windows PR builds that they pick up errors/warnings from the PR description itself :sweat_smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:65,deployability,build,builds,65,@ellert thanks for the PR! it's a known wart with the windows PR builds that they pick up errors/warnings from the PR description itself :sweat_smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:90,performance,error,errors,90,@ellert thanks for the PR! it's a known wart with the windows PR builds that they pick up errors/warnings from the PR description itself :sweat_smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:90,safety,error,errors,90,@ellert thanks for the PR! it's a known wart with the windows PR builds that they pick up errors/warnings from the PR description itself :sweat_smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/pull/8366:90,usability,error,errors,90,@ellert thanks for the PR! it's a known wart with the windows PR builds that they pick up errors/warnings from the PR description itself :sweat_smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8366
https://github.com/root-project/root/issues/8367:22,availability,fault,fault,22,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:42,availability,ping,ping,42,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:22,energy efficiency,fault,fault,22,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:22,performance,fault,fault,22,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:22,reliability,fault,fault,22,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:163,reliability,Doe,Does,163,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:22,safety,fault,fault,22,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:83,safety,valid,valid,83,"Hi,. the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,availability,fault,fault,160,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:180,availability,ping,ping,180,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,energy efficiency,fault,fault,160,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,performance,fault,fault,160,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,reliability,fault,fault,160,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:337,reliability,Doe,Does,337,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,safety,fault,fault,160,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:258,safety,valid,valid,258,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:410,security,auth,authored,410,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:626,security,auth,auth,626,"Hi,. That solves the problem. Thank you very much. Best,. Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>. wrote:. > Hi,. > the segmentation fault is terrible ( ping @Axel-Naumann. > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you. > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that. > fix the crash? >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5110,availability,error,error,5110,"/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5286,availability,error,error,5286,"b/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5432,availability,error,error,5432,"tor<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5612,availability,error,error,5612,"cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6008,availability,error,error,6008,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6426,availability,error,errors,6426,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6545,availability,error,error,6545,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6625,availability,error,error,6625,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:425,deployability,stack,stack,425,"The segfault itself seems to be a problem in how the interpreter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:871,deployability,Stack,StackTrace,871,"The segfault itself seems to be a problem in how the interpreter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:797,energy efficiency,core,core,797,"The segfault itself seems to be a problem in how the interpreter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:910,energy efficiency,core,core,910,"The segfault itself seems to be a problem in how the interpreter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1059,energy efficiency,core,core,1059,"ter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::Q",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1169,energy efficiency,core,core,1169," get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1255,energy efficiency,core,core,1255,".. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1441,energy efficiency,core,core,1441," threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1596,energy efficiency,core,core,1596," do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:4429,energy efficiency,alloc,allocator,4429,"g::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] () from /home/blue/ROOT/master/_build/lib/libCling.so. #20 0x00007fb032de0c29 in clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #21 0x00007fb03327d4d4 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #22 0x00007fb032d2ca9a in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #23 0x00007fb032cfd991 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:4705,energy efficiency,alloc,allocator,4705,"#21 0x00007fb03327d4d4 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #22 0x00007fb032d2ca9a in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #23 0x00007fb032cfd991 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5138,energy efficiency,core,core,5138,"4 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5314,energy efficiency,core,core,5314,"b032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ======================================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5472,energy efficiency,core,core,5472,"ptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Proc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5652,energy efficiency,core,core,5652,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared iden",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5833,energy efficiency,core,core,5833,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6036,energy efficiency,core,core,6036,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6143,energy efficiency,core,core,6143,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1729,modifiability,Scal,ScalarExprEmitter,1729,"ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) () from /home/blue/ROOT/master/_build/lib/libCling.so. #15 0x00007fb032ea0e0c in clan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1863,modifiability,Scal,ScalarExprEmitter,1863,"tackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) () from /home/blue/ROOT/master/_build/lib/libCling.so. #15 0x00007fb032ea0e0c in clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) () from /home/blu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1882,modifiability,Scal,ScalarConversionOpts,1882,"4b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) () from /home/blue/ROOT/master/_build/lib/libCling.so. #15 0x00007fb032ea0e0c in clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) () from /home/blue/ROOT/master/_build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:3743,performance,Multiplex,MultiplexConsumer,3743,"deGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #16 0x00007fb032ee86ca in clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) () from /home/blue/ROOT/master/_build/lib/libCling.so. #17 0x00007fb032ee4e33 in clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) () from /home/blue/ROOT/master/_build/lib/libCling.so. #18 0x00007fb032ee5533 in clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) () from /home/blue/ROOT/master/_build/lib/libCling.so. #19 0x00007fb032eec6b0 in clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] () from /home/blue/ROOT/master/_build/lib/libCling.so. #20 0x00007fb032de0c29 in clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #21 0x00007fb03327d4d4 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #22 0x00007fb032d2ca9a in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #23 0x00007fb032cfd991 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/blue/ROOT/master/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5110,performance,error,error,5110,"/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5286,performance,error,error,5286,"b/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5432,performance,error,error,5432,"tor<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5612,performance,error,error,5612,"cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6008,performance,error,error,6008,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6426,performance,error,errors,6426,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6545,performance,error,error,6545,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6625,performance,error,error,6625,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5110,safety,error,error,5110,"/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5286,safety,error,error,5286,"b/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5432,safety,error,error,5432,"tor<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5612,safety,error,error,5612,"cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6008,safety,error,error,6008,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6426,safety,error,errors,6426,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6545,safety,error,error,6545,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6625,safety,error,error,6625,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1424,security,sign,signum,1424,"ack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1579,security,sign,signum,1579,"07fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:1656,security,sign,signal,1656,"in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/blue/ROOT/master/_build/lib/libCling.so. #12 0x00007fb032e4a010 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/blue/ROOT/master/_build/lib/libCling.so. #13 0x00007fb032e48014 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/blue/ROOT/master/_build/lib/libCling.so. #14 0x00007fb032e907d9 in clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) () fro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6570,security,ident,identifier,6570,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6650,security,ident,identifier,6650,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:431,testability,trace,trace,431,"The segfault itself seems to be a problem in how the interpreter handles unnamed macros:. ```cpp. // foo.C. {. for(i=0; i < 0;); // the second usage of `i` is necessary to get a segfault. }. ```. yields:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fb037c9b9ea in wait4 () from /usr/lib/libc.so.6. #1 0x00007fb037c19a2b in do_system () from /usr/lib/libc.so.6. #2 0x00007fb0385bb6f2 in TUnixSystem::Exec (this=0x564b032cc800, shellcmd=0x564b0483e650 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 62718 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fb0385bbfe4 in TUnixSystem::StackTrace (this=0x564b032cc800) at ../core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fb0385bfd1a in TUnixSystem::DispatchSignals (this=0x564b032cc800, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3649. #5 0x00007fb0385b7340 in SigHandler (sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:407. #6 0x00007fb0385bfc1e in sighandler (sig=11) at ../core/unix/src/TUnixSystem.cxx:3620. #7 0x00007fb0385b02ae in textinput::TerminalConfigUnix::HandleSignal (this=0x7fb038799120 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #8 0x00007fb0385affb4 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at ../core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #9 <signal handler called>. #10 0x00007fb0330cb818 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/blue/ROOT/master/_build/lib/libCling.so. #11 0x00007fb0330cddd4 in clang::CodeGen:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5110,usability,error,error,5110,"/_build/lib/libCling.so. #24 0x00007fb032cfe69d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/blue/ROOT/master/_build/lib/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5286,usability,error,error,5286,"b/libCling.so. #25 0x00007fb032c735bb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5432,usability,error,error,5432,"tor<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/master/_build/lib/libCling.so. #26 0x00007fb032c73add in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:5612,usability,error,error,5612,"cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6008,usability,error,error,6008,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6426,usability,error,errors,6426,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6545,usability,error,error,6545,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:6625,usability,error,error,6625,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #27 0x00007fb032d3c0bc in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/blue/ROOT/master/_build/lib/libCling.so. #28 0x00007fb032a9843c in TCling::ProcessLine (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:2568. #29 0x00007fb032a9beec in TCling::ProcessLineSynch (this=0x564b0333c7e0, line=0x564b04468b80 "".x /tmp/./foo.C"", error=0x7ffe65ffc940) at ../core/metacling/src/TCling.cxx:3494. #30 0x00007fb038421dc5 in TApplication::ExecuteFile (file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1608. #31 0x00007fb0384214e4 in TApplication::ProcessFile (this=0x564b03325550, file=0x7ffe65ffc9a3 ""foo.C"", error=0x7ffe65ffc940, keep=false) at ../core/base/src/TApplication.cxx:1480. #32 0x00007fb0384212f9 in TApplication::ProcessLine (this=0x564b03325550, line=0x7ffe65ffc9a0 "".x foo.C"", sync=false, err=0x7ffe65ffc940) at ../core/base/src/TApplication.cxx:1453. #33 0x00007fb0387d6e2b in TRint::ProcessLineNr (this=0x564b03325550, filestem=0x7fb0387e6742 ""ROOT_cli_"", line=0x7ffe65ffc9a0 "".x foo.C"", error=0x7ffe65ffc940) at ../core/rint/src/TRint.cxx:766. #34 0x00007fb0387d564c in TRint::Run (this=0x564b03325550, retrn=false) at ../core/rint/src/TRint.cxx:424. #35 0x0000564b028ef1f0 in main (argc=1, argv=0x7ffe65ffeb28) at ../main/src/rmain.cxx:30. ===========================================================. ```. while. ```cpp. // foo.C. void foo() {. for(i=0; i < 0;);. }. ```. yields the expected compilation errors:. ```. /tmp root -l foo.C. root [0]. Processing foo.C... In file included from input_line_8:1:. /tmp/foo.C:2:7: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. /tmp/foo.C:2:12: error: use of undeclared identifier 'i'. for(i=0; i < 0;);. ^. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,availability,error,error,160,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:27,energy efficiency,current,current,27,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:72,energy efficiency,current,current,72,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,performance,error,error,160,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:52,reliability,doe,does,52,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,safety,error,error,160,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:185,security,ident,identifier,185,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:160,usability,error,error,160,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```. for(i=0; i < 0;);. input_line_3:2:6: error: use of undeclared identifier 'i'. for(auto i=0; i < 0;). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:29,testability,understand,understand,29,@devajithvs do you happen to understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:11,deployability,observ,observed,11,Same thing observed here: https://its.cern.ch/jira/browse/ROOT-10309,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:11,testability,observ,observed,11,Same thing observed here: https://its.cern.ch/jira/browse/ROOT-10309,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:25,interoperability,specif,specific,25,"It only happens for this specific case `for(i=0; i<0;);`, `for(i=0;;);` works completely fine. It happens because `TClingCallbacks.cxx` tries to add multiple addDecls for the same variable `i` for runtime resolution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:180,modifiability,variab,variable,180,"It only happens for this specific case `for(i=0; i<0;);`, `for(i=0;;);` works completely fine. It happens because `TClingCallbacks.cxx` tries to add multiple addDecls for the same variable `i` for runtime resolution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:78,safety,compl,completely,78,"It only happens for this specific case `for(i=0; i<0;);`, `for(i=0;;);` works completely fine. It happens because `TClingCallbacks.cxx` tries to add multiple addDecls for the same variable `i` for runtime resolution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/issues/8367:78,security,compl,completely,78,"It only happens for this specific case `for(i=0; i<0;);`, `for(i=0;;);` works completely fine. It happens because `TClingCallbacks.cxx` tries to add multiple addDecls for the same variable `i` for runtime resolution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8367
https://github.com/root-project/root/pull/8369:36,performance,time,time,36,Thank you so much for investing the time to make new commits!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:112,deployability,build,build,112,"@egpbos please fork also [rootest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:88,performance,time,timeouts,88,"@egpbos please fork also [rootest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:80,safety,prevent,prevent,80,"@egpbos please fork also [rootest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:88,safety,timeout,timeouts,88,"@egpbos please fork also [rootest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:80,security,preven,prevent,80,"@egpbos please fork also [rootest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:25,usability,tip,tip,25,@bellenot thanks for the tip. Should I fork to the same org where this ROOT dev branch is at (github.com/roofit-dev) or to my personal account?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:126,usability,person,personal,126,@bellenot thanks for the tip. Should I fork to the same org where this ROOT dev branch is at (github.com/roofit-dev) or to my personal account?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:20,usability,person,personal,20,"Just a fork to your personal account is sufficient. The scrips are looking for `egpbos/roottest`. You don't need to add any commits to this fork of roottest, just forking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:370,availability,replic,replication,370,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:131,deployability,log,logs,131,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:279,deployability,upgrad,upgrade,279,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:304,integrability,transform,transformation,304,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:304,interoperability,transform,transformation,304,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:279,modifiability,upgrad,upgrade,279,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:294,modifiability,paramet,parameter,294,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:131,safety,log,logs,131,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:453,safety,review,review,453,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:560,safety,review,review,560,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:131,security,log,logs,131,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:131,testability,log,logs,131,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:453,testability,review,review,453,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:560,testability,review,review,560,"@lmoneta I have removed all the second derivative and step size code. As you suspected, it was all unnecessary. Looking back at my logs, it seems I just forgot to clean them up after introducing ExternalInternalGradientCalculator. This, together with the `long double` precision upgrade of the parameter transformation classes, allows for perfect bitwise floating point replication of the gradient calculation outside of Minuit. Thanks for the thorough review! I also took care of the copyright lines and fixed some additional layout issues. Ready for a final review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:13,availability,failur,failure,13,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:40,availability,failur,failure,40,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:13,deployability,fail,failure,13,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:40,deployability,fail,failure,40,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:13,performance,failur,failure,13,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:40,performance,failur,failure,40,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:13,reliability,fail,failure,13,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:40,reliability,fail,failure,40,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/issues/8370:36,integrability,inject,injects,36,@Axel-Naumann is this because cling injects a `using namespace std`? https://godbolt.org/z/9KPxPcYEr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:36,security,inject,injects,36,@Axel-Naumann is this because cling injects a `using namespace std`? https://godbolt.org/z/9KPxPcYEr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:27,deployability,fail,fail,27,Thanks. Since when does it fail?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:19,reliability,doe,does,19,Thanks. Since when does it fail?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:27,reliability,fail,fail,27,Thanks. Since when does it fail?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:7,availability,error,error,7,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:16,energy efficiency,current,currently,16,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:7,performance,error,error,7,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:7,safety,error,error,7,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:7,usability,error,error,7,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:587,usability,progress,progress,587,"> This error is currently causing some developments for the LHCb experiment to be on stand-by. I don't know what to suggest here, honestly. We cannot remove the interpreter's `using namespace std` - the only thing we *could* possibly do is to replace it with a generous set of `using std::foo`s. Even then, any might be part of that set. How attached are you to that function name? (Think of `ns::string` or `ns::cout` - most people would probably argue that these are ""dangerous"" names.) Changing it to anything else would work around the issue and allow some of LHCb's developments to progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:140,interoperability,conflict,conflict,140,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:618,interoperability,specif,specific,618,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:379,performance,time,time,379,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:206,reliability,pra,pragmatic,206,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:469,safety,test,test,469,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:486,safety,test,test,486,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:469,testability,test,test,469,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:486,testability,test,test,486,"@Axel-Naumann thanks having a look at this. . This is new code, so I guess so far we have just been lucky that we haven't created a similar conflict. . While a bit annoying, I think you are right. The most pragmatic workaround will be for us to rename that function. . If you don't mind, I've 2 follow-up questions on this. - When first trying to debug this, I was having a hard time figuring out what is actually feed to cling. . Is there a flag I can add to `root -l test.cpp` or `.x test.cpp` to spit out the preprocessed C++? . - What's the reason for the `using namespace std`? Is it possible to disable that for specific calls to root?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:23,availability,error,error,23,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:718,availability,error,error,718,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:32,energy efficiency,current,currently,32,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:948,energy efficiency,current,currently,948,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:23,performance,error,error,23,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:718,performance,error,error,718,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:686,reliability,doe,does,686,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:862,reliability,doe,doesn,862,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:23,safety,error,error,23,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:566,safety,avoid,avoid,566,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:718,safety,error,error,718,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:784,safety,test,test,784,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:852,safety,test,test,852,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:784,testability,test,test,784,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:852,testability,test,test,852,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:23,usability,error,error,23,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:718,usability,error,error,718,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:995,usability,minim,minimal,995,"@Axel-Naumann by `This error is currently causing some developments for the LHCb experiment to be on stand-by` I just wanted to point out that this is a problem affecting the software developments of one of the LHC experiments (just in case you increase the priority of them rather than of other general issues). I also agree that the most straight-forward solution to us is changing the names of those functions. However, I have been always surprised that the ROOT interpreter includes the ""dangerous"" `using namespace std;` line, and I wonder if there is a way to avoid that (like via an instruction that can be passed to the interpreter). An important note is that the example above does not entirely reproduce the error that we see. We have run into a situation where `root -l -q test.cpp+` compiles and runs fine (also with `g++`) but `root -l -q test.cpp` doesn't, even in the situation where we include the line `using namespace std;`. I am currently struggling to create a more accurate minimal working example.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:966,deployability,unload,unloaded,966,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1366,deployability,fail,fails,1366,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1429,deployability,stack,stack,1429,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:998,integrability,inject,injected,998,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1110,performance,I/O,I/O,1110,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1366,reliability,fail,fails,1366,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:881,safety,input,input,881,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:914,safety,input,input,914,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1141,safety,valid,valid,1141,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:998,security,inject,injected,998,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:45,testability,understand,understand,45,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:1027,testability,context,context,1027,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:28,usability,help,help,28,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:103,usability,user,user,103,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:348,usability,user,users,348,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:643,usability,help,help,643,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:881,usability,input,input,881,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:914,usability,input,input,914,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know! I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:120,energy efficiency,adapt,adapted,120,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:120,integrability,adapt,adapted,120,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:120,interoperability,adapt,adapted,120,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:260,interoperability,compatib,compatibility,260,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:397,interoperability,compatib,compatibility,397,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:120,modifiability,adapt,adapted,120,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:149,safety,compl,completely,149,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:149,security,compl,completely,149,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:350,security,modif,modifications,350,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:16,testability,understand,understand,16,"@Axel-Naumann I understand your pain too. Applying this kind of fixes when everybody else in the world have their codes adapted to the old ROOT (and completely relying on `using namespace std;`) is a source of troubles and a showstopper for breaking backwards compatibility. I was wondering, however, if in ROOT 7 you would be including this kind of modifications since you are breaking backwards compatibility there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:125,availability,consist,consistency,125,Another option is to provide an explicit 'opt out' for those that 'want to do the right thing' -- eg. for environments where consistency with other compilers matters more than the backwards compatible behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:190,interoperability,compatib,compatible,190,Another option is to provide an explicit 'opt out' for those that 'want to do the right thing' -- eg. for environments where consistency with other compilers matters more than the backwards compatible behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:125,usability,consist,consistency,125,Another option is to provide an explicit 'opt out' for those that 'want to do the right thing' -- eg. for environments where consistency with other compilers matters more than the backwards compatible behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:201,usability,behavi,behavior,201,Another option is to provide an explicit 'opt out' for those that 'want to do the right thing' -- eg. for environments where consistency with other compilers matters more than the backwards compatible behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:239,deployability,stack,stack,239,"Yes we had discussed that in the past `root --pedantic` :-) What's your favorite way of selecting this mode? I.e. how do we enable this for @GerhardRaven and @mramospe but not for the regular LHCb physicist using ROOT from LHCb's software stack to do their plots? I can think of: if you use `root.exe` or `import ROOT` you get `using namespace std`, unless you turn it off with `root.exe --pedantic` or `import ROOT-pedantic` or whatever. If you just link against `libCore` you have the pedantic mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:100,deployability,version,versions,100,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:100,integrability,version,versions,100,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:256,integrability,interfac,interfaces,256,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:134,interoperability,compatib,compatibility,134,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:243,interoperability,incompatib,incompatible,243,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:256,interoperability,interfac,interfaces,256,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:100,modifiability,version,versions,100,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:256,modifiability,interfac,interfaces,256,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:44,usability,stop,stopping,44,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:201,usability,help,help,201,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:272,usability,tool,tools,272,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build! cc: @ioanaif,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:26,safety,review,review,26,@lmoneta could you please review the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:26,testability,review,review,26,@lmoneta could you please review the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:346,availability,State,State,346,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:554,availability,error,error,554,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:841,availability,error,error,841,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:174,deployability,BUILD,BUILDTYPE,174,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:184,deployability,Releas,Release,184,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:421,deployability,BUILD,BUILDTYPE,421,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:431,deployability,Releas,Release,431,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:708,deployability,BUILD,BUILDTYPE,708,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:718,deployability,Releas,Release,718,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:346,integrability,State,State,346,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:215,performance,perform,performance-,215,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:462,performance,perform,performance-,462,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:554,performance,error,error,554,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:749,performance,perform,performance-,749,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:841,performance,error,error,841,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:554,safety,error,error,554,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:841,safety,error,error,841,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:215,usability,perform,performance-,215,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:462,usability,perform,performance-,462,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:554,usability,error,error,554,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:749,usability,perform,performance-,749,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:841,usability,error,error,841,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:. ```. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’. TFormula::GradientStorage result(Npar);. ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope. eval(h, f, x, result.data());. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:126,safety,review,review,126,@oshadura I have put up a PR for that a few minutes ago: https://github.com/root-project/rootbench/pull/233. Could you please review it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:126,testability,review,review,126,@oshadura I have put up a PR for that a few minutes ago: https://github.com/root-project/rootbench/pull/233. Could you please review it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8379:169,availability,operat,operation,169,"Would an alternate solution be:. ```. std::atomic<Bool_t> fIsRunning; //True when in event loop (Run() has been called). ```. ? Taking the global lock is an ""expensive"" operation compared to setting/reading a bool and using a std::atomic should be sufficient to insure correct read/write.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:85,integrability,event,event,85,"Would an alternate solution be:. ```. std::atomic<Bool_t> fIsRunning; //True when in event loop (Run() has been called). ```. ? Taking the global lock is an ""expensive"" operation compared to setting/reading a bool and using a std::atomic should be sufficient to insure correct read/write.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:146,performance,lock,lock,146,"Would an alternate solution be:. ```. std::atomic<Bool_t> fIsRunning; //True when in event loop (Run() has been called). ```. ? Taking the global lock is an ""expensive"" operation compared to setting/reading a bool and using a std::atomic should be sufficient to insure correct read/write.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:146,security,lock,lock,146,"Would an alternate solution be:. ```. std::atomic<Bool_t> fIsRunning; //True when in event loop (Run() has been called). ```. ? Taking the global lock is an ""expensive"" operation compared to setting/reading a bool and using a std::atomic should be sufficient to insure correct read/write.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:43,availability,error,error,43,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:330,availability,operat,operator,330,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:1086,availability,operat,operator,1086,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:1156,availability,operat,operator,1156,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:1321,deployability,stack,stack,1321,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:271,energy efficiency,load,load,271,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:931,interoperability,conflict,conflicts,931,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:43,performance,error,error,43,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:239,performance,Lock,Locks,239,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:271,performance,load,load,271,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:987,performance,Lock,Locks,987,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:43,safety,error,error,43,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:239,security,Lock,Locks,239,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:987,security,Lock,Locks,987,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:43,usability,error,error,43,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:. ```. Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2. Locks held: none. at 0x4E5E9BB: load (atomic_base.h:396). by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86). by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148). by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032). by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950). by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51). by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258). by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828). by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so). by 0x60E86DA: start_thread (pthread_create.c:463). by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1. Locks held: none. at 0x4E5EA37: store (atomic_base.h:374). by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267). by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79). by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622). by 0x11D768: main (main.cxx:112). Address 0x1ffefdf270 is on thread #1's stack. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:35,safety,valid,valid,35,Helgrind is not good at looking at valid use of atomic in general ... See also (for the record): https://www.valgrind.org/docs/manual/hg-manual.html#hg-manual.effective-use,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:159,usability,effectiv,effective-use,159,Helgrind is not good at looking at valid use of atomic in general ... See also (for the record): https://www.valgrind.org/docs/manual/hg-manual.html#hg-manual.effective-use,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:21,safety,compl,complains,21,"I am not sure why it complains about ""that"" (new) atomic in particular, we used atomics quite a bit in the rest of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:21,security,compl,complains,21,"I am not sure why it complains about ""that"" (new) atomic in particular, we used atomics quite a bit in the rest of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:210,deployability,stack,stackoverflow,210,"> I am not sure why it complains about ""that"" (new) atomic in particular, we used atomics quite a bit in the rest of the code. Hmm I see. Maybe atomic_base has to be added to the suppression file? See: https://stackoverflow.com/a/39038531/7471760. There are some in 'helgrind-root.supp'. ```. {. *::Class use *::fgIsA which is an std::atomic. Helgrind:Race. fun:_ZN*5ClassEv. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:23,safety,compl,complains,23,"> I am not sure why it complains about ""that"" (new) atomic in particular, we used atomics quite a bit in the rest of the code. Hmm I see. Maybe atomic_base has to be added to the suppression file? See: https://stackoverflow.com/a/39038531/7471760. There are some in 'helgrind-root.supp'. ```. {. *::Class use *::fgIsA which is an std::atomic. Helgrind:Race. fun:_ZN*5ClassEv. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:23,security,compl,complains,23,"> I am not sure why it complains about ""that"" (new) atomic in particular, we used atomics quite a bit in the rest of the code. Hmm I see. Maybe atomic_base has to be added to the suppression file? See: https://stackoverflow.com/a/39038531/7471760. There are some in 'helgrind-root.supp'. ```. {. *::Class use *::fgIsA which is an std::atomic. Helgrind:Race. fun:_ZN*5ClassEv. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:98,performance,time,timers,98,"Amended. I am seeing a similar issue with TSystem.h, `TSeqCollection *fTimers{nullptr}; //List of timers`. There are data races when adding and removing timers from the list. Should I change it there also to atomic? (In this PR or in a separate one?) The issue is that it is a pointer and I think it's gonna be more complicated. Maybe defining a gTimersMutex would do the job as done in https://github.com/root-project/root/issues/8365#issuecomment-857280376?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:153,performance,time,timers,153,"Amended. I am seeing a similar issue with TSystem.h, `TSeqCollection *fTimers{nullptr}; //List of timers`. There are data races when adding and removing timers from the list. Should I change it there also to atomic? (In this PR or in a separate one?) The issue is that it is a pointer and I think it's gonna be more complicated. Maybe defining a gTimersMutex would do the job as done in https://github.com/root-project/root/issues/8365#issuecomment-857280376?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:316,safety,compl,complicated,316,"Amended. I am seeing a similar issue with TSystem.h, `TSeqCollection *fTimers{nullptr}; //List of timers`. There are data races when adding and removing timers from the list. Should I change it there also to atomic? (In this PR or in a separate one?) The issue is that it is a pointer and I think it's gonna be more complicated. Maybe defining a gTimersMutex would do the job as done in https://github.com/root-project/root/issues/8365#issuecomment-857280376?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:316,security,compl,complicated,316,"Amended. I am seeing a similar issue with TSystem.h, `TSeqCollection *fTimers{nullptr}; //List of timers`. There are data races when adding and removing timers from the list. Should I change it there also to atomic? (In this PR or in a separate one?) The issue is that it is a pointer and I think it's gonna be more complicated. Maybe defining a gTimersMutex would do the job as done in https://github.com/root-project/root/issues/8365#issuecomment-857280376?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:258,integrability,rout,routine,258,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:90,performance,time,timers,90,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:295,safety,safe,safe,295,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:150,testability,simpl,simplest,150,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:150,usability,simpl,simplest,150,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:328,usability,UseR,UseRWLock,328,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:. ```. fTimers->UseRWLock();. ```. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:254,availability,Error,Error,254,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:354,availability,Failur,Failure,354,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:354,deployability,Fail,Failure,354,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:62,interoperability,specif,specific,62,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:189,performance,lock,lock,189,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:254,performance,Error,Error,254,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:347,performance,lock,lock,347,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:354,performance,Failur,Failure,354,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:392,performance,lock,lock,392,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:435,performance,lock,locks,435,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:354,reliability,Fail,Failure,354,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:254,safety,Error,Error,254,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:189,security,lock,lock,189,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:347,security,lock,lock,347,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:392,security,lock,lock,392,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:435,security,lock,locks,435,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:254,usability,Error,Error,254,> Maybe defining a gTimersMutex would do the job. Adding case specific mutex requires to make '100% sure' that the code in the critical section can *\*never\** take/request the ROOT global lock [An example innocuous looking case is the calls to TObject::Error which will interrogate the related TClass object and thus sometimes request the global lock]. Failure to insure this lack of global lock taking will (inevitably) lead to dead locks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:146,deployability,upgrad,upgraded,146,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:146,modifiability,upgrad,upgraded,146,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:6,testability,simpl,simplest,6,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:6,usability,simpl,simplest,6,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:162,usability,support,support,162,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:173,usability,UseR,UseRWLock,173,"> The simplest solution though is to always create the fTimers . Also I noted that TOrdCollection (the type of fTimes at the moment) has not been upgraded yet to support ```UseRWLock()``` (it will silently ignore it), so we will need to also change the type to ```TList```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:11,availability,error,error,11,The roofit error on ROOT-ubuntu16/nortcxxmod are pre-existing (see https://github.com/root-project/root/pull/3760#issuecomment-858157849),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:11,performance,error,error,11,The roofit error on ROOT-ubuntu16/nortcxxmod are pre-existing (see https://github.com/root-project/root/pull/3760#issuecomment-858157849),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:11,safety,error,error,11,The roofit error on ROOT-ubuntu16/nortcxxmod are pre-existing (see https://github.com/root-project/root/pull/3760#issuecomment-858157849),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:11,usability,error,error,11,The roofit error on ROOT-ubuntu16/nortcxxmod are pre-existing (see https://github.com/root-project/root/pull/3760#issuecomment-858157849),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8383:472,integrability,sub,subtly,472,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:786,integrability,pub,public,786,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:954,integrability,pub,published,954,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1433,interoperability,compatib,compatibility,1433,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:407,modifiability,paramet,parameter,407,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:895,safety,review,review,895,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:895,testability,review,review,895,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:353,usability,document,documented,353,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1582,usability,user,user,1582,"To elaborate a bit on CLHEP: `RanluxppCompatEngineJamesP3 rng(314159265)` yields the same sequence as. ```c++. CLHEP::RanluxEngine r;. r.setSeed(314159265);. ```. but directly passing the seed to the constructor à la `CLHEP::RanluxEngine r(314159265)` gives different numbers. The reason is that the constructor, after invoking `setSeed` which works as documented, also calls `setSeeds` with the given seed parameter as the only entry in the seed table. That procedure is subtly different and could be mimicked as follows:. ```diff. diff --git a/math/mathcore/src/RanluxppEngineImpl.cxx b/math/mathcore/src/RanluxppEngineImpl.cxx. index 100f8d8638..bbf508a6a8 100644. --- a/math/mathcore/src/RanluxppEngineImpl.cxx. +++ b/math/mathcore/src/RanluxppEngineImpl.cxx. @@ -219,13 +219,14 @@ public:. // Multiplicative Congruential generator using formula constants of L'Ecuyer. // as described in ""A review of pseudorandom number generators"" (Fred James). // published in Computer Physics Communications 60 (1990) pages 329-344. - int64_t seed = s;. + int64_t seed = s & 0xffffff;. auto next = [&]() {. const int a = 0xd1a4, b = 0x9c4e, c = 0x2fb3, d = 0x7fffffab;. + int64_t oldSeed = seed;. int64_t k = seed / a;. seed = b * (seed - k * a) - k * c ;. if (seed < 0) seed += d;. - return seed & 0xffffff;. + return oldSeed & 0xffffff;. };. . // Iteration is reversed because the first number from the MCG goes to the. ```. That would add compatibility for the constructor, but leave no way to call `SetSeed` on an existing object. Moreover this scheme only uses the lower 24 bits of the user's seed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:55,integrability,interfac,interface,55,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:55,interoperability,interfac,interface,55,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:55,modifiability,interfac,interface,55,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:98,safety,test,testing,98,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:147,security,expos,expose,147,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:68,testability,understand,understand,68,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:98,testability,test,testing,98,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1089,availability,sli,slightly,1089,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1471,availability,avail,available,1471,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:68,deployability,continu,continuous,68,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:199,energy efficiency,current,current,199,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1076,integrability,interfac,interface,1076,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1076,interoperability,interfac,interface,1076,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:690,modifiability,deco,decorrelation,690,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1076,modifiability,interfac,interface,1076,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1202,modifiability,interm,intermediate,1202,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1358,modifiability,deco,decorrelation,1358,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:323,performance,perform,performance,323,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1444,performance,time,time,1444,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1089,reliability,sli,slightly,1089,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1471,reliability,availab,available,1471,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:19,safety,test,testing,19,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:79,safety,test,testing,79,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:90,safety,prevent,prevent,90,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1471,safety,avail,available,1471,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:90,security,preven,prevent,90,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1471,security,availab,available,1471,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:19,testability,test,testing,19,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:79,testability,test,testing,79,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:105,testability,regress,regressions,105,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1038,testability,simul,simulation,1038,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:313,usability,user,users,313,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:323,usability,perform,performance,323,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1119,usability,user,users,1119,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1252,usability,user,users,1252,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!). The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:0,availability,ping,ping,0,ping @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8385:300,availability,error,errors,300,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:154,deployability,version,version,154,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:260,deployability,version,version,260,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:347,deployability,version,version,347,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:154,integrability,version,version,154,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:260,integrability,version,version,260,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:347,integrability,version,version,347,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:11,modifiability,paramet,parameter,11,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:154,modifiability,version,version,154,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:260,modifiability,version,version,260,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:347,modifiability,version,version,347,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:300,performance,error,errors,300,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:355,reliability,doe,doesn,355,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:272,safety,avoid,avoid,272,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:300,safety,error,errors,300,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:300,usability,error,errors,300,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:769,availability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:769,deployability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:781,deployability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:769,integrability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:781,integrability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:781,interoperability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:971,interoperability,plug,plugins,971,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1043,interoperability,plug,plugin,1043,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1094,interoperability,plug,plugin,1094,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:769,modifiability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.363 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/490710c40bf15e2848e99f2902cde239b5c8f6a5/root-project/root/1fde1c3bef663d65836ac30f242744aa37da1167/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:268,availability,avail,available,268,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:130,deployability,fail,fails,130,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:179,deployability,instal,installed,179,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:305,deployability,instal,installed,305,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:130,reliability,fail,fails,130,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:268,reliability,availab,available,268,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:268,safety,avail,available,268,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:268,security,availab,available,268,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:156,availability,failur,failure,156,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:23,deployability,build,build,23,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:48,deployability,instal,installation,48,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:135,deployability,build,builds,135,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:156,deployability,fail,failure,156,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:156,performance,failur,failure,156,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:156,reliability,fail,failure,156,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:224,safety,review,review,224,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:224,testability,review,review,224,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:270,deployability,version,version,270,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:492,deployability,Build,Building,492,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:633,deployability,fail,fail-on-missing,633,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:61,integrability,messag,messages,61,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:270,integrability,version,version,270,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:61,interoperability,messag,messages,61,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:270,modifiability,version,version,270,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:633,reliability,fail,fail-on-missing,633,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:715,safety,review,review,715,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:789,safety,review,reviewer,789,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:526,security,control,controlled,526,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1014,security,hash,hash,1014,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:526,testability,control,controlled,526,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:715,testability,review,review,715,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:789,testability,review,reviewer,789,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:169,deployability,depend,dependency,169,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:241,deployability,build,build,241,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:605,deployability,build,build,605,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:876,deployability,build,build,876,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:939,deployability,configurat,configuration,939,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:989,deployability,build,builds,989,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1029,deployability,build,builds,1029," input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1047,deployability,configurat,configuration,1047," it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. Th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1126,deployability,depend,dependency,1126,"-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1691,deployability,depend,dependency,1691," get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2494,deployability,build,build,2494,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2818,deployability,fail,fail-on-missing,2818,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:3218,deployability,depend,depends,3218,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:86,energy efficiency,current,current,86,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:169,integrability,depend,dependency,169,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:939,integrability,configur,configuration,939,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1047,integrability,configur,configuration,1047," it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. Th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1126,integrability,depend,dependency,1126,"-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1691,integrability,depend,dependency,1691," get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2281,integrability,sub,submit,2281,"d FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:3218,integrability,depend,depends,3218,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1223,interoperability,platform,platform,1223," is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with su",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:23,modifiability,extens,extensive,23,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:169,modifiability,depend,dependency,169,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:287,modifiability,extens,extension,287,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:939,modifiability,configur,configuration,939,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1047,modifiability,configur,configuration,1047," it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. Th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1126,modifiability,depend,dependency,1126,"-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1691,modifiability,depend,dependency,1691," get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:3218,modifiability,depend,depends,3218,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:495,performance,time,time,495,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1589,performance,time,time,1589,"zmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to ad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2818,reliability,fail,fail-on-missing,2818,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:33,safety,input,input,33,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:169,safety,depend,dependency,169,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1126,safety,depend,dependency,1126,"-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1201,safety,detect,detect,1201,"because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1691,safety,depend,dependency,1691," get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:3218,safety,depend,depends,3218,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:939,security,configur,configuration,939,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1047,security,configur,configuration,1047," it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. Th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1201,security,detect,detect,1201,"because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:169,testability,depend,dependency,169,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1126,testability,depend,dependency,1126,"-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1691,testability,depend,dependency,1691," get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:3218,testability,depend,depends,3218,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:33,usability,input,input,33,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1875,usability,clear,clear,1875,"ild (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2478,usability,user,user,2478,"mmunity is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:255,deployability,build,build,255,"> the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR. Sorry, now I'm mixing things up :) The MultiProcess PR was already made as well: #8412. Shall I add the correct build option there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:47,deployability,build,build,47,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:136,deployability,patch,patch,136,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:363,deployability,instal,installed,363,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:373,deployability,version,version,373,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:373,integrability,version,version,373,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:313,interoperability,conflict,conflict,313,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:373,modifiability,version,version,373,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:114,performance,time,time,114,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:136,safety,patch,patch,136,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:307,safety,avoid,avoid,307,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:136,security,patch,patch,136,"Hi, . Yes, I think it will be good to have the build option for RooFit::MultiProcess there. I think since for the time being we need to patch ZeroMQ, if I have understood well, we need to have the built-in solution. We can then change later on. We need however to be sure we do not export ZeroMQ symbols to avoid conflict with other code that need to use another installed version of ZeroMQ.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:19,deployability,patch,patch,19,"Indeed, we need to patch ZeroMQ. The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:19,safety,patch,patch,19,"Indeed, we need to patch ZeroMQ. The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:19,security,patch,patch,19,"Indeed, we need to patch ZeroMQ. The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,deployability,patch,patch,21,"> Indeed, we need to patch ZeroMQ. Where do you do that? Can you show the location in the relevant PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,safety,patch,patch,21,"> Indeed, we need to patch ZeroMQ. Where do you do that? Can you show the location in the relevant PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,security,patch,patch,21,"> Indeed, we need to patch ZeroMQ. Where do you do that? Can you show the location in the relevant PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:341,deployability,build,build,341,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this? Load your RooFit libraries, then do. ```. root [1] dlsym(0, ""zmq_version""). (void *) nullptr. ```. If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:90,energy efficiency,Load,Load,90,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this? Load your RooFit libraries, then do. ```. root [1] dlsym(0, ""zmq_version""). (void *) nullptr. ```. If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:306,interoperability,semant,semantic,306,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this? Load your RooFit libraries, then do. ```. root [1] dlsym(0, ""zmq_version""). (void *) nullptr. ```. If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:90,performance,Load,Load,90,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this? Load your RooFit libraries, then do. ```. root [1] dlsym(0, ""zmq_version""). (void *) nullptr. ```. If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:294,usability,user,user-libzmq,294,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this? Load your RooFit libraries, then do. ```. root [1] dlsym(0, ""zmq_version""). (void *) nullptr. ```. If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:107,energy efficiency,current,currently,107,"There's no replacement, it's an addition, I'm adding `ppoll` implementations, which do not exist in libzmq currently (they only have `poll` without the extra `p`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,deployability,patch,patch,21,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:84,deployability,patch,patching,84,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,safety,patch,patch,21,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:84,safety,patch,patching,84,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:21,security,patch,patch,21,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:84,security,patch,patching,84,"> Indeed, we need to patch ZeroMQ. > It's the ppoll.h/.cpp files:. So you're *not* *patching*? You can use a system libzmq?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:63,deployability,build,build,63,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:334,deployability,patch,patching,334,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:154,interoperability,distribut,distributed,154,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:177,modifiability,pac,packages,177,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:53,safety,except,except,53,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:334,safety,patch,patching,334,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:334,security,patch,patching,334,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:453,usability,clear,clear,453,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:361,availability,sli,slightly,361,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:259,deployability,updat,update,259,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,deployability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,deployability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,deployability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:628,deployability,version,version,628,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:153,energy efficiency,sustainab,sustainability,153,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,integrability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,integrability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,integrability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:628,integrability,version,version,628,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,interoperability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,interoperability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,interoperability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,modifiability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,modifiability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:472,modifiability,extens,extension,472,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:546,modifiability,extens,extension,546,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,modifiability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:628,modifiability,version,version,628,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:792,modifiability,pac,package,792,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,reliability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:361,reliability,sli,slightly,361,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,reliability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,reliability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:259,safety,updat,update,259,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:211,security,secur,security,211,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:259,security,updat,update,259,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,security,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,security,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,security,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:336,testability,integr,integrated,336,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:394,testability,integr,integration,394,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:579,testability,integr,integrate,579,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:616,usability,minim,minimal,616,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy? If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working? IMO the right steps are:. 1. get your extension into zmq. 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:522,deployability,depend,depend,522,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:522,integrability,depend,depend,522,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:773,interoperability,conflict,conflicts,773,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:334,modifiability,maintain,maintainer,334,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:522,modifiability,depend,depend,522,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:77,performance,time,time,77,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:131,performance,time,timeline,131,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:50,reliability,pra,practice,50,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:334,safety,maintain,maintainer,334,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:522,safety,depend,depend,522,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:280,testability,simpl,simple,280,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:522,testability,depend,depend,522,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:604,testability,understand,understand,604,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:280,usability,simpl,simple,280,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:801,usability,minim,minimized,801,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2098,availability,reliab,reliably,2098,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:211,deployability,patch,patched,211,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:302,deployability,version,version,302,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:735,deployability,version,version,735,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:774,deployability,version,version,774,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1395,deployability,build,build,1395,"tion is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1928,deployability,fail,fail-on-missing,1928,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2073,deployability,fail,fail-on-missing,2073,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2116,deployability,configurat,configuration,2116,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2130,deployability,fail,fail,2130,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2140,deployability,depend,dependency,2140,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2552,deployability,depend,depends,2552,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:828,energy efficiency,adapt,adapt,828,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:302,integrability,version,version,302,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:735,integrability,version,version,735,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:774,integrability,version,version,774,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:828,integrability,adapt,adapt,828,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1182,integrability,sub,submit,1182,". In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2116,integrability,configur,configuration,2116,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2140,integrability,depend,dependency,2140,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2552,integrability,depend,depends,2552,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:828,interoperability,adapt,adapt,828,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:302,modifiability,version,version,302,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:735,modifiability,version,version,735,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:774,modifiability,version,version,774,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:828,modifiability,adapt,adapt,828,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2116,modifiability,configur,configuration,2116,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2140,modifiability,depend,dependency,2140,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2177,modifiability,pac,packages,2177,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2552,modifiability,depend,depends,2552,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:511,performance,time,time,511,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1928,reliability,fail,fail-on-missing,1928,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2073,reliability,fail,fail-on-missing,2073,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2098,reliability,reliab,reliably,2098,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2130,reliability,fail,fail,2130,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:211,safety,patch,patched,211,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2140,safety,depend,dependency,2140,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2196,safety,except,exceptions,2196,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2552,safety,depend,depends,2552,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:211,security,patch,patched,211,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:559,security,hack,hackish,559,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2116,security,configur,configuration,2116,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2140,testability,depend,dependency,2140,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2552,testability,depend,depends,2552,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:31,usability,clear,clear,31,"> So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable? Sorry, but no, this is not acceptable if you ask me. In fact, the need for a patched zeromq raises a big red flag as that may make it not possible to ever use a system version of zeromq if your pull request gets stuck. I agree with Axel that the right course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1379,usability,user,user,1379,"ight course of action is to add the needed functionality to zeromq directly first, then add this work to ROOT. I don't think that time constraints should be used as a way to get hackish code into ROOT. Alternatively, if your addition is really independent to zeromq, you could just add it to the RooFitZMQ library instead, so that you can use the system version of zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1741,usability,support,support,1741," zeromq as is. If in a later version they add your new functionality, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:2039,usability,user,users,2039,"y, you can then adapt RooFitZMQ to that in a new pull request. . > Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. It will be much easier to ensure everything works together that way. . > I think that fail-on-missing is only relevant in case there would be a non built-in option as well, right? That is not what users generally think. They want `fail-on-missing` to work reliably and make configuration fail if a dependency cannot be met with system packages. The only exceptions to this rule should be LLVM/Clang. . > Finally, about git history: makes sense. I can do some reordering before merging. Otherwise, just squashing everything would make sense to me as well. The two independent things here are basically 1) the zmq builtin and 2) RooFitZMQ itself. These could indeed just be two commits, but since nothing really depends on RooFitZMQ at this point, including it with the libzmq builtin in one commit I think would give a clean history as well. Ok, as long as it's possible to use a vanilla zeromq, and the builtin addition is the last commit in the series, it should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:232,energy efficiency,current,current,232,"> If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. Either way is fine by me. I could easily add the MultiProcess commits here as well, since the current MultiProcess branch is branched off this one anyway. I only separated them for clarity of discussion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:37,usability,support,support,37,"> If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. Either way is fine by me. I could easily add the MultiProcess commits here as well, since the current MultiProcess branch is branched off this one anyway. I only separated them for clarity of discussion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:319,usability,clarit,clarity,319,"> If RooFitZMQ only makes sense as a support library for RooFit::MultiProcess, it's better to put them together in a single pull request. Either way is fine by me. I could easily add the MultiProcess commits here as well, since the current MultiProcess branch is branched off this one anyway. I only separated them for clarity of discussion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/issues/8387:2042,availability,Error,ErrorHandler,2042,"/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #8 0x00007efd58d702bd in TStreamerInfo::Compile() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #9 0x00007efd58d3bdba in TStreamerInfo::BuildOld() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #10 0x00007efd544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1106,deployability,Instal,InstallArea,1106," specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-cento",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1225,deployability,Instal,InstallArea,1225,"SSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1344,deployability,Instal,InstallArea,1344,". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredActio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1455,deployability,build,build,1455,"stClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1500,deployability,build,build,1500,"#endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/view",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1752,deployability,Stack,StackTrace,1752,"dclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:2936,deployability,Build,BuildOld,2936,"/cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #8 0x00007efd58d702bd in TStreamerInfo::Compile() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #9 0x00007efd58d3bdba in TStreamerInfo::BuildOld() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #10 0x00007efd544c95bd in TClass::GetStreamerInfoImpl(int, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #11 0x00007efd544c988f in TClass::GetStreamerInfo(int, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #12 0x00007efd544ca976 in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMemb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:4107,deployability,Build,BuildRealData,4107,"fs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #11 0x00007efd544c988f in TClass::GetStreamerInfo(int, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #12 0x00007efd544ca976 in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:4253,deployability,Build,BuildRealData,4253,"m /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #12 0x00007efd544ca976 in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #22 0x00007efd5517d829 in RootClingMain(int, char**, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:4963,energy efficiency,alloc,allocator,4963,"cc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #22 0x00007efd5517d829 in RootClingMain(int, char**, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #23 0x00007efd55181f15 in ROOT_rootcling_Driver () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #24 0x0000000000400c45 in main (). Aborted (core dumped). [bash][pcadp02]:ATLASG-1596 >. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:5446,energy efficiency,core,core,5446,"cc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #22 0x00007efd5517d829 in RootClingMain(int, char**, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #23 0x00007efd55181f15 in ROOT_rootcling_Driver () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #24 0x0000000000400c45 in main (). Aborted (core dumped). [bash][pcadp02]:ATLASG-1596 >. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:327,integrability,Event,EventSaverFlatNtuple,327,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:386,integrability,pub,public,386,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:398,integrability,Event,EventSaverFlatNtuple,398,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:422,integrability,pub,public,422,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:113,interoperability,specif,specific,113,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:2042,performance,Error,ErrorHandler,2042,"/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #8 0x00007efd58d702bd in TStreamerInfo::Compile() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #9 0x00007efd58d3bdba in TStreamerInfo::BuildOld() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #10 0x00007efd544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:641,reliability,pra,pragma,641,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:672,reliability,pra,pragma,672,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:703,reliability,pra,pragma,703,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:736,reliability,pra,pragma,736,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:767,reliability,pra,pragma,767,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:172,safety,Test,TestClass,172,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:356,safety,Test,Test,356,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:374,safety,Test,TestClass,374,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:456,safety,Test,TestClass,456,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:492,safety,Test,TestClass,492,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:789,safety,Test,TestClass,789,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:988,safety,Test,TestClassDict,988,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1395,safety,Test,TestClass,1395,"entSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:2042,safety,Error,ErrorHandler,2042,"/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #8 0x00007efd58d702bd in TStreamerInfo::Compile() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #9 0x00007efd58d3bdba in TStreamerInfo::BuildOld() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #10 0x00007efd544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:172,testability,Test,TestClass,172,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:356,testability,Test,Test,356,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:374,testability,Test,TestClass,374,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:456,testability,Test,TestClass,456,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:492,testability,Test,TestClass,492,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:789,testability,Test,TestClass,789,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:988,testability,Test,TestClassDict,988,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1395,testability,Test,TestClass,1395,"entSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:122,usability,command,command,122,"It's not really a ""standalone"" reproducer, but you can get to this crash with the following two headers and this specific command:. ```. [bash][pcadp02]:ATLASG-1596 > more TestClass.h . // Dear emacs, this is -*- c++ -*-. #ifndef ISSUE8387_TESTCLASS_H. #define ISSUE8387_TESTCLASS_H. // ATLAS include(s). #include ""TopAnalysis/EventSaverFlatNtuple.h"". /// Test class. class TestClass : public top::EventSaverFlatNtuple {. public:. /// Default constructor. TestClass() = default;. }; // class TestClass. #endif // not ISSUE8387_TESTCLASS_H. [bash][pcadp02]:ATLASG-1596 > more LinkDef.h . // Dear emacs, this is -*- c++ -*-. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class TestClass+;. #endif // __CINT__. [bash][pcadp02]:ATLASG-1596 > which rootcling. /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/rootcling. [bash][pcadp02]:ATLASG-1596 > rootcling -f TestClassDict.cxx -DXAOD_STANDALONE -DXAOD_ANALYSIS -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:2042,usability,Error,ErrorHandler,2042,"/atlas.cern.ch/repo/sw/software/22.2/AnalysisBase/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include -I/cvmfs/atlas.cern.ch/repo/sw/software/22.2/AnalysisBaseExternals/22.2.27/InstallArea/x86_64-centos7-gcc8-opt/include/eigen3 TestClass.h LinkDef.h . Fatal: 0 violated at line 2755 of `/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/io/io/src/TStreamerInfoActions.cxx'. aborting. #0 0x00007efd534764fc in waitpid () from /lib64/libc.so.6. #1 0x00007efd533f3f62 in do_system () from /lib64/libc.so.6. #2 0x00007efd5452c523 in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #3 0x00007efd5440b452 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #4 0x00007efd544bb87f in ErrorHandler () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #5 0x00007efd544bc312 in Fatal(char const*, char const*, ...) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #6 0x00007efd58d4c9d3 in TStreamerInfoActions::TConfiguredAction GetConvertCollectionReadAction<TStreamerInfoActions::VectorLooper>(int, int, TStreamerInfoActions::TConfiguration*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #7 0x00007efd58d6f2bb in TStreamerInfo::AddReadAction(TStreamerInfoActions::TActionSequence*, int, TStreamerInfo::TCompInfo*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #8 0x00007efd58d702bd in TStreamerInfo::Compile() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #9 0x00007efd58d3bdba in TStreamerInfo::BuildOld() () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #10 0x00007efd544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:4536,usability,Close,CloseStreamerInfoROOTFile,4536,"cc8-opt/lib/libCore.so. #13 0x00007efd5441c1b6 in TMemberInspector::InspectMember(char const*, void const*, char const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #14 0x00007efd551d0f65 in TCling::InspectMembers(TMemberInspector&, void const*, TClass const*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #15 0x00007efd544ca94d in TClass::CallShowMembers(void const*, TMemberInspector&, bool) const () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #16 0x00007efd544d6b45 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #17 0x00007efd544d6c00 in TClass::BuildRealData(void*, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #18 0x00007efd544fa6df in TProtoClass::TProtoClass(TClass*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCore.so. #19 0x00007efd58ee6750 in CloseStreamerInfoROOTFile () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libRIO.so. #20 0x00007efd55165471 in FinalizeStreamerInfoWriting(cling::Interpreter&, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #21 0x00007efd551751a4 in GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType> > const&, bool, bool, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #22 0x00007efd5517d829 in RootClingMain(int, char**, bool) () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #23 0x00007efd55181f15 in ROOT_rootcling_Driver () from /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/lib/libCling.so. #24 0x0000000000400c45 in main (). Aborted (core dumped). [bash][pcadp02]:ATLASG-1596 >. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:109,safety,test,test,109,Hi - this is breaking some more or less urgent ATLAS analyses - if there is any guidance as to what we could test that'd be much appreciated. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:109,testability,test,test,109,Hi - this is breaking some more or less urgent ATLAS analyses - if there is any guidance as to what we could test that'd be much appreciated. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:80,usability,guidanc,guidance,80,Hi - this is breaking some more or less urgent ATLAS analyses - if there is any guidance as to what we could test that'd be much appreciated. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:18,deployability,updat,update,18,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:271,deployability,contain,contains,271,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:422,deployability,Scale,ScaleFactorRetriever,422,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:890,deployability,build,builds,890,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:422,energy efficiency,Scale,ScaleFactorRetriever,422,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:65,integrability,Event,EventSaverFlatNtuple,65,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:194,integrability,Event,EventSaverFlatNtuple,194,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:378,integrability,Event,EventSaverBase,378,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:680,integrability,Event,EventSaverFlatNtuple,680,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:702,integrability,pub,public,702,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:714,integrability,Event,EventSaverBase,714,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:730,integrability,pub,public,730,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:753,integrability,pub,public,753,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:762,integrability,Event,EventSaverFlatNtuple,762,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:809,integrability,Event,EventSaverFlatNtuple,809,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:422,modifiability,Scal,ScaleFactorRetriever,422,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:422,performance,Scale,ScaleFactorRetriever,422,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:18,safety,updat,update,18,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:18,security,updat,update,18,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:130,usability,behavi,behavior,130,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:152,usability,minim,minimal,152,"One more piece of update. It appears something in the base class EventSaverFlatNtuple in combination with ROOT 6.24 triggers this behavior ? Creating a minimal directory structure:. TopAnalysis/EventSaverFlatNtuple.h in the setup above that Attila gives, where the class contains:. ```cpp. #ifndef EVENTSAVERFLATNTUPLE_H_. #define EVENTSAVERFLATNTUPLE_H_. #include ""TopAnalysis/EventSaverBase.h"". #include ""TopCorrections/ScaleFactorRetriever.h"". #include ""TopEventSelectionTools/TreeManager.h"". // Framework include(s):. #include ""AsgTools/AsgTool.h"". #include ""AthContainers/AuxElement.h"". #include ""AthContainers/DataVector.h"". #include <unordered_map>. namespace top {. class EventSaverFlatNtuple: public top::EventSaverBase, public asg::AsgTool {. public:. EventSaverFlatNtuple();. ClassDefOverride(top::EventSaverFlatNtuple, 0);. };. }. #endif. ```. With this example, the dictionary builds, which would suggest something else in the base class is triggering this bug ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:81,integrability,Event,EventSaverFlatNtuple,81,"Ok, so the thing that is breaking rootcling is one particular member variable to EventSaverFlatNtuple. `std::vector<top::TreeManager::BranchFilter> m_branchFilters;`. where BranchFilter is a typedef in the TreeManager class:. `typedef std::function<int (TreeManager const*, std::string const&)> BranchFilter;`. Just adding the member as private in the minimal class EventSaverFlatNtuple above, yields the crash. I am not sure if this is enough information to debug the problem, if there's more information we can provide, let us know. Thank you,. Oliver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:366,integrability,Event,EventSaverFlatNtuple,366,"Ok, so the thing that is breaking rootcling is one particular member variable to EventSaverFlatNtuple. `std::vector<top::TreeManager::BranchFilter> m_branchFilters;`. where BranchFilter is a typedef in the TreeManager class:. `typedef std::function<int (TreeManager const*, std::string const&)> BranchFilter;`. Just adding the member as private in the minimal class EventSaverFlatNtuple above, yields the crash. I am not sure if this is enough information to debug the problem, if there's more information we can provide, let us know. Thank you,. Oliver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:69,modifiability,variab,variable,69,"Ok, so the thing that is breaking rootcling is one particular member variable to EventSaverFlatNtuple. `std::vector<top::TreeManager::BranchFilter> m_branchFilters;`. where BranchFilter is a typedef in the TreeManager class:. `typedef std::function<int (TreeManager const*, std::string const&)> BranchFilter;`. Just adding the member as private in the minimal class EventSaverFlatNtuple above, yields the crash. I am not sure if this is enough information to debug the problem, if there's more information we can provide, let us know. Thank you,. Oliver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:352,usability,minim,minimal,352,"Ok, so the thing that is breaking rootcling is one particular member variable to EventSaverFlatNtuple. `std::vector<top::TreeManager::BranchFilter> m_branchFilters;`. where BranchFilter is a typedef in the TreeManager class:. `typedef std::function<int (TreeManager const*, std::string const&)> BranchFilter;`. Just adding the member as private in the minimal class EventSaverFlatNtuple above, yields the crash. I am not sure if this is enough information to debug the problem, if there's more information we can provide, let us know. Thank you,. Oliver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:232,deployability,contain,contains,232,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:414,integrability,pub,public,414,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:659,integrability,pub,public,659,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:679,integrability,pub,public,679,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:897,integrability,pub,public,897,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:55,reliability,doe,does,55,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1049,reliability,pra,pragma,1049,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1080,reliability,pra,pragma,1080,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1111,reliability,pra,pragma,1111,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1144,reliability,pra,pragma,1144,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1175,reliability,pra,pragma,1175,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:25,usability,minim,minimal,25,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1243,usability,Command,Command,1243,"I think I have finally a minimal working example, that does not require anything ATLAS-related, I can reproduce this with just ROOT 6.24. It is triggered when generating dictionary for `derivedClass`, deriving from `baseClass` that contains a protected member vector of the `std::function`. `baseClass.h`. ```cpp. #ifndef MY_BASE_CLASS. #define MY_BASE_CLASS. #include ""foo.h"". namespace top {. class baseClass {. public:. baseClass();. protected:. std::vector<Foo::BranchFilter> m_branchFilters;. };. };. #endif. ```. `derivedClass.h`. ```cpp. #ifndef MY_DERIVED_CLASS. #define MY_DERIVED_CLASS. #include ""baseClass.h"". namespace top {. class derivedClass : public baseClass {. public:. derivedClass();. };. };. #endif. ```. `foo.h` with the `std::function typedef` inside class Foo. ```cpp. #ifndef MY_FOO. #define MY_FOO. #include <functional>. #include <string>. namespace top {. class Foo {. public:. Foo();. typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. };. };. #endif. ```. `Linkdef.h`. ```cpp. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ nestedclass;. #pragma link C++ class top::derivedClass+;. #endif // __CINT__. ```. Command to trigger the problem:. ```sh. rootcling -f derivedClassDict.cxx -I./ derivedClass.h LinkDef.h. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:0,reliability,Doe,Does,0,Does marking the data member explicitly as transient (it can not be stored anyway) helps:. ```. std::vector<Foo::BranchFilter> m_branchFilters; ///<! vector of function pointers. ```. ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:83,usability,help,helps,83,Does marking the data member explicitly as transient (it can not be stored anyway) helps:. ```. std::vector<Foo::BranchFilter> m_branchFilters; ///<! vector of function pointers. ```. ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:65,usability,minim,minimal,65,hi @pcanal - can you think of any other work around ? ( hope the minimal reproducer above helps),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:90,usability,help,helps,90,hi @pcanal - can you think of any other work around ? ( hope the minimal reproducer above helps),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:436,usability,confirm,confirm,436,"We (@pcanal and I) found a work-around. In your reproducer, please change the following:. ```diff. - typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. + typedef std::function<int (top::Foo const*, std::string const&)> BranchFilter;. ```. (i.e. make sure the argument types are fully qualified). I have created the issue https://github.com/root-project/root/issues/8469 to track the underlying cause. If you can confirm that this workaround is sufficient for you then I'd suggest we close this issue, given we have the other, more precise issue open, and linking to this issue with its wonderful reproducer - thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:507,usability,close,close,507,"We (@pcanal and I) found a work-around. In your reproducer, please change the following:. ```diff. - typedef std::function<int (Foo const*, std::string const&)> BranchFilter;. + typedef std::function<int (top::Foo const*, std::string const&)> BranchFilter;. ```. (i.e. make sure the argument types are fully qualified). I have created the issue https://github.com/root-project/root/issues/8469 to track the underlying cause. If you can confirm that this workaround is sufficient for you then I'd suggest we close this issue, given we have the other, more precise issue open, and linking to this issue with its wonderful reproducer - thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:26,usability,confirm,confirm,26,"Hi @Axel-Naumann,. we can confirm this workaround works, thanks a lot! This is perfectly sufficient solution from our side, so this can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:139,usability,close,closed,139,"Hi @Axel-Naumann,. we can confirm this workaround works, thanks a lot! This is perfectly sufficient solution from our side, so this can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:64,availability,down,down,64,thanks a lot @Axel-Naumann - seems like a tricky thing to track down!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8389:62,deployability,build,build,62,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:91,deployability,releas,release,91,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:99,deployability,build,build,99,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:290,safety,safe,safe,290,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:243,testability,assert,assertion,243,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:416,testability,assert,assert,416,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:382,usability,prefer,preferences,382,"@ferdymercury, it seems that in the first case it was a debug build while the second was a release build. However, looking at https://github.com/root-project/cling/blob/master/lib/Interpreter/DynamicLookup.cpp#L764-L766, I'm not sure that the assertion is useful, given that it seems to be safe to exit the function if the `CompoundLiteralExpr` node was not built. @vgvassilev, any preferences? Should I remove the `assert()`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:24,usability,prefer,preferences,24,"@axel, @vgvassilev, any preferences on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:31,testability,assert,assert,31,"Hm... yeah, maybe removing the assert is the way to go.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/pull/8390:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:29,deployability,log,log,29,Could you enhance the commit log by including the text from the intro to this PR? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:29,safety,log,log,29,Could you enhance the commit log by including the text from the intro to this PR? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:29,security,log,log,29,Could you enhance the commit log by including the text from the intro to this PR? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:29,testability,log,log,29,Could you enhance the commit log by including the text from the intro to this PR? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:80,integrability,messag,message,80,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:80,interoperability,messag,message,80,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:64,modifiability,exten,extended,64,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:128,usability,workflow,workflow,128,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:114,deployability,build,build,114,"@ponyisi please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:90,performance,time,timeouts,90,"@ponyisi please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:82,safety,prevent,prevent,82,"@ponyisi please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:90,safety,timeout,timeouts,90,"@ponyisi please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:82,security,preven,prevent,82,"@ponyisi please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:72,integrability,messag,message,72,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:72,interoperability,messag,message,72,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:56,modifiability,exten,extended,56,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:120,usability,workflow,workflow,120,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8392:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8392
https://github.com/root-project/root/pull/8396:65,energy efficiency,adapt,adapt,65,"RVec and other parts of RDF look a bit different in 6.24, had to adapt the backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8396
https://github.com/root-project/root/pull/8396:65,integrability,adapt,adapt,65,"RVec and other parts of RDF look a bit different in 6.24, had to adapt the backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8396
https://github.com/root-project/root/pull/8396:65,interoperability,adapt,adapt,65,"RVec and other parts of RDF look a bit different in 6.24, had to adapt the backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8396
https://github.com/root-project/root/pull/8396:65,modifiability,adapt,adapt,65,"RVec and other parts of RDF look a bit different in 6.24, had to adapt the backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8396
https://github.com/root-project/root/pull/8399:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora34/default with flags -DCMAKE_CXX_STANDARD=20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8399
https://github.com/root-project/root/pull/8399:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora34/default with flags -DCMAKE_CXX_STANDARD=20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8399
https://github.com/root-project/root/pull/8399:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora34/default with flags -DCMAKE_CXX_STANDARD=20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8399
https://github.com/root-project/root/pull/8402:178,safety,review,review,178,"I made additional changes to one of the commits in the follow-up pull request. As this was not merged yet, I also touched the corresponding part here. @jblomer, could you please review commit 6efaf8ec328adbe1b5e51197e678dee59e7d912e, i.e. the latest one? Let me know if you have any suggestion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:178,testability,review,review,178,"I made additional changes to one of the commits in the follow-up pull request. As this was not merged yet, I also touched the corresponding part here. @jblomer, could you please review commit 6efaf8ec328adbe1b5e51197e678dee59e7d912e, i.e. the latest one? Let me know if you have any suggestion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:457,integrability,buffer,buffer,457,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:335,safety,compl,completely,335,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:401,safety,review,review,401,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:335,security,compl,completely,335,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:401,testability,review,review,401,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:246,usability,prefer,prefer,246,"> That's pretty dangerous. Who know how long class names will be in the future. The implementation just seems to use `strcpy`. I think that's something we can discuss with Johann -- if there is a DAOS defined limit that we can use. I'd very much prefer that. Lacking such a limit, I'd use a much larger one for ours, e.g. 64 or 128. I completely agree, that's why I left a comment and asked you to re-review ;-) I will ask Johann, or otherwise use a larger buffer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:142,deployability,updat,updated,142,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:166,deployability,updat,updated,166,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:258,integrability,coupl,couple,258,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:400,integrability,sub,subsequent,400,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:245,interoperability,exchang,exchanging,245,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:258,modifiability,coupl,couple,258,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:54,safety,review,review,54,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:142,safety,updat,updated,142,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:166,safety,updat,updated,166,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:388,safety,review,review,388,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:497,safety,review,review,497,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:142,security,updat,updated,142,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:166,security,updat,updated,166,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:54,testability,review,review,54,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:258,testability,coupl,couple,258,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:388,testability,review,review,388,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:497,testability,review,review,497,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:189,usability,document,documentation,189,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:463,usability,interact,interactive,463,"> Could you pinpoint what's the change since the last review? In general, I think it's easier if you add on commits rather than force push an updated history. I have updated the value (and documentation) of the `kOCNameMaxLength` constant after exchanging a couple of e-mails. Sorry, I squashed the commits as if the PR history was going to be merged, but I agree it is harder for you to review! For subsequent PRs, I will add independent commits and will do the interactive rebase only after the review. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8403:40,deployability,build,build,40,"Yes, it was just waiting on the last CI build to finish ... :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8403
https://github.com/root-project/root/pull/8406:154,availability,consist,consistent,154,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:506,availability,Sli,Slice,506,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:181,integrability,interfac,interface,181,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:181,interoperability,interfac,interface,181,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:181,modifiability,interfac,interface,181,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:129,performance,time,time,129,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:506,reliability,Sli,Slice,506,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:535,safety,detect,detect,535,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:535,security,detect,detect,535,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:112,usability,command,command,112,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:154,usability,consist,consistent,154,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:202,usability,command,commands,202,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:373,usability,command,command,373,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:419,usability,command,command,419,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:558,usability,command,command,558,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:588,usability,command,commands,588,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:86,usability,command,command,86,"Sounds good ! I agree with this, by emitting a warning and suggesting the alternative command for these special cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:107,availability,Sli,Slice,107,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:224,availability,sli,slice,224,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:107,reliability,Sli,Slice,107,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:224,reliability,sli,slice,224,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:79,usability,experien,experience,79,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:114,usability,command,command,114,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:230,usability,command,commands,230,"Added the pyROOT label, because the point of this PR was to improve the pyROOT experience: in pyROOT, the `Slice` command is a keyword argument. Keyword arguments can't be repeated, so we needed a mechanism to pass multiple slice commands at once via a dictionary/`std::map`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8407:62,deployability,build,build,62,"All green except windows and mac11 that are not done with the build yet, but we'll run them in the nightlies in 30 minutes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:4,energy efficiency,green,green,4,"All green except windows and mac11 that are not done with the build yet, but we'll run them in the nightlies in 30 minutes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:10,safety,except,except,10,"All green except windows and mac11 that are not done with the build yet, but we'll run them in the nightlies in 30 minutes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8410:228,interoperability,platform,platforms,228,"@moneta `Long_t ` is 32 bit on Win64 and cannot hold a pointer. And replacing its definition with another type break all the code (e.g. template arguments, methods overload, ...). That's the only possible way not to break other platforms, other architectures, and stay backward compatible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8410
https://github.com/root-project/root/pull/8410:245,interoperability,architectur,architectures,245,"@moneta `Long_t ` is 32 bit on Win64 and cannot hold a pointer. And replacing its definition with another type break all the code (e.g. template arguments, methods overload, ...). That's the only possible way not to break other platforms, other architectures, and stay backward compatible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8410
https://github.com/root-project/root/pull/8410:278,interoperability,compatib,compatible,278,"@moneta `Long_t ` is 32 bit on Win64 and cannot hold a pointer. And replacing its definition with another type break all the code (e.g. template arguments, methods overload, ...). That's the only possible way not to break other platforms, other architectures, and stay backward compatible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8410
https://github.com/root-project/root/pull/8412:2780,availability,servic,service,2780,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2780,deployability,servic,service,2780,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2792,deployability,API,API,2792,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2780,integrability,servic,service,2780,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2792,integrability,API,API,2792,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2792,interoperability,API,API,2792,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2982,interoperability,plug,plugins,2982,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:3054,interoperability,plug,plugin,3054,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:3105,interoperability,plug,plugin,3105,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2780,modifiability,servic,service,2780,"QSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:504,safety,except,exception,504,"## DeepCode's analysis on [#fc0ac8](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) found:. - :warning: **1** warning, :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:593,safety,except,exception,593,"## DeepCode's analysis on [#fc0ac8](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) found:. - :warning: **1** warning, :information_source: **1** minor issue. :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1555,safety,except,exception,1555,"of e is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1645,safety,except,exception,1645,"per-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L29"">ZeroMQSvc.cpp:29</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_sour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1855,safety,test,test,1855,"a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2016,safety,test,test,2016,"<a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1855,testability,test,test,1855,"a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L42"">ZeroMQSvc.cpp:42</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:2016,testability,test,test,2016,"<a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/src/ZeroMQSvc.cpp#L53"">ZeroMQSvc.cpp:53</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Fsrc%2FZeroMQSvc.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Rethrow the original exception object using an empty throw. Otherwise a copy of e2 is created and the original exception type is lost and replaced by its (potential) super-type zmq::error_t. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L76"">test_ZMQ.cpp:76</a></li> <li><a href=""https://github.com/root-project/root/blob/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/roofit/roofitZMQ/test/test_ZMQ.cpp#L89"">test_ZMQ.cpp:89</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2Froofit%2FroofitZMQ%2Ftest%2Ftest_ZMQ.cpp/cpp%2Fdc%2FRethrowWithEmptyThrow%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/398a179ed525f438db226f2b12d253176b6aecbc/root-project/root/fc0ac88c7e2bb74304a90fa9e02cecd62a023f47/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=1&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8413:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8413:9,availability,error,error,9,The LGTM error is unrelated to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8413:9,performance,error,error,9,The LGTM error is unrelated to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8413:9,safety,error,error,9,The LGTM error is unrelated to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8413:9,usability,error,error,9,The LGTM error is unrelated to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8414:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8417:27,deployability,modul,modules,27,"@ellert that's without C++ modules, correct? (I.e. with PCH)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:27,modifiability,modul,modules,27,"@ellert that's without C++ modules, correct? (I.e. with PCH)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:27,safety,modul,modules,27,"@ellert that's without C++ modules, correct? (I.e. with PCH)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:29,deployability,modul,modules,29,"> @ellert that's without C++ modules, correct? (I.e. with PCH). Yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:29,modifiability,modul,modules,29,"> @ellert that's without C++ modules, correct? (I.e. with PCH). Yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:29,safety,modul,modules,29,"> @ellert that's without C++ modules, correct? (I.e. with PCH). Yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/issues/8418:50,usability,User,Users,50,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:145,usability,User,Users,145,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:186,usability,User,Users,186,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:250,usability,User,Users,250,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:336,usability,Command,CommandLineTools,336,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:383,usability,User,Users,383,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:413,usability,User,Users,413,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:494,usability,command,command,494,"To debug this please do:. ```. root aa1.cpp++kv. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```. and report the result of the 2nd command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1491,availability,error,error,1491,"ers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1665,availability,error,error,1665,"les. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1845,availability,error,error,1845,"cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2021,availability,error,error,2021,"g"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2191,availability,error,error,2191,"eloper/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2361,availability,error,error,2361,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2537,availability,error,error,2537,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2715,availability,error,error,2715,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2903,availability,error,error,2903,"ing ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3075,availability,error,error,3075,"sing ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3257,availability,error,error,3257,";. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/Comman",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3443,availability,error,error,3443,"sers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3625,availability,error,error,3625,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3714,availability,Error,Error,3714,"ror: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12840,availability,error,error,12840,"/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13014,availability,error,error,13014,"oftware/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13194,availability,error,error,13194,"iconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13370,availability,error,error,13370,"_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13540,availability,error,error,13540,"/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13710,availability,error,error,13710,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13886,availability,error,error,13886,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14064,availability,error,error,14064,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14252,availability,error,error,14252,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14424,availability,error,error,14424,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14606,availability,error,error,14606,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14792,availability,error,error,14792,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14974,availability,error,error,14974,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4374,deployability,fail,failed,4374,"a/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:125,interoperability,share,shared,125,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5771,interoperability,convers,conversion,5771,"software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9425,interoperability,convers,conversion,9425,chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1491,performance,error,error,1491,"ers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1665,performance,error,error,1665,"les. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1845,performance,error,error,1845,"cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2021,performance,error,error,2021,"g"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2191,performance,error,error,2191,"eloper/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2361,performance,error,error,2361,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2537,performance,error,error,2537,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2715,performance,error,error,2715,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2903,performance,error,error,2903,"ing ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3075,performance,error,error,3075,"sing ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3257,performance,error,error,3257,";. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/Comman",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3443,performance,error,error,3443,"sers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3625,performance,error,error,3625,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3714,performance,Error,Error,3714,"ror: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12840,performance,error,error,12840,"/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13014,performance,error,error,13014,"oftware/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13194,performance,error,error,13194,"iconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13370,performance,error,error,13370,"_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13540,performance,error,error,13540,"/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13710,performance,error,error,13710,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13886,performance,error,error,13886,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14064,performance,error,error,14064,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14252,performance,error,error,14252,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14424,performance,error,error,14424,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14606,performance,error,error,14606,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14792,performance,error,error,14792,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14974,performance,error,error,14974,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4374,reliability,fail,failed,4374,"a/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1491,safety,error,error,1491,"ers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1665,safety,error,error,1665,"les. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1845,safety,error,error,1845,"cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2021,safety,error,error,2021,"g"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2191,safety,error,error,2191,"eloper/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2361,safety,error,error,2361,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2537,safety,error,error,2537,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2715,safety,error,error,2715,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2903,safety,error,error,2903,"ing ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3075,safety,error,error,3075,"sing ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3257,safety,error,error,3257,";. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/Comman",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3443,safety,error,error,3443,"sers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3625,safety,error,error,3625,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3714,safety,Error,Error,3714,"ror: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12840,safety,error,error,12840,"/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13014,safety,error,error,13014,"oftware/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13194,safety,error,error,13194,"iconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13370,safety,error,error,13370,"_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13540,safety,error,error,13540,"/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13710,safety,error,error,13710,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13886,safety,error,error,13886,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14064,safety,error,error,14064,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14252,safety,error,error,14252,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14424,safety,error,error,14424,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14606,safety,error,error,14606,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14792,safety,error,error,14792,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14974,safety,error,error,14974,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1515,security,sign,signbit,1515,"/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1557,security,sign,signbit,1557,"Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12864,security,sign,signbit,12864,"nda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12906,security,sign,signbit,12906,"t.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:141,usability,User,Users,141,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:228,usability,User,Users,228,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:248,usability,User,Users,248,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:287,usability,User,Users,287,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:352,usability,User,Users,352,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:423,usability,User,Users,423,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:492,usability,User,Users,492,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:579,usability,Command,CommandLineTools,579,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:691,usability,User,Users,691,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:786,usability,User,Users,786,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:827,usability,User,Users,827,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:891,usability,User,Users,891,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:958,usability,User,Users,958,"as below, It seems no more info. `root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1031,usability,User,Users,1031,"root aa1.cpp++kv`. ```. Processing aa1.cpp++kv... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no mem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1102,usability,User,Users,1102,"m::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. Info in <TMacOSXSystem::ACLiC>: looking for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1201,usability,Command,CommandLineTools,1201,"ng for header in: /Users/chenxu/tmp/.:/Users/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1248,usability,User,Users,1248,"rs/chenxu/tmp:.::$ROOTSYS/include:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. usin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1278,usability,User,Users,1278,"ude:""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1399,usability,User,Users,1399,"GEANT4/etc//cling"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"":""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1491,usability,error,error,1491,"ers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"":-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1573,usability,User,Users,1573,"er/CommandLineTools/SDKs/MacOSX.sdk/usr/include. Info in <ACLiC>: creating the dictionary files. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1665,usability,error,error,1665,"les. Info in <ACLiC>: /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1753,usability,User,Users,1753,"cling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1845,usability,error,error,1845,"cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1929,usability,User,Users,1929,"vs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isles",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2021,usability,error,error,2021,"g"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2099,usability,User,Users,2099,"Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'isl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2191,usability,error,error,2191,"eloper/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2269,usability,User,Users,2269,"pp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no membe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2361,usability,error,error,2361,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2445,usability,User,Users,2445,TGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2537,usability,error,error,2537,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2623,usability,User,Users,2623,NT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2715,usability,error,error,2715,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2811,usability,User,Users,2811,../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2903,usability,error,error,2903,"ing ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2983,usability,User,Users,2983,"bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/env",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3075,usability,error,error,3075,"sing ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3165,usability,User,Users,3165,"de/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3257,usability,error,error,3257,";. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/Comman",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3351,usability,User,Users,3351,"326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3443,usability,error,error,3443,"sers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3533,usability,User,Users,3533," error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3625,usability,error,error,3625,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3714,usability,Error,Error,3714,"ror: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3744,usability,User,Users,3744,"requal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3839,usability,User,Users,3839,"iconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3880,usability,User,Users,3880,"c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3944,usability,User,Users,3944,"l namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4011,usability,User,Users,4011,"iconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4084,usability,User,Users,4084,"mber named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4155,usability,User,Users,4155," ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4254,usability,Command,CommandLineTools,4254,": no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4301,usability,User,Users,4301,"lobal namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4331,usability,User,Users,4331,"sgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4383,usability,User,Users,4383,"da3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/minifor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4477,usability,User,Users,4477,"in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4516,usability,User,Users,4516,"dered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/mini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4559,usability,User,Users,4559,"iniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4627,usability,User,Users,4627,": no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4692,usability,User,Users,4692,"isunordered;. ~~^. Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4763,usability,User,Users,4763,"conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -W",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4832,usability,User,Users,4832,"ix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4930,usability,Command,CommandLineTools,4930,"e -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:4976,usability,User,Users,4976,"da3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5004,usability,User,Users,5004,"-I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5050,usability,User,Users,5050,"s/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/min",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5281,usability,User,Users,5281,"dk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5366,usability,User,Users,5366,".h""' failed! /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 --lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5487,usability,User,Users,5487,"tmp/aa1_cpp_ACLiC_map -f /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5889,usability,User,Users,5889,"lude -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/minicond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:5957,usability,User,Users,5957,"dk/usr/include /Users/chenxu/tmp/./aa1.cpp /Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/cond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6022,usability,User,Users,6022,"cpp_ACLiC_linkdef.h. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6093,usability,User,Users,6093,"lang++ -fPIC -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6162,usability,User,Users,6162,"ize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6248,usability,Command,CommandLineTools,6248,"en -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6306,usability,User,Users,6306,"miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6387,usability,User,Users,6387,"conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6540,usability,User,Users,6540,"=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -licon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6615,usability,User,Users,6615,"sometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6696,usability,User,Users,6696," -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6777,usability,User,Users,6777,"n -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6856,usability,User,Users,6856,"ts -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:6934,usability,User,Users,6934,"OTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7012,usability,User,Users,7012,"tc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7096,usability,User,Users,7096,"chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7177,usability,User,Users,7177,"are/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /U",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7257,usability,User,Users,7257,"ools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx ; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7779,usability,User,Users,7779,/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7859,usability,User,Users,7859,chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:7942,usability,User,Users,7942,u/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8017,usability,User,Users,8017,enxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8099,usability,User,Users,8099,chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/cond,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8179,usability,User,Users,8179,/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/en,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8265,usability,User,Users,8265,u/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8345,usability,User,Users,8345, -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8424,usability,User,Users,8424,tls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8506,usability,User,Users,8506,services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8587,usability,User,Users,8587,germantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8675,usability,User,Users,8675,lt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Us,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8710,usability,User,Users,8710,OReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:8935,usability,User,Users,8935,so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9020,usability,User,Users,9020,chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9141,usability,User,Users,9141,xROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9543,usability,User,Users,9543,nvs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/minic,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9611,usability,User,Users,9611,/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so -o /Users/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9676,usability,User,Users,9676,s/chenxu/tmp/./aa1_cpp.so. cd /Users/chenxu/tmp ; x86_64-apple-darwin13.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /User,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9747,usability,User,Users,9747,.4.0-clang++ -c -O2 -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9816,usability,User,Users,9816,ize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9902,usability,Command,CommandLineTools,9902,en -fmessage-length=0 -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:9960,usability,User,Users,9960,miniconda3/envs/cxROOTGEANT4/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10040,usability,User,Users,10040,/conda-bld/root_base_1622810034106/work=/usr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcom,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10082,usability,User,Users,10082,sr/local/src/conda/root_base-6.24.0 -fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ld,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10119,usability,User,Users,10119,fdebug-prefix-map=/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -licon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10194,usability,User,Users,10194,=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10275,usability,User,Users,10275,mes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10356,usability,User,Users,10356,ment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /U,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10435,usability,User,Users,10435,64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10513,usability,User,Users,10513,-pthread -stdlib=libc++ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10591,usability,User,Users,10591,EANT4/include -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10675,usability,User,Users,10675,ers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10756,usability,User,Users,10756,/software/conda/miniconda3/envs/cxROOTGEANT4/include/ -I/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /U,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:10836,usability,User,Users,10836,onda/miniconda3/envs/cxROOTGEANT4/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -D__ACLIC__ /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx; x86_64-apple-darwin13.4.0-clang++ -O2 /Users/chenxu/tmp/aa1_cpp_ACLiC_dict.o -o /Users/chenxu/tmp/aa1_cpp_ACLiC_exec /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRint.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCore.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11358,usability,User,Users,11358,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libc++.1.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11438,usability,User,Users,11438,"chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libpcre.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11521,usability,User,Users,11521,"u/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblzma.5.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11596,usability,User,Users,11596,"enxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libxxhash.0.8.0.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11678,usability,User,Users,11678,"chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/liblz4.1.9.3.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11758,usability,User,Users,11758,"/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libz.1.2.11.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11844,usability,User,Users,11844,"u/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libzstd.1.5.0.dylib -lfakelink -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:11924,usability,User,Users,11924," -lapple_nghttp2 -lnetwork -lsqlite3 -lz.1 -lenergytrace -lMobileGestalt -lcoretls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12003,usability,User,Users,12003,"tls -lcoretls_cfhelpers -lxar.1 -lcompression -larchive.2 -lxml2.2 -lpcap.A -ldns_services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12085,usability,User,Users,12085,"services -llzma.5 -lbz2.1.0 -liconv.2 -lcharset.1 -lCheckFix -lmecabra -lmecab -lgermantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpcla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12166,usability,User,Users,12166,"germantok -lThaiTokenizer -lChineseTokenizer -lcmph -lutil -lapp_launch_measurement -lxslt.1 -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12258,usability,User,Users,12258," -lspindump -late -lexpat.1 -lIOReport -lSMC -lmis -lheimdal-asn1 -lAudioStatistics -lperfcheck /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12353,usability,User,Users,12353," /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12394,usability,User,Users,12394,"envs/cxROOTGEANT4/lib/libRIO.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12458,usability,User,Users,12458,"onda/miniconda3/envs/cxROOTGEANT4/lib/libThread.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12544,usability,Command,CommandLineTools,12544,"iconda3/envs/cxROOTGEANT4/lib/libtbb.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12591,usability,User,Users,12591," /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12621,usability,User,Users,12621,"miniconda3/envs/cxROOTGEANT4/lib/libCling.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libImt.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12748,usability,User,Users,12748,"00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMultiProc.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12840,usability,error,error,12840,"/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:12922,usability,User,Users,12922,"sers/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13014,usability,error,error,13014,"oftware/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13102,usability,User,Users,13102,"e/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13194,usability,error,error,13194,"iconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so. ```. `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13278,usability,User,Users,13278,"onda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isles",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13370,usability,error,error,13370,"_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13448,usability,User,Users,13448,"de -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'isl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13540,usability,error,error,13540,"/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13618,usability,User,Users,13618,"Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`. ```. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no membe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13710,usability,error,error,13710,ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13794,usability,User,Users,13794,TGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13886,usability,error,error,13886,mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:13972,usability,User,Users,13972,NT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14064,usability,error,error,14064,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14160,usability,User,Users,14160,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14252,usability,error,error,14252,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14332,usability,User,Users,14332,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14424,usability,error,error,14424,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14514,usability,User,Users,14514,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14606,usability,error,error,14606,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14700,usability,User,Users,14700,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14792,usability,error,error,14792,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14882,usability,User,Users,14882,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:14974,usability,error,error,14974,espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:329:9: error: no member named 'isless' in the global namespace. using ::isless;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:330:9: error: no member named 'islessequal' in the global namespace. using ::islessequal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:331:9: error: no member named 'islessgreater' in the global namespace. using ::islessgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:332:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:333:9: error: no member named 'isunordered' in the global namespace. using ::isunordered;. ~~^. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:101,availability,error,error-no-member-named-signbit-in-th,101,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:521,availability,error,errors,521,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:27,deployability,stack,stackoverflow,27,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:308,interoperability,specif,specific,308,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:101,performance,error,error-no-member-named-signbit-in-th,101,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:521,performance,error,errors,521,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:529,reliability,Doe,Does,529,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:101,safety,error,error-no-member-named-signbit-in-th,101,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:521,safety,error,errors,521,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:123,security,sign,signbit-in-th,123,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:161,security,auth,authors,161,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:101,usability,error,error-no-member-named-signbit-in-th,101,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:521,usability,error,errors,521,It is metion at. . https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode. But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors? Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:18,usability,User,Users,18,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:113,usability,User,Users,113,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:154,usability,User,Users,154,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:218,usability,User,Users,218,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:285,usability,User,Users,285,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:315,usability,User,Users,315,"What about. ```. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:246,availability,error,errors,246,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:506,availability,error,error,506,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:512,integrability,messag,message,512,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:326,interoperability,Platform,Platforms,326,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:343,interoperability,platform,platform,343,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:512,interoperability,messag,message,512,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:246,performance,error,errors,246,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:307,performance,Content,Contents,307,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:506,performance,error,error,506,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:246,safety,error,errors,246,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:506,safety,error,error,506,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2,usability,User,Users,2,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:97,usability,User,Users,97,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:138,usability,User,Users,138,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:212,usability,User,Users,212,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:246,usability,error,errors,246,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:429,usability,Command,CommandLineTools,429,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:506,usability,error,error,506,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:560,usability,Command,CommandLineTools,560,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `. no errors. I found these two files. 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`. 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. are difference. so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`. and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:132,deployability,version,versions,132,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:173,deployability,upgrad,upgrade,173,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:132,integrability,version,versions,132,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:132,modifiability,version,versions,132,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:173,modifiability,upgrad,upgrade,173,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:74,usability,Command,CommandLineTools,74,"sorry, I made a mistake,. I add `ACLiC.IncludePaths: -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include` Before some versions and forgot to delete this after upgrade my system. . root will choose the right header if I don't set by myself. Thanks for answers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8421:9,safety,compl,completely,9,I am not completely sure what kind of example you are looking for. I agree the two pages you pointed out are very poor regarding documentation. I see that [TList has some TIter example](https://root.cern/doc/master/classTList.html). Is it what you are looking for ? if you have an example I would be happy to include it in the doc.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8421:9,security,compl,completely,9,I am not completely sure what kind of example you are looking for. I agree the two pages you pointed out are very poor regarding documentation. I see that [TList has some TIter example](https://root.cern/doc/master/classTList.html). Is it what you are looking for ? if you have an example I would be happy to include it in the doc.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8421:129,usability,document,documentation,129,I am not completely sure what kind of example you are looking for. I agree the two pages you pointed out are very poor regarding documentation. I see that [TList has some TIter example](https://root.cern/doc/master/classTList.html). Is it what you are looking for ? if you have an example I would be happy to include it in the doc.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8424:129,availability,avail,available,129,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:324,deployability,build,build,324,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:107,integrability,configur,configure,107,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:107,modifiability,configur,configure,107,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:129,reliability,availab,available,129,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:129,safety,avail,available,129,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:236,safety,prevent,prevent,236,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:107,security,configur,configure,107,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:129,security,availab,available,129,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:236,security,preven,prevent,236,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:25,usability,support,supported,25,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:43,deployability,version,version,43,I will use the `-Dfail-on-missing=ON` with version 6.24 and check if the behaviour changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:43,integrability,version,version,43,I will use the `-Dfail-on-missing=ON` with version 6.24 and check if the behaviour changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:43,modifiability,version,version,43,I will use the `-Dfail-on-missing=ON` with version 6.24 and check if the behaviour changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:73,usability,behavi,behaviour,73,I will use the `-Dfail-on-missing=ON` with version 6.24 and check if the behaviour changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:126,availability,mainten,maintenance,126,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:33,deployability,instal,installation,33,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:86,deployability,version,version,86,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:86,integrability,version,version,86,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:86,modifiability,version,version,86,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:126,reliability,mainten,maintenance,126,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:0,modifiability,Concern,Concerning,0,"Concerning ROOT 6.24, see also https://github.com/root-project/root/issues/8292 that is possibly a duplicate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:0,testability,Concern,Concerning,0,"Concerning ROOT 6.24, see also https://github.com/root-project/root/issues/8292 that is possibly a duplicate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:27,deployability,build,build,27,"The cleanest way to switch build options on an existing, configured build is:. ```. cat recmake_*. rm CMakeCache.txt. cmake -D.... ```. The `recmake_*` files remind you how you invoked CMake before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:68,deployability,build,build,68,"The cleanest way to switch build options on an existing, configured build is:. ```. cat recmake_*. rm CMakeCache.txt. cmake -D.... ```. The `recmake_*` files remind you how you invoked CMake before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:57,integrability,configur,configured,57,"The cleanest way to switch build options on an existing, configured build is:. ```. cat recmake_*. rm CMakeCache.txt. cmake -D.... ```. The `recmake_*` files remind you how you invoked CMake before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:57,modifiability,configur,configured,57,"The cleanest way to switch build options on an existing, configured build is:. ```. cat recmake_*. rm CMakeCache.txt. cmake -D.... ```. The `recmake_*` files remind you how you invoked CMake before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:57,security,configur,configured,57,"The cleanest way to switch build options on an existing, configured build is:. ```. cat recmake_*. rm CMakeCache.txt. cmake -D.... ```. The `recmake_*` files remind you how you invoked CMake before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/pull/8425:9,interoperability,incompatib,incompatible,9,Backward-incompatible. @pcanal leaving it up as a reminder to decide what to do with #8300,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:77,integrability,event,event,77,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:177,integrability,event,event,177,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:114,testability,simpl,simply,114,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:114,usability,simpl,simply,114,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:130,usability,user,user,130,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:189,usability,user,user,189,"@pcanal I have thought of a ""solution"". If we remove the default value, set `event` to 0 in the method itself and simply warn the user that he/she has not provided a value for `event`, the user will know and other classes that rely on the default value of 0 still work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:290,integrability,event,event,290,"> I am not sure how this would work. Can you make a concrete (code) proposal? I had something like this in mind:. So the declarations in TTree.h remain unchanged, i.e. 0 is the default value for ´entry´. However, by adding this line to both GetEntry() and GetEvent() in TTree.cxx:. `. if (!event) Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. `. The user gets notified if he forgets to provide a value for ´event but other classes that rely on ´event´ being the default value of 0 work as they did before. Would this work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:338,integrability,event,event,338,"> I am not sure how this would work. Can you make a concrete (code) proposal? I had something like this in mind:. So the declarations in TTree.h remain unchanged, i.e. 0 is the default value for ´entry´. However, by adding this line to both GetEntry() and GetEvent() in TTree.cxx:. `. if (!event) Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. `. The user gets notified if he forgets to provide a value for ´event but other classes that rely on ´event´ being the default value of 0 work as they did before. Would this work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:446,integrability,event,event,446,"> I am not sure how this would work. Can you make a concrete (code) proposal? I had something like this in mind:. So the declarations in TTree.h remain unchanged, i.e. 0 is the default value for ´entry´. However, by adding this line to both GetEntry() and GetEvent() in TTree.cxx:. `. if (!event) Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. `. The user gets notified if he forgets to provide a value for ´event but other classes that rely on ´event´ being the default value of 0 work as they did before. Would this work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:484,integrability,event,event,484,"> I am not sure how this would work. Can you make a concrete (code) proposal? I had something like this in mind:. So the declarations in TTree.h remain unchanged, i.e. 0 is the default value for ´entry´. However, by adding this line to both GetEntry() and GetEvent() in TTree.cxx:. `. if (!event) Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. `. The user gets notified if he forgets to provide a value for ´event but other classes that rely on ´event´ being the default value of 0 work as they did before. Would this work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:389,usability,user,user,389,"> I am not sure how this would work. Can you make a concrete (code) proposal? I had something like this in mind:. So the declarations in TTree.h remain unchanged, i.e. 0 is the default value for ´entry´. However, by adding this line to both GetEntry() and GetEvent() in TTree.cxx:. `. if (!event) Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. `. The user gets notified if he forgets to provide a value for ´event but other classes that rely on ´event´ being the default value of 0 work as they did before. Would this work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:206,availability,Sli,Slightly,206,"Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. ```. for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). {. tree->GetEntry(entry);. }. ```. [Slightly related question, did you run any of the test after successfully compiling?]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:206,reliability,Sli,Slightly,206,"Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. ```. for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). {. tree->GetEntry(entry);. }. ```. [Slightly related question, did you run any of the test after successfully compiling?]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:256,safety,test,test,256,"Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. ```. for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). {. tree->GetEntry(entry);. }. ```. [Slightly related question, did you run any of the test after successfully compiling?]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:256,testability,test,test,256,"Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. ```. for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). {. tree->GetEntry(entry);. }. ```. [Slightly related question, did you run any of the test after successfully compiling?]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:230,availability,Sli,Slightly,230,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:440,availability,failur,failure,440,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:426,deployability,fail,failed,426,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:440,deployability,fail,failure,440,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:604,deployability,build,build,604,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:743,deployability,build,build,743,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:440,performance,failur,failure,440,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:230,reliability,Sli,Slightly,230,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:426,reliability,fail,failed,426,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:440,reliability,fail,failure,440,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:280,safety,test,test,280,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:280,testability,test,test,280,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. Actually I had some trouble compiling in my usual manor. But when I tried to compile upstream/master it also failed so the failure didn't seem to originate from my chnages. I wasnt sure what to do so I was hoping I could see what phsft-bot has to say before I do anything. This is how I build: (Ubuntu 20.04 LTS). ```. mkdir rootbuild rootinstall . cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootinstall/ ../root/. cmake --build . -- -j4. cd bin. source thisroot.sh. root. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:230,availability,Sli,Slightly,230,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. But here the user would be providing a value for `entry` that is 0. The warning would only trigger if entry is not provided at all, i.e. `!entry` is true.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:230,reliability,Sli,Slightly,230,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. But here the user would be providing a value for `entry` that is 0. The warning would only trigger if entry is not provided at all, i.e. `!entry` is true.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:280,safety,test,test,280,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. But here the user would be providing a value for `entry` that is 0. The warning would only trigger if entry is not provided at all, i.e. `!entry` is true.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:280,testability,test,test,280,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. But here the user would be providing a value for `entry` that is 0. The warning would only trigger if entry is not provided at all, i.e. `!entry` is true.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:330,usability,user,user,330,"> Well, wouldn't that issue a spurrious/wrong warning in the following case (i.e the normal usage):. > . > ```. > for(Long64_t entry = 0; entry < tree->GetEntriesFast(); ++entry). > {. > tree->GetEntry(entry);. > }. > ```. > . > [Slightly related question, did you run any of the test after successfully compiling?]. But here the user would be providing a value for `entry` that is 0. The warning would only trigger if entry is not provided at all, i.e. `!entry` is true.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:167,availability,error,error,167,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:167,performance,error,error,167,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:142,reliability,doe,does,142,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:167,safety,error,error,167,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:103,testability,simpl,simply,103,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:103,usability,simpl,simply,103,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:167,usability,error,error,167,> `!entry == true` if `entry == 0`: `0` is fals-y in C++. Ohh I didn't know that. Then maybe one could simply check if entry is undefined. Or does that cause the same error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:64,availability,failur,failures,64,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:120,availability,error,errors,120,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:64,deployability,fail,failures,64,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:45,modifiability,variab,variable,45,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:64,performance,failur,failures,64,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:120,performance,error,errors,120,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:64,reliability,fail,failures,64,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:59,safety,test,test,59,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:120,safety,error,errors,120,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:59,testability,test,test,59,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:120,usability,error,errors,120,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:66,availability,failur,failures,66,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:122,availability,error,errors,122,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:66,deployability,fail,failures,66,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:47,modifiability,variab,variable,47,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:66,performance,failur,failures,66,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:122,performance,error,errors,122,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:66,reliability,fail,failures,66,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:61,safety,test,test,61,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:122,safety,error,errors,122,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:61,testability,test,test,61,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:122,usability,error,errors,122,"> There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before. Ah ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:252,availability,error,error,252,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:195,modifiability,paramet,parameter,195,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:252,performance,error,error,252,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:34,safety,test,test,34,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:252,safety,error,error,252,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:88,security,sign,signature,88,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:34,testability,test,test,34,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:222,usability,user,user,222,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:252,usability,error,error,252,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:267,usability,user,user,267,> Please remove the `if (!entry)` test and associated warning. > Please also change the signature of GetEvent. okay. But I did some internet research and couldn't find a way to check if no entry parameter was given by the user without also raising the error when the user enters 0 (since !entry == true if entry == 0),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:136,integrability,event,event,136,"If we wanted to catch those cases, we would just add a new overload. ```. Int_t GetEntry() { . Warning(""TTree::GetEvent"", ""No value for event providied. Set to default value 0"");. return GetEntry(0);. }. ```. but I don't think it is necessary/needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:0,deployability,Build,Build,0,Build seems to have succeeded.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:42,usability,help,help,42,> Thank you very much! Thank you for your help. I learn something new with every PR :D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:50,usability,learn,learn,50,> Thank you very much! Thank you for your help. I learn something new with every PR :D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:102,deployability,updat,updating,102,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:132,performance,content,content,132,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:85,safety,avoid,avoid,85,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:102,safety,updat,updating,102,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:102,security,updat,updating,102,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:237,testability,simpl,simplify,237,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:227,usability,prefer,prefer,227,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:237,usability,simpl,simplify,237,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:278,usability,effectiv,effective,278,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:441,usability,effectiv,effectively,441,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:550,usability,effectiv,effective,550,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:104,deployability,updat,updating,104,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:134,performance,content,content,134,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:659,performance,time,time,659,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:87,safety,avoid,avoid,87,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:104,safety,updat,updating,104,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:104,security,updat,updating,104,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:239,testability,simpl,simplify,239,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:229,usability,prefer,prefer,229,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:239,usability,simpl,simplify,239,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:280,usability,effectiv,effective,280,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:449,usability,effectiv,effectively,449,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:558,usability,effectiv,effective,558,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:610,usability,learn,learned,610,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:680,usability,tip,tip,680,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. > . > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:117,deployability,Releas,ReleaseNotes,117,"@AdvaitDhingra This is a breaking change (we want it, it's still a breaking change). Could you add a note in `README/ReleaseNotes/v626/index.md`, section `## Deprecation and Removal` (which you could - please - rename to `## Deprecation, Removal, Backward Incompatibilities`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:256,interoperability,Incompatib,Incompatibilities,256,"@AdvaitDhingra This is a breaking change (we want it, it's still a breaking change). Could you add a note in `README/ReleaseNotes/v626/index.md`, section `## Deprecation and Removal` (which you could - please - rename to `## Deprecation, Removal, Backward Incompatibilities`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:119,deployability,Releas,ReleaseNotes,119,"> @AdvaitDhingra This is a breaking change (we want it, it's still a breaking change). Could you add a note in `README/ReleaseNotes/v626/index.md`, section `## Deprecation and Removal` (which you could - please - rename to `## Deprecation, Removal, Backward Incompatibilities`. Would that require a separate PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:258,interoperability,Incompatib,Incompatibilities,258,"> @AdvaitDhingra This is a breaking change (we want it, it's still a breaking change). Could you add a note in `README/ReleaseNotes/v626/index.md`, section `## Deprecation and Removal` (which you could - please - rename to `## Deprecation, Removal, Backward Incompatibilities`. Would that require a separate PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:168,deployability,continu,continuous,168,"> @Axel-Naumann can I also add my name to the list of contributors? We really appreciate small fixes like those, but we generally only call out the authors of larger / continuous contributions. We'll think of another way to show our appreciation! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:148,security,auth,authors,148,"> @Axel-Naumann can I also add my name to the list of contributors? We really appreciate small fixes like those, but we generally only call out the authors of larger / continuous contributions. We'll think of another way to show our appreciation! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:176,deployability,continu,continuous,176,"> > @Axel-Naumann can I also add my name to the list of contributors? > . > We really appreciate small fixes like those, but we generally only call out the authors of larger / continuous contributions. We'll think of another way to show our appreciation! :-). Ah ok, that makes sense 😅. I'll make the PR now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:156,security,auth,authors,156,"> > @Axel-Naumann can I also add my name to the list of contributors? > . > We really appreciate small fixes like those, but we generally only call out the authors of larger / continuous contributions. We'll think of another way to show our appreciation! :-). Ah ok, that makes sense 😅. I'll make the PR now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8426:10,deployability,manag,managed,10,I somehow managed to mess up the commits in multiple of my PR's. Sorry for the inconvenience. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:10,energy efficiency,manag,managed,10,I somehow managed to mess up the commits in multiple of my PR's. Sorry for the inconvenience. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:10,safety,manag,managed,10,I somehow managed to mess up the commits in multiple of my PR's. Sorry for the inconvenience. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:61,integrability,messag,messages,61,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:142,integrability,messag,messages,142,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:657,integrability,messag,message,657,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:61,interoperability,messag,messages,61,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:142,interoperability,messag,messages,142,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:657,interoperability,messag,message,657,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:379,safety,input,input,379,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:448,testability,understand,understand,448,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:379,usability,input,input,379,"> Now that you know how to rebase, could you edit the commit messages, please? > (`git rebase -i origin/master`) and then use `e` to edit the messages. > . > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor"". > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short."". > . > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future. > . > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:180,integrability,messag,message,180,"> Are these commit names better? A bit, but look at this commit for example:. https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159. You can use the message to explain a bit better what was going on e.g.:. ```. [TF1] Fix buffer overflow. TF1 was copying 5 characters from an incoming string without checking its length. This was replaced by strncmp, which takes into account the length. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:252,integrability,buffer,buffer,252,"> Are these commit names better? A bit, but look at this commit for example:. https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159. You can use the message to explain a bit better what was going on e.g.:. ```. [TF1] Fix buffer overflow. TF1 was copying 5 characters from an incoming string without checking its length. This was replaced by strncmp, which takes into account the length. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:180,interoperability,messag,message,180,"> Are these commit names better? A bit, but look at this commit for example:. https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159. You can use the message to explain a bit better what was going on e.g.:. ```. [TF1] Fix buffer overflow. TF1 was copying 5 characters from an incoming string without checking its length. This was replaced by strncmp, which takes into account the length. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:207,integrability,messag,message,207,"> > Are these commit names better? > . > A bit, but look at this commit for example:. > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > . > You can use the message to explain a bit better what was going on e.g.:. > . > ```. > [TF1] Fix buffer overflow. > . > TF1 was copying 5 characters from an incoming string without checking its length. > This was replaced by strncmp, which takes into account the length. > ```. So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:287,integrability,buffer,buffer,287,"> > Are these commit names better? > . > A bit, but look at this commit for example:. > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > . > You can use the message to explain a bit better what was going on e.g.:. > . > ```. > [TF1] Fix buffer overflow. > . > TF1 was copying 5 characters from an incoming string without checking its length. > This was replaced by strncmp, which takes into account the length. > ```. So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:207,interoperability,messag,message,207,"> > Are these commit names better? > . > A bit, but look at this commit for example:. > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > . > You can use the message to explain a bit better what was going on e.g.:. > . > ```. > [TF1] Fix buffer overflow. > . > TF1 was copying 5 characters from an incoming string without checking its length. > This was replaced by strncmp, which takes into account the length. > ```. So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:478,usability,interact,interactive,478,"> > Are these commit names better? > . > A bit, but look at this commit for example:. > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > . > You can use the message to explain a bit better what was going on e.g.:. > . > ```. > [TF1] Fix buffer overflow. > . > TF1 was copying 5 characters from an incoming string without checking its length. > This was replaced by strncmp, which takes into account the length. > ```. So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:219,integrability,messag,message,219,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:299,integrability,buffer,buffer,299,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:760,integrability,messag,message,760,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:219,interoperability,messag,message,219,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:760,interoperability,messag,message,760,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:504,usability,interact,interactive,504,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:727,usability,stop,stop,727,"> > > Are these commit names better? > > . > > . > > A bit, but look at this commit for example:. > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159). > > You can use the message to explain a bit better what was going on e.g.:. > > ```. > > [TF1] Fix buffer overflow. > > . > > TF1 was copying 5 characters from an incoming string without checking its length. > > This was replaced by strncmp, which takes into account the length. > > ```. > . > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation? Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:54,usability,help,help,54,I think I got it. Thank you @hageboeck for all of the help :D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:11,usability,Interact,Interactive,11,Very nice! Interactive rebase is awesome once you learn how to use it! 👏,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:50,usability,learn,learn,50,Very nice! Interactive rebase is awesome once you learn how to use it! 👏,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:13,usability,Interact,Interactive,13,"> Very nice! Interactive rebase is awesome once you learn how to use it! Yeah, it is. Feels like I've been living under a rock hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:52,usability,learn,learn,52,"> Very nice! Interactive rebase is awesome once you learn how to use it! Yeah, it is. Feels like I've been living under a rock hehe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:193,deployability,Stack,StackOverflow,193,"Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings 🤣",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:174,usability,help,helpful,174,"Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings 🤣",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:195,deployability,Stack,StackOverflow,195,"> Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings. Ahh hehe. Okay, I'll try to fix it :D . Thanks for the learning opportunity",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:176,usability,help,helpful,176,"> Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings. Ahh hehe. Okay, I'll try to fix it :D . Thanks for the learning opportunity",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:391,usability,learn,learning,391,"> Yes they need to be fixed. I could tell you - but what I'd recommend (look, we're teaching you here :-) ) is to copy the warning text, search the Internet, and pick the most helpful posting on StackOverflow: that'll explain you what to do. And it's a key pattern to become a successful developer, it's how all of us fix our warnings. Ahh hehe. Okay, I'll try to fix it :D . Thanks for the learning opportunity",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:253,deployability,updat,update,253,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:253,safety,updat,update,253,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:244,security,modif,modify,244,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:253,security,updat,update,253,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:150,usability,interact,interactive,150,"Can you squash all commits but ""Added Warning to TString constuctor"" into one, such that this branch ends up having two commits? You can do that with interactive rebase, making all commits *after* the second (!) as ""fixup"", such that they just modify / update the second commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:31,interoperability,format,format,31,That should be all there is to format. At least according to clang-format,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:67,interoperability,format,format,67,That should be all there is to format. At least according to clang-format,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:37,deployability,build,build,37,"Looks good to me, let's wait for the build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:12,deployability,build,builds,12,I think the builds were successful,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:14,deployability,build,builds,14,"> I think the builds were successful. Yes, they were. Yesterday, when you wrote this message, Jenkins (the most important step) was still running. Well done, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:85,integrability,messag,message,85,"> I think the builds were successful. Yes, they were. Yesterday, when you wrote this message, Jenkins (the most important step) was still running. Well done, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:85,interoperability,messag,message,85,"> I think the builds were successful. Yes, they were. Yesterday, when you wrote this message, Jenkins (the most important step) was still running. Well done, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8427:3,usability,close,closed,3,PR closed because the JIRA issue that motivated this PR was also closed (deemed not important enough).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:65,usability,close,closed,65,PR closed because the JIRA issue that motivated this PR was also closed (deemed not important enough).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/issues/8428:28,deployability,log,login,28,"@pcanal Redmine is behind a login wall. Could you paste the core of the bug report in this issue, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:60,energy efficiency,core,core,60,"@pcanal Redmine is behind a login wall. Could you paste the core of the bug report in this issue, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:28,safety,log,login,28,"@pcanal Redmine is behind a login wall. Could you paste the core of the bug report in this issue, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:28,security,log,login,28,"@pcanal Redmine is behind a login wall. Could you paste the core of the bug report in this issue, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:28,testability,log,login,28,"@pcanal Redmine is behind a login wall. Could you paste the core of the bug report in this issue, too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:25,availability,error,error,25,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1180,availability,down,down,1180,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:173,deployability,fail,failed,173,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:549,deployability,contain,contains,549,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1866,deployability,releas,release,1866,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1885,deployability,build,build,1885,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1683,energy efficiency,energ,energy,1683,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:183,integrability,discover,discovered,183,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1073,integrability,schema,schema,1073,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:183,interoperability,discover,discovered,183,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:25,performance,error,error,25,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1553,performance,content,content,1553,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:173,reliability,fail,failed,173,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:25,safety,error,error,25,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:119,safety,valid,validation,119,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:130,safety,test,tests,130,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:731,safety,Input,InputTag,731,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1005,safety,Reme,Remember,1005,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1758,safety,detect,detector,1758,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:119,security,validat,validation,119,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1758,security,detect,detector,1758,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:130,testability,test,tests,130,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:210,testability,trace,traced,210,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:25,usability,error,error,25,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:183,usability,discov,discovered,183,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:279,usability,user,users,279,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:292,usability,workflow,workflow,292,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:731,usability,Input,InputTag,731,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1359,usability,user,users,1359,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:1676,usability,visual,visual,1676,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`. ```. tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz . cd artv3_09. source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh. source setup.sh. scons -j 8. mu2e -c bug.fcl. ```. This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/pull/8429:0,safety,test,test,0,test pending.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:0,testability,test,test,0,test pending.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:38,deployability,patch,patches,38,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:98,deployability,patch,patches,98,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:134,deployability,patch,patches-,134,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:200,deployability,patch,patches-,200,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:221,deployability,build,build,221,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:38,safety,patch,patches,38,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:98,safety,patch,patches,98,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:118,safety,hot,hotfix,118,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:134,safety,patch,patches-,134,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:184,safety,hot,hotfix,184,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:200,safety,patch,patches-,200,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:263,safety,valid,validation,263,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:38,security,patch,patches,38,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:98,security,patch,patches,98,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:134,security,patch,patches-,134,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:200,security,patch,patches-,200,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:263,security,validat,validation,263,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:277,usability,progress,progress,277,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:769,availability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:769,deployability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:781,deployability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:769,integrability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:781,integrability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:781,interoperability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:971,interoperability,plug,plugins,971,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:1043,interoperability,plug,plugin,1043,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:1094,interoperability,plug,plugin,1094,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:769,modifiability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.246 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/7c4f9321a3fcbda598da6b815409a9a5ed72a53e/root-project/root/b14842052e591b8d15424d292f93d88c3726e78f/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:14,availability,ping,ping,14,@Axel-Naumann ping (in Jakob's absence),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8430:769,availability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:769,deployability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:781,deployability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:769,integrability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:781,integrability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:781,interoperability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:971,interoperability,plug,plugins,971,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1043,interoperability,plug,plugin,1043,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1094,interoperability,plug,plugin,1094,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:769,modifiability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 0.749 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d20d833b016aef0225e565901fa1b2547c98f32b/root-project/root/a976544f556601536cd80a761dc43b9deefbaed7/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/default with flags -Dtmva-sofie=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/default with flags -Dtmva-sofie=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/default with flags -Dtmva-sofie=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:37,usability,document,documentation,37,Thank you @sanjibansg for adding the documentation and resolving the other issues. . I think the PR is good to be merged now! Thank you for this useful contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8432:132,availability,failur,failure,132,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:126,deployability,build,build,126,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:132,deployability,fail,failure,132,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:132,performance,failur,failure,132,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:132,reliability,fail,failure,132,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/issues/8435:123,deployability,instal,install,123,"I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:150,interoperability,standard,standard,150,"I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:178,safety,avoid,avoid,178,"I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:8,testability,understand,understand,8,"I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:125,deployability,instal,install,125,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:372,deployability,modul,module,372,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:152,interoperability,standard,standard,152,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:372,modifiability,modul,module,372,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:487,modifiability,variab,variables,487,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:659,modifiability,variab,variables,659,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:575,reliability,doe,doesn,575,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:180,safety,avoid,avoid,180,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:372,safety,modul,module,372,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:10,testability,understand,understand,10,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:518,usability,Person,Personally,518,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:531,usability,prefer,prefer,531,"> I don't understand. Why do you need to source `/usr/local/bin/thisroot.fish`. Isn't the `gnuinstall=ON` option supposed to install ROOT in the system standard location and hence avoid the need of sourcing anything? (sorry if it's a stupid question, but I work on Windows...). That's true, in fact to execute ROOT, sourcing `thisroot` scripts is not necessary but Python module and Jupyter Lab kernel are not in the default search paths and because of this `PYTHONPATH` and `JUPYTER_*` variables must be set anyways. Personally I prefer to do it manually because the script doesn't consider that having `gnuinstall=ON` it don't need to set some of the other variables (e.g.` PATH`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:55,security,auth,author,55,"OK, thanks for the info. Then maybe @Axel-Naumann, the author of the script, can give some hints how to solve this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:91,usability,hint,hints,91,"OK, thanks for the info. Then maybe @Axel-Naumann, the author of the script, can give some hints how to solve this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:370,availability,state,state,370,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:79,deployability,patch,patches,79,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:143,deployability,releas,released,143,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:370,integrability,state,state,370,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:307,interoperability,specif,specific,307,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:288,reliability,doe,doesn,288,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:327,reliability,Doe,Does,327,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:79,safety,patch,patches,79,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:79,security,patch,patches,79,"Thanks. I've applied 0be8bbee9570776d17196b32c82db1d25c6e3530 also to v6-24-00-patches as 5a3cc900fa934ccf7de0fdb45972d09d470e0d9f; it will be released soon. I agree it'd be nice to have `thisroot.*` work also with `gnuinstall=On` - right now, none of the `thisroot.*` scripts work, this doesn't seem to be specific to `fish`. Does `/usr/local/bin/root-config --etcdir` state the right thing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:45,availability,state,state,45,"> Does `/usr/local/bin/root-config --etcdir` state the right thing? Yes, it states `/usr/local/etc/root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:76,availability,state,states,76,"> Does `/usr/local/bin/root-config --etcdir` state the right thing? Yes, it states `/usr/local/etc/root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:45,integrability,state,state,45,"> Does `/usr/local/bin/root-config --etcdir` state the right thing? Yes, it states `/usr/local/etc/root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:76,integrability,state,states,76,"> Does `/usr/local/bin/root-config --etcdir` state the right thing? Yes, it states `/usr/local/etc/root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2,reliability,Doe,Does,2,"> Does `/usr/local/bin/root-config --etcdir` state the right thing? Yes, it states `/usr/local/etc/root`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/pull/8436:1534,availability,servic,service,1534,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1534,deployability,servic,service,1534,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1546,deployability,API,API,1546,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:468,energy efficiency,alloc,allocated,468,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1534,integrability,servic,service,1534,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1546,integrability,API,API,1546,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1546,interoperability,API,API,1546,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1736,interoperability,plug,plugins,1736,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1808,interoperability,plug,plugin,1808,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1859,interoperability,plug,plugin,1859,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:1534,modifiability,servic,service,1534,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:450,performance,memor,memory,450,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:450,usability,memor,memory,450,"## DeepCode's analysis on [#9d9191](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGraph is allocated on the heap and never freed. In function draw_v6. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L45"">draw_v6.cxx:45</a></li> <li><a href=""https://github.com/root-project/root/blob/9d91919a32e80c21d2229d33b31ee1a192fe22f2/tutorials/v7/draw_v6.cxx#L48"">draw_v6.cxx:48</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2Ftutorials%2Fv7%2Fdraw_v6.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/1d919775d3d9224f2e4dc16cecc6fd9bf80d9780/root-project/root/9d91919a32e80c21d2229d33b31ee1a192fe22f2/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8437:10,safety,review,review,10,Requested review from @bellenot since this PR fixes a Windows related issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:10,testability,review,review,10,Requested review from @bellenot since this PR fixes a Windows related issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/issues/8447:163,interoperability,specif,specific,163,"Personally I think it makes sense that we have different commands for different jobs -- `root` is not a swiss-army knife program, it's a C++ interpreter with ROOT-specific features, kind of like `python`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:0,usability,Person,Personally,0,"Personally I think it makes sense that we have different commands for different jobs -- `root` is not a swiss-army knife program, it's a C++ interpreter with ROOT-specific features, kind of like `python`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:57,usability,command,commands,57,"Personally I think it makes sense that we have different commands for different jobs -- `root` is not a swiss-army knife program, it's a C++ interpreter with ROOT-specific features, kind of like `python`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:190,deployability,modul,module,190,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:244,deployability,modul,module,244,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:190,modifiability,modul,module,190,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:244,modifiability,modul,module,244,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:190,safety,modul,module,190,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:244,safety,modul,module,244,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:344,usability,usab,usable,344,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:413,usability,tool,toolbox,413,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:526,usability,clear,clearer,526,"@eguiraud while i agree with you, my thinking actually was also along having a common code base and also ""a la python"" usage: while there is the option of having an executable doing ""import module, run main function"" one can also do ""python -m module module_args"". so, my proposal was from a point of view of code (common code base, maybe also usable programatically in macros, as part maybe of some generic ROOT toolbox) and the second point of view was of actual usage where maybe `root -verb verb_args` could be easier and clearer to use than `root[verb] args` .. but in the end my proposal was more on the lines of ""wouldn't you (devs) be interested in such a usage/point of view ?"" . and getting back to python: yes, it is exactly (also) a swiss-army knife like python :) and beside some bash script that i converted to python, i started to see a point of/play with having root scripts (with root in shebang ;) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:332,deployability,continu,continue,332,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:151,energy efficiency,estimat,estimating,151,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:227,interoperability,share,share,227,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:287,security,sign,significant,287,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:170,usability,user,user,170,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:299,usability,support,support,299,"Just FYI, we already have `-e expr` which allows to do some of what you're suggesting here. I will leave this open for a while to see whether I am mis-estimating and our user community actually wants this. If so, folks, please share your argument / use case for having this. If there no significant support shows up we will instead continue to invest in more fundamental parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:380,deployability,version,version,380,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:496,deployability,instal,installed,496,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:109,integrability,discover,discover,109,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:192,integrability,wrap,wrapper,192,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:380,integrability,version,version,380,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:469,integrability,discover,discover,469,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:109,interoperability,discover,discover,109,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:192,interoperability,wrapper,wrapper,192,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:469,interoperability,discover,discover,469,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:242,modifiability,layer,layer,242,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:380,modifiability,version,version,380,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:251,safety,compl,complexity,251,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:25,security,team,team,25,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:251,security,compl,complexity,251,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:109,usability,discov,discover,109,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:469,usability,discov,discover,469,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag? We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8448:104,interoperability,share,shared,104,I think we should just remove the option `-DBUILD_SHARED_LIBS` rather than fixing it - we are requiring shared library magic e.g. for hiding our own llvm+clang. @maxnoe what's the motivation for getting static libraries?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:35,deployability,instal,installation,35,"Thanks. Is the goal is to make the installation trivial, or what's the motivation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:13,deployability,deploy,deployment,13,"Yes, ease of deployment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:102,availability,avail,available,102,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:172,deployability,build,builds,172,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:326,deployability,deploy,deployment,326,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:355,deployability,build,build,355,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:155,energy efficiency,energ,energy,155,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:80,interoperability,plug,plugin,80,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:206,modifiability,pac,packaged,206,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:102,reliability,availab,available,102,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:102,safety,avail,available,102,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:102,security,availab,available,102,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:241,testability,understand,understand,241,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:857,availability,avail,available,857,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:84,deployability,depend,dependencies,84,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:134,deployability,version,version,134,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:320,deployability,instal,install,320,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:385,deployability,stage,stage,385,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:524,deployability,contain,containers,524,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:642,deployability,resourc,resources,642,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:642,energy efficiency,resourc,resources,642,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:84,integrability,depend,dependencies,84,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:134,integrability,version,version,134,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:84,modifiability,depend,dependencies,84,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:134,modifiability,version,version,134,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:164,modifiability,pac,package,164,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:355,performance,time,times,355,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:642,performance,resourc,resources,642,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:857,reliability,availab,available,857,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:84,safety,depend,dependencies,84,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:377,safety,test,testing,377,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:642,safety,resourc,resources,642,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:780,safety,test,tests,780,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:857,safety,avail,available,857,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:714,security,access,access,714,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:857,security,availab,available,857,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:84,testability,depend,dependencies,84,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:377,testability,test,testing,377,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:558,testability,understand,understand,558,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:642,testability,resourc,resources,642,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:780,testability,test,tests,780,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:81,deployability,build,building,81,"@VukanJ that flag is a CMake builtin, but it should probably be removed from the building documentation, since it does not really apply to ROOT then as advertised",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:114,reliability,doe,does,114,"@VukanJ that flag is a CMake builtin, but it should probably be removed from the building documentation, since it does not really apply to ROOT then as advertised",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:90,usability,document,documentation,90,"@VukanJ that flag is a CMake builtin, but it should probably be removed from the building documentation, since it does not really apply to ROOT then as advertised",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:14,deployability,updat,update,14,"Thanks, we'll update the build docs. Note that CentOS brings ROOT in through EPEL - not sure whether that's sufficient for your case. Sad to hear that you're leaving ROOT!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:25,deployability,build,build,25,"Thanks, we'll update the build docs. Note that CentOS brings ROOT in through EPEL - not sure whether that's sufficient for your case. Sad to hear that you're leaving ROOT!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:14,safety,updat,update,14,"Thanks, we'll update the build docs. Note that CentOS brings ROOT in through EPEL - not sure whether that's sufficient for your case. Sad to hear that you're leaving ROOT!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:14,security,updat,update,14,"Thanks, we'll update the build docs. Note that CentOS brings ROOT in through EPEL - not sure whether that's sufficient for your case. Sad to hear that you're leaving ROOT!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:120,reliability,doe,doesn,120,"Please let me know if you want this issue here to be reopened, because https://github.com/root-project/root/issues/8532 doesn't capture what needs to be done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/pull/8449:232,integrability,sub,subsequent,232,"We could ask our good friends from CMS: @davidlange6 or @smuzaffar - could you cross-check that this change doesn't break CMSSW? If you prefer you can also just tell us to go ahead and merge, and we'll deal with breaking CMSSW in a subsequent step - in this case it's just a heads-up :-) Let us know your preference, please. (Thanks @amadio for pointing this out!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:108,reliability,doe,doesn,108,"We could ask our good friends from CMS: @davidlange6 or @smuzaffar - could you cross-check that this change doesn't break CMSSW? If you prefer you can also just tell us to go ahead and merge, and we'll deal with breaking CMSSW in a subsequent step - in this case it's just a heads-up :-) Let us know your preference, please. (Thanks @amadio for pointing this out!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:136,usability,prefer,prefer,136,"We could ask our good friends from CMS: @davidlange6 or @smuzaffar - could you cross-check that this change doesn't break CMSSW? If you prefer you can also just tell us to go ahead and merge, and we'll deal with breaking CMSSW in a subsequent step - in this case it's just a heads-up :-) Let us know your preference, please. (Thanks @amadio for pointing this out!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:305,usability,prefer,preference,305,"We could ask our good friends from CMS: @davidlange6 or @smuzaffar - could you cross-check that this change doesn't break CMSSW? If you prefer you can also just tell us to go ahead and merge, and we'll deal with breaking CMSSW in a subsequent step - in this case it's just a heads-up :-) Let us know your preference, please. (Thanks @amadio for pointing this out!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:36,safety,test,test,36,"@Axel-Naumann , I have started a PR test here https://github.com/cms-sw/root/pull/157 . It will take few hours before we have the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:36,testability,test,test,36,"@Axel-Naumann , I have started a PR test here https://github.com/cms-sw/root/pull/157 . It will take few hours before we have the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:83,deployability,fail,fails,83,"We don’t appear to use TBufferMerger or TBufferMergerFile (unless GitHub searching fails me). > On Jun 16, 2021, at 6:14 PM, Malik Shahzad Muzaffar ***@***.***> wrote:. > . > . > @Axel-Naumann , I have started a PR test here cms-sw#157 . It will take few hours before we have the results. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:83,reliability,fail,fails,83,"We don’t appear to use TBufferMerger or TBufferMergerFile (unless GitHub searching fails me). > On Jun 16, 2021, at 6:14 PM, Malik Shahzad Muzaffar ***@***.***> wrote:. > . > . > @Axel-Naumann , I have started a PR test here cms-sw#157 . It will take few hours before we have the results. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:215,safety,test,test,215,"We don’t appear to use TBufferMerger or TBufferMergerFile (unless GitHub searching fails me). > On Jun 16, 2021, at 6:14 PM, Malik Shahzad Muzaffar ***@***.***> wrote:. > . > . > @Axel-Naumann , I have started a PR test here cms-sw#157 . It will take few hours before we have the results. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:215,testability,test,test,215,"We don’t appear to use TBufferMerger or TBufferMergerFile (unless GitHub searching fails me). > On Jun 16, 2021, at 6:14 PM, Malik Shahzad Muzaffar ***@***.***> wrote:. > . > . > @Axel-Naumann , I have started a PR test here cms-sw#157 . It will take few hours before we have the results. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:58,performance,I/O,I/O,58,"@eguiraud LinkDef just needs `ROOT::TBufferMerger` - ROOT I/O knows the other one is just a typedef. But we don't really support I/O *of* `TBufferMerger`, so we just need to provide the `ClassDef` functions' implementation in the dictionary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:129,performance,I/O,I/O,129,"@eguiraud LinkDef just needs `ROOT::TBufferMerger` - ROOT I/O knows the other one is just a typedef. But we don't really support I/O *of* `TBufferMerger`, so we just need to provide the `ClassDef` functions' implementation in the dictionary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:121,usability,support,support,121,"@eguiraud LinkDef just needs `ROOT::TBufferMerger` - ROOT I/O knows the other one is just a typedef. But we don't really support I/O *of* `TBufferMerger`, so we just need to provide the `ClassDef` functions' implementation in the dictionary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,deployability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,integrability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,interoperability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,modifiability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,reliability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:18,safety,test,test,18,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,security,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:18,testability,test,test,18,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8449:47,testability,integr,integrate,47,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8449
https://github.com/root-project/root/pull/8452:21,safety,review,review,21,"Thanks for the quick review, @mxxo and @jblomer! Let's see if we can merge this today :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:21,testability,review,review,21,"Thanks for the quick review, @mxxo and @jblomer! Let's see if we can merge this today :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/issues/8453:128,performance,memor,memory,128,"Hi @sabiha84 ,. a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:113,security,access,access,113,"Hi @sabiha84 ,. a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:76,usability,user,user,76,"Hi @sabiha84 ,. a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:128,usability,memor,memory,128,"Hi @sabiha84 ,. a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:189,usability,support,support,189,"Hi @sabiha84 ,. a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/pull/8454:769,availability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:769,deployability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:781,deployability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:769,integrability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:781,integrability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:781,interoperability,API,API,781,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:971,interoperability,plug,plugins,971,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:1043,interoperability,plug,plugin,1043,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:1094,interoperability,plug,plugin,1094,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/pull/8454:769,modifiability,servic,service,769,"<img src=""https://www.deepcode.ai/icons/green_check.svg"" width= ""50px"" align= ""left""/> Congratulations :tada:. DeepCode [analyzed](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) your code in 2.994 seconds and we found no issues. Enjoy a moment of no bugs :sunny:. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/c4ea8220a33d16e5136e7698ba7848955e1db386/root-project/root/2f4238950652e1b3a37bc5e49c2bf3cab3f9e166/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8454
https://github.com/root-project/root/issues/8458:880,deployability,build,build,880,"I don't understand the first warning - my line `RLogger.hxx:76` is. ```cpp. default:;. ```. which should have silenced this warning? What are the warning flags you use? Is this Ubuntu 19.10 or 19.04 (both are end of life, btw.) with GCC 8.3? I cannot reproduce this warning in a [stand-alone example](https://www.godbolt.org/z/Kv7TqY61h), so I must be missing something. The second ""issue"" actually tells me that you are using `-Weffc++` which we don't support in ROOT since many many years now: it did not serve us well, causing many bogus changes just to make `-Weffc++` happy. Here, too, the warning is just not relevant: yes, we know that we cannot delete an object of type `RLogManager` through a pointer to `RLogChannel`, but we are not going to do that. OTOH we cannot make the dtor of `RLogChannel` protected because we actually have objects of that type. So please don't build your ROOT headers with `-Weffc++`, an consider replacing `-Weffc++` with some more helpful static analysis. I will leave this open until we understand the first issue better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:8,testability,understand,understand,8,"I don't understand the first warning - my line `RLogger.hxx:76` is. ```cpp. default:;. ```. which should have silenced this warning? What are the warning flags you use? Is this Ubuntu 19.10 or 19.04 (both are end of life, btw.) with GCC 8.3? I cannot reproduce this warning in a [stand-alone example](https://www.godbolt.org/z/Kv7TqY61h), so I must be missing something. The second ""issue"" actually tells me that you are using `-Weffc++` which we don't support in ROOT since many many years now: it did not serve us well, causing many bogus changes just to make `-Weffc++` happy. Here, too, the warning is just not relevant: yes, we know that we cannot delete an object of type `RLogManager` through a pointer to `RLogChannel`, but we are not going to do that. OTOH we cannot make the dtor of `RLogChannel` protected because we actually have objects of that type. So please don't build your ROOT headers with `-Weffc++`, an consider replacing `-Weffc++` with some more helpful static analysis. I will leave this open until we understand the first issue better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:1026,testability,understand,understand,1026,"I don't understand the first warning - my line `RLogger.hxx:76` is. ```cpp. default:;. ```. which should have silenced this warning? What are the warning flags you use? Is this Ubuntu 19.10 or 19.04 (both are end of life, btw.) with GCC 8.3? I cannot reproduce this warning in a [stand-alone example](https://www.godbolt.org/z/Kv7TqY61h), so I must be missing something. The second ""issue"" actually tells me that you are using `-Weffc++` which we don't support in ROOT since many many years now: it did not serve us well, causing many bogus changes just to make `-Weffc++` happy. Here, too, the warning is just not relevant: yes, we know that we cannot delete an object of type `RLogManager` through a pointer to `RLogChannel`, but we are not going to do that. OTOH we cannot make the dtor of `RLogChannel` protected because we actually have objects of that type. So please don't build your ROOT headers with `-Weffc++`, an consider replacing `-Weffc++` with some more helpful static analysis. I will leave this open until we understand the first issue better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:453,usability,support,support,453,"I don't understand the first warning - my line `RLogger.hxx:76` is. ```cpp. default:;. ```. which should have silenced this warning? What are the warning flags you use? Is this Ubuntu 19.10 or 19.04 (both are end of life, btw.) with GCC 8.3? I cannot reproduce this warning in a [stand-alone example](https://www.godbolt.org/z/Kv7TqY61h), so I must be missing something. The second ""issue"" actually tells me that you are using `-Weffc++` which we don't support in ROOT since many many years now: it did not serve us well, causing many bogus changes just to make `-Weffc++` happy. Here, too, the warning is just not relevant: yes, we know that we cannot delete an object of type `RLogManager` through a pointer to `RLogChannel`, but we are not going to do that. OTOH we cannot make the dtor of `RLogChannel` protected because we actually have objects of that type. So please don't build your ROOT headers with `-Weffc++`, an consider replacing `-Weffc++` with some more helpful static analysis. I will leave this open until we understand the first issue better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:969,usability,help,helpful,969,"I don't understand the first warning - my line `RLogger.hxx:76` is. ```cpp. default:;. ```. which should have silenced this warning? What are the warning flags you use? Is this Ubuntu 19.10 or 19.04 (both are end of life, btw.) with GCC 8.3? I cannot reproduce this warning in a [stand-alone example](https://www.godbolt.org/z/Kv7TqY61h), so I must be missing something. The second ""issue"" actually tells me that you are using `-Weffc++` which we don't support in ROOT since many many years now: it did not serve us well, causing many bogus changes just to make `-Weffc++` happy. Here, too, the warning is just not relevant: yes, we know that we cannot delete an object of type `RLogManager` through a pointer to `RLogChannel`, but we are not going to do that. OTOH we cannot make the dtor of `RLogChannel` protected because we actually have objects of that type. So please don't build your ROOT headers with `-Weffc++`, an consider replacing `-Weffc++` with some more helpful static analysis. I will leave this open until we understand the first issue better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8459:412,energy efficiency,load,loaded,412,"<pre>@@ -49,6 +49,14 @@. &lt;/div&gt;. &lt;script&gt;. if (typeof require !== &apos;undefined&apos;) {{. + try {{. + var base_url = JSON.parse(document.getElementById(&apos;jupyter-config-data&apos;).innerHTML).baseUrl;. + }} catch(_) {{. + var base_url = &apos;/&apos;;. + }};. + require.config({{. + baseUrl: base_url + &apos;static/&apos;. + }});. . // All requirements met (we are in jupyter notebooks or we loaded requirejs before). display_{jsDivId}();. </pre>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:412,performance,load,loaded,412,"<pre>@@ -49,6 +49,14 @@. &lt;/div&gt;. &lt;script&gt;. if (typeof require !== &apos;undefined&apos;) {{. + try {{. + var base_url = JSON.parse(document.getElementById(&apos;jupyter-config-data&apos;).innerHTML).baseUrl;. + }} catch(_) {{. + var base_url = &apos;/&apos;;. + }};. + require.config({{. + baseUrl: base_url + &apos;static/&apos;. + }});. . // All requirements met (we are in jupyter notebooks or we loaded requirejs before). display_{jsDivId}();. </pre>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:143,usability,document,document,143,"<pre>@@ -49,6 +49,14 @@. &lt;/div&gt;. &lt;script&gt;. if (typeof require !== &apos;undefined&apos;) {{. + try {{. + var base_url = JSON.parse(document.getElementById(&apos;jupyter-config-data&apos;).innerHTML).baseUrl;. + }} catch(_) {{. + var base_url = &apos;/&apos;;. + }};. + require.config({{. + baseUrl: base_url + &apos;static/&apos;. + }});. . // All requirements met (we are in jupyter notebooks or we loaded requirejs before). display_{jsDivId}();. </pre>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:87,usability,confirm,confirm,87,"> Hi. Will back-porting the following commit to 6.22 work? Probably, @joequant can you confirm this works for you from 6.24 onwards?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:12,deployability,patch,patch,12,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:48,deployability,build,build,48,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:143,deployability,patch,patch,143,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:235,interoperability,bind,bindings,235,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:235,modifiability,bind,bindings,235,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:12,safety,patch,patch,12,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:143,safety,patch,patch,143,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:12,security,patch,patch,12,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:143,security,patch,patch,143,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:269,usability,help,helpers,269,Here is the patch I applied for the Fedora/EPEL build:. https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-jupyroot-jupyterlab-compat.patch. This corresponds to:. git diff v6-22-08..ca72f6287bc2660d7cf45a3bd2dd7e4ad51b2aec -- bindings/jupyroot/python/JupyROOT/helpers/utils.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:144,deployability,patch,patch,144,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:232,deployability,patch,patch,232,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:144,safety,patch,patch,144,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:232,safety,patch,patch,232,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:144,security,patch,patch,144,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:232,security,patch,patch,232,The PR referenced above has been merged with fixes for JSROOT-JupyROOT in ROOT 6.22. @ellert please note that it includes more changes than the patch you applied (I still couldn't see the JSROOT graphics in JupyterLab 3.0 with that patch alone).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/pull/8461:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:149,usability,user,users,149,"I looked into this but. - `TStreamerInfo::EReadWrite` isn't a 1-to-1 on `EDataType`. - much of `TStreamerInfo::EReadWrite` is sufficiently opaque to users anyway (`kSkipL` etc). - all values of `TStreamerInfo::EReadWrite` have explicit initializers, making the int to `TStreamerInfo::EReadWrite` mapping trivial. This is an expert-only output and I think that's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8463:46,deployability,automat,automatically,46,"Thanks, right i forgot that the notebooks are automatically generated from the Python code! I think having isolated cells with the titles is fine, this is also done in most other tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:107,safety,isol,isolated,107,"Thanks, right i forgot that the notebooks are automatically generated from the Python code! I think having isolated cells with the titles is fine, this is also done in most other tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:107,security,iso,isolated,107,"Thanks, right i forgot that the notebooks are automatically generated from the Python code! I think having isolated cells with the titles is fine, this is also done in most other tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:46,testability,automat,automatically,46,"Thanks, right i forgot that the notebooks are automatically generated from the Python code! I think having isolated cells with the titles is fine, this is also done in most other tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:107,testability,isol,isolated,107,"Thanks, right i forgot that the notebooks are automatically generated from the Python code! I think having isolated cells with the titles is fine, this is also done in most other tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8467:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/issues/8470:115,availability,error,error,115,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:121,integrability,messag,messages,121,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:121,interoperability,messag,messages,121,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:115,performance,error,error,115,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:12,reliability,doe,does,12,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:115,safety,error,error,115,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:115,usability,error,error,115,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8474:116,safety,test,test,116,"Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:116,testability,test,test,116,"Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:160,availability,fault,fault,160,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:128,deployability,stack,stack,128,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:160,energy efficiency,fault,fault,160,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:373,integrability,interfac,interface,373,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:36,interoperability,share,share,36,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:373,interoperability,interfac,interface,373,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:373,modifiability,interfac,interface,373,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:160,performance,fault,fault,160,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:160,reliability,fault,fault,160,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:160,safety,fault,fault,160,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:134,testability,trace,trace,134,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:183,usability,help,helpful,183,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:248,usability,command,command,248,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:322,usability,indicat,indicate,322,"Hi @VanyaBelyaev! I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. Thanks a lot, I hope we can fix this issue quickly! Cheers,. Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:588,deployability,stack,stack,588,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:871,deployability,stack,stack,871,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:307,energy efficiency,model,models,307,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:386,energy efficiency,model,model,386,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:400,energy efficiency,draw,draw,400,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:424,energy efficiency,draw,draw,424,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:464,energy efficiency,draw,draw,464,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:487,energy efficiency,draw,draw,487,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1131,energy efficiency,alloc,allocator,1131," Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #11 0x00007f36324ba870 in RooAddPdf::getAnalyticalIntegralWN(RooArgSet&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:473,integrability,compon,components,473,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:802,integrability,sub,submit,802,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:473,interoperability,compon,components,473,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:473,modifiability,compon,components,473,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:118,safety,test,test,118,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:307,security,model,models,307,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:386,security,model,model,386,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:118,testability,test,test,118,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:300,testability,simpl,simple,300,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:877,testability,trace,trace,877,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:300,usability,simpl,simple,300,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:632,usability,hint,hint,632,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:676,usability,help,help,676,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:953,usability,help,help,953,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ? Dear @eguiraud. I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++. Note that for simple models I have no problems. It happens only for multidimensional multicomponent model, when I draw projecton. - first draw data set with `Invisible` flag . - draw fit components. - draw data with normal vizibility . . And it segfaults at the second step. . The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so. #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:168,availability,fault,fault,168,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:948,availability,fault,fault,948,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:136,deployability,stack,stack,136,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:554,deployability,stack,stack,554,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:168,energy efficiency,fault,fault,168,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:694,energy efficiency,Draw,DrawOptions,694,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:790,energy efficiency,model,model,790,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:948,energy efficiency,fault,fault,948,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:387,integrability,interfac,interface,387,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:796,integrability,compon,component,796,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:826,integrability,Compon,Components,826,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:44,interoperability,share,share,44,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:387,interoperability,interfac,interface,387,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:796,interoperability,compon,component,796,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:826,interoperability,Compon,Components,826,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:387,modifiability,interfac,interface,387,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:796,modifiability,compon,component,796,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:826,modifiability,Compon,Components,826,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:168,performance,fault,fault,168,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:948,performance,fault,fault,948,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:168,reliability,fault,fault,168,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:948,reliability,fault,fault,948,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:168,safety,fault,fault,168,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:948,safety,fault,fault,948,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:790,security,model,model,790,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:142,testability,trace,trace,142,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:191,usability,help,helpful,191,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:256,usability,command,command,256,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:336,usability,indicat,indicate,336,"> Hi @VanyaBelyaev! > . > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`? > . > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this. > Thanks a lot, I hope we can fix this issue quickly! > . > Cheers,. > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer. The options are rather trivial. ```. MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(). ```. for data, then I have next call for the model component with options . ```. Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1). ```. and I get sef fault. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:39,deployability,stack,stacktrace,39,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:68,deployability,build,build,68,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:98,deployability,build,build,98,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:88,energy efficiency,optim,optimized,88,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:88,performance,optimiz,optimized,88,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:41,deployability,stack,stacktrace,41,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:70,deployability,build,build,70,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:100,deployability,build,build,100,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:90,energy efficiency,optim,optimized,90,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:90,performance,optimiz,optimized,90,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:26,deployability,stack,stack,26,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:51,deployability,build,build,51,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:648,energy efficiency,model,model,648,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:548,interoperability,share,share,548,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:648,security,model,model,648,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:32,testability,trace,trace,32,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:524,testability,understand,understand,524,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:687,testability,understand,understand,687,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:67,usability,help,helpful,67,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:572,usability,guid,guidelines,572,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:669,usability,help,helpful,669,"Hi @VanyaBelyaev, yes the stack trace with a debug build is indeed helpful because of the line numbers. Seeing that `RooProdPdf::factorizeProduct` is involved, I am sure that the recently merged PR https://github.com/root-project/root/pull/7907 causes your problem. No need for a C++ producer then, this problem has nothing to do with pyROOT. But even knowing that, I don't know enough about the problem to solve it. Do you mind sharing your RooFit code that produces the problem? Even better of course with the data, but I understand if you can't share it because of the guidelines of your experiment. But even without the data, seeing the RooFit model would be super helpful for me to understand how the RooProdPdf enters the game. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:316,deployability,fail,failing,316,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:839,deployability,stack,stack,839,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:856,deployability,build,build,856,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:721,energy efficiency,model,model,721,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:141,integrability,compon,components,141,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:683,integrability,compon,components,683,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:141,interoperability,compon,components,141,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:683,interoperability,compon,components,683,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:141,modifiability,compon,components,141,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:683,modifiability,compon,components,683,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:316,reliability,fail,failing,316,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:440,reliability,doe,does,440,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:325,safety,test,test,325,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:400,safety,test,tests,400,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:525,safety,compl,complicated,525,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:607,safety,test,test,607,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:525,security,compl,complicated,525,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:721,security,model,model,721,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:42,testability,simpl,simple,42,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:325,testability,test,test,325,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:400,testability,test,tests,400,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:607,testability,test,test,607,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:42,usability,simpl,simple,42,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap . You can see the actual (failing) test code in . https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py. It does not rely any external data - all data is produced internally . It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. . But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:790,availability,operat,operator,790,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1206,availability,operat,operator,1206,".cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:64,deployability,stack,stack,64,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:87,deployability,build,build,87,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:360,deployability,stack,stack,360,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:590,deployability,build,build,590,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:635,deployability,build,build,635,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:866,deployability,build,build,866,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,deployability,build,build,911,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1472,deployability,releas,releases,1472,"====================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2366,deployability,releas,releases,2366,"RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3221,deployability,releas,releases,3221,"Arg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3906,deployability,releas,releases,3906,"*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/je",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4071,deployability,build,build,4071,"ooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnaly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4116,deployability,build,build,4116,"onst>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4374,deployability,build,build,4374,"**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4419,deployability,build,build,4419,"oAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4631,deployability,build,build,4631,"*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4676,deployability,build,build,4676,"AbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4902,deployability,build,build,4902,"/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:4947,deployability,build,build,4947,"ude/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5173,deployability,build,build,5173,"/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5218,deployability,build,build,5218,"n RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5442,deployability,build,build,5442,"rc/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5487,deployability,build,build,5487,".cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,deployability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5856,deployability,build,build,5856,"..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5901,deployability,build,build,5901,"ild/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeNam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6117,deployability,build,build,6117," analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, fram",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6162,deployability,build,build,6162,"x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6373,deployability,build,build,6373," allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/j",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6418,deployability,build,build,6418,", rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6609,deployability,build,build,6609,"oRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6654,deployability,build,build,6654,"a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6809,deployability,depend,dependentVars,6809,"72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6928,deployability,build,build,6928,"OOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6973,deployability,build,build,6973,"l.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7145,deployability,build,build,7145,"htly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=...,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7190,deployability,build,build,7190,"OT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7369,deployability,build,build,7369,"/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7414,deployability,build,build,7414,"/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7592,deployability,build,build,7592,"Name=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7637,deployability,build,build,7637,"htly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7903,deployability,build,build,7903,"0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #37 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #38 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:7948,deployability,build,build,7948,"/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #37 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #38 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:8214,deployability,build,build,8214,"c/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #37 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #38 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #39 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #40 0x00000000103c6160 in ?? (). #41 0x0000000100000010 in ?? (). #42 0x0000001800000000 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:8259,deployability,build,build,8259,"cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #37 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #38 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #39 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #40 0x00000000103c6160 in ?? (). #41 0x0000000100000010 in ?? (). #42 0x0000001800000000 in ?? (). #43 0x00007ffeb72445c0 in ?? (). #4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1112,energy efficiency,alloc,allocator,1112,"ght hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonym",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1288,energy efficiency,alloc,allocator,1288,"bmit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_itera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1387,energy efficiency,alloc,allocator,1387,"tachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1669,energy efficiency,alloc,allocator,1669,"roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1790,energy efficiency,alloc,allocator,1790,"tor()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1956,energy efficiency,alloc,allocator,1956,"itcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2054,energy efficiency,alloc,allocator,2054,"amespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2175,energy efficiency,alloc,allocator,2175,"bda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2557,energy efficiency,alloc,allocator,2557,"x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2678,energy efficiency,alloc,allocator,2678,"bsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2844,energy efficiency,alloc,allocator,2844,"t>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__firs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2942,energy efficiency,alloc,allocator,2942,"g*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3063,energy efficiency,alloc,allocator,3063,"bsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >, std::random_access_iterator_tag) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3410,energy efficiency,alloc,allocator,3410,"++/9.2.0/bits/stl_algo.h:144. #15 0x00007f7898f63e7a in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3502,energy efficiency,alloc,allocator,3502,"terator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3666,energy efficiency,alloc,allocator,3666,", std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:3764,energy efficiency,alloc,allocator,3764,"> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:161. #16 0x00007f7898f63d2e in std::find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, (anonymous namespace)::<lambda(const RooAbsArg*)>) (__first=..., __last=..., __pred=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/stl_algo.h:3924. #17 0x00007f7898f5a232 in (anonymous namespace)::removeCommon (v=..., other=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:571. #18 0x00007f7898f5a92b in RooProdPdf::factorizeProduct (this=0x103f50d0, normSet=..., intSet=..., termList=..., normList=..., impDepList=..., crossDepList=..., intList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:690. #19 0x00007f7898f5b39d in RooProdPdf::getPartIntList (this=0x103f50d0, nset=0xe96b410, iset=0x7ffeb7240b50, isetRangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:809. #20 0x00007f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:291,integrability,sub,submit,291,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,integrability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6809,integrability,depend,dependentVars,6809,"72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,interoperability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,modifiability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6809,modifiability,depend,dependentVars,6809,"72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,reliability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6809,safety,depend,dependentVars,6809,"72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,security,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:70,testability,trace,trace,70,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:366,testability,trace,trace,366,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:5735,testability,Integr,Integral,5735,"oProdPdf.cxx:809. #20 0x00007f7898f61258 in RooProdPdf::getAnalyticalIntegralWN (this=0x103f50d0, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:1794. #21 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1035b100, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #22 0x00007f7898df7208 in RooAddPdf::getAnalyticalIntegralWN (this=0x1034f300, allVars=..., analVars=..., normSet=0xe96b410, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAddPdf.cxx:952. #23 0x00007f7898f82051 in RooRealIntegral::RooRealIntegral (this=0x104116f0, name=0x104116a0 ""fit3ds__Int[mass_y,mass_z]_Norm[mass_x,mass_y,mass_z]"", title=0x10411600 ""Integral of Fit3DSym fitSym_comp"", function=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:6809,testability,depend,dependentVars,6809,"72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420. #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667. #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594. #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216. #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=. 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981. #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099. #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928. #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:121,usability,hint,hint,121,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:165,usability,help,help,165,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:442,usability,help,help,442,". Dear @eguiraud and @guitargeek . . With some delay I've got a stack trace with debug build. ```. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #11 0x00007f7898d455ba in RooAbsArg::namePtr (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsArg.h:544. #12 0x00007f7898f5a179 in (anonymous namespace)::<lambda(const RooAbsArg*)>::operator()(const RooAbsArg *) const (__closure=0x7ffeb723ee08, elm=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooProdPdf.cxx:568. #13 0x00007f7898f643f7 in __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> >::operator()<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >) (this=0x7ffeb723ee08, __it=...) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/include/c++/9.2.0/bits/predefined_ops.h:283. #14 0x00007f7898f640a8 in std::__find_if<__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__ops::_Iter_pred<(anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>)::<lambda(const RooAbsArg*)> > >(__gnu_cxx::__normal_iterator<RooAbsArg**, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >, __gnu_cxx::__norm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:9574,usability,confirm,confirms,9574,"/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149. #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1704. #32 0x00007f7898d32b3a in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, arg1=..., arg2=..., arg3=..., arg4=..., arg5=..., arg6=..., arg7=..., arg8=..., arg9=..., arg10=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsPdf.h:126. #33 0x00007f788b145038 in ?? (). #34 0x000000000fe559c0 in ?? (). #35 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #36 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #37 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #38 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #39 0x00007f78994db9c0 in ?? () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-centos7-gcc9-dbg/lib/libRooFitCore.so. #40 0x00000000103c6160 in ?? (). #41 0x0000000100000010 in ?? (). #42 0x0000001800000000 in ?? (). #43 0x00007ffeb72445c0 in ?? (). #44 0x0000000001b9be10 in ?? (). #45 0x00007ffe00000000 in ?? (). #46 0x0000000010420ff0 in ?? (). #47 0x0000000010420ff0 in ?? (). #48 0x0000000010420ff0 in ?? (). #49 0x0000000000000001 in ?? (). #50 0x0000000000000000 in ?? (). ===========================================================. ```. It looks like it confirms the problem fixed by @guitargeek",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:225,deployability,patch,patch,225,> Thanks a lot for the detailed information! It was due to a stupid bug in recently introduced. I suggest a fix in #8486. Thank you very much @guitargeek for prompt fix! . Are there some (approximate) time estimated when the patch is expected to be applied ? (days or weeks or a month?).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:206,energy efficiency,estimat,estimated,206,> Thanks a lot for the detailed information! It was due to a stupid bug in recently introduced. I suggest a fix in #8486. Thank you very much @guitargeek for prompt fix! . Are there some (approximate) time estimated when the patch is expected to be applied ? (days or weeks or a month?).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:201,performance,time,time,201,> Thanks a lot for the detailed information! It was due to a stupid bug in recently introduced. I suggest a fix in #8486. Thank you very much @guitargeek for prompt fix! . Are there some (approximate) time estimated when the patch is expected to be applied ? (days or weeks or a month?).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:225,safety,patch,patch,225,> Thanks a lot for the detailed information! It was due to a stupid bug in recently introduced. I suggest a fix in #8486. Thank you very much @guitargeek for prompt fix! . Are there some (approximate) time estimated when the patch is expected to be applied ? (days or weeks or a month?).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:225,security,patch,patch,225,> Thanks a lot for the detailed information! It was due to a stupid bug in recently introduced. I suggest a fix in #8486. Thank you very much @guitargeek for prompt fix! . Are there some (approximate) time estimated when the patch is expected to be applied ? (days or weeks or a month?).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:8,deployability,patch,patch,8,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:8,safety,patch,patch,8,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:8,security,patch,patch,8,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:91,testability,simpl,simple,91,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:91,usability,simpl,simple,91,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/pull/8475:40,reliability,doe,does,40,@bernhardmgruber Interesting: clang/mac does not seem to like the `{}` initializer. Do you have an idea why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:242,energy efficiency,alloc,allocation,242,"Variable-sized C-arrays are not ""proper"" C++:. ```c++. void f(int s) {. int arr[s]; // This isn't std C++ but only allowed in C. ```. OTOH all compilers support it, since ages. The C++y solution is to use a std::vector, at the cost of a heap allocation. I don't know how hot the function is and whether this matters. But I guess those are your options:. - speed: variable sized array with `memset`. - C++ conformance: `vector`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:0,modifiability,Variab,Variable-sized,0,"Variable-sized C-arrays are not ""proper"" C++:. ```c++. void f(int s) {. int arr[s]; // This isn't std C++ but only allowed in C. ```. OTOH all compilers support it, since ages. The C++y solution is to use a std::vector, at the cost of a heap allocation. I don't know how hot the function is and whether this matters. But I guess those are your options:. - speed: variable sized array with `memset`. - C++ conformance: `vector`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:363,modifiability,variab,variable,363,"Variable-sized C-arrays are not ""proper"" C++:. ```c++. void f(int s) {. int arr[s]; // This isn't std C++ but only allowed in C. ```. OTOH all compilers support it, since ages. The C++y solution is to use a std::vector, at the cost of a heap allocation. I don't know how hot the function is and whether this matters. But I guess those are your options:. - speed: variable sized array with `memset`. - C++ conformance: `vector`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:271,safety,hot,hot,271,"Variable-sized C-arrays are not ""proper"" C++:. ```c++. void f(int s) {. int arr[s]; // This isn't std C++ but only allowed in C. ```. OTOH all compilers support it, since ages. The C++y solution is to use a std::vector, at the cost of a heap allocation. I don't know how hot the function is and whether this matters. But I guess those are your options:. - speed: variable sized array with `memset`. - C++ conformance: `vector`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:153,usability,support,support,153,"Variable-sized C-arrays are not ""proper"" C++:. ```c++. void f(int s) {. int arr[s]; // This isn't std C++ but only allowed in C. ```. OTOH all compilers support it, since ages. The C++y solution is to use a std::vector, at the cost of a heap allocation. I don't know how hot the function is and whether this matters. But I guess those are your options:. - speed: variable sized array with `memset`. - C++ conformance: `vector`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:186,deployability,build,build,186,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:256,deployability,stack,stack,256,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:574,deployability,resourc,resources,574,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:611,deployability,stack,stack,611,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:262,energy efficiency,alloc,allocation,262,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:574,energy efficiency,resourc,resources,574,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:617,energy efficiency,alloc,allocator,617,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:555,modifiability,polymorph,polymorphic,555,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:458,performance,perform,performance,458,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:470,performance,bottleneck,bottleneck,470,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:567,performance,memor,memory,567,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:574,performance,resourc,resources,574,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:76,reliability,doe,does,76,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:574,safety,resourc,resources,574,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:574,testability,resourc,resources,574,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:219,usability,behavi,behavior,219,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:458,usability,perform,performance,458,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8475:567,usability,memor,memory,567,"Sorry, I did not even see this was a VLA. What Axel said applies. Btw, that does not compile with MSVC (not the initialization, VLAs are generally forbidden) and will break your Windows build, if you care. For the same behavior on Windows you need to call stack allocation functions like `_alloca` or `_malloca` and then `memset`. `std::vector` works in all cases, but goes to the heap, which is what I would recommend unless you can proof this code to be a performance bottleneck. > The C++y solution is to use a std::vector. I guess you are refering to polymorphic memory resources in C++17 which IIRC have a stack allocator? I think it is `monotonic_buffer_resource`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8475
https://github.com/root-project/root/pull/8476:54,safety,test,test,54,"Now that I think about it, it would be good to have a test for this using maybe the reproducer provided at https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:54,testability,test,test,54,"Now that I think about it, it would be good to have a test for this using maybe the reproducer provided at https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:18,safety,test,test,18,Sure I'll add the test too!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:18,testability,test,test,18,Sure I'll add the test too!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:0,safety,Test,Test,0,Test: https://github.com/root-project/roottest/pull/722,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:0,testability,Test,Test,0,Test: https://github.com/root-project/roottest/pull/722,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8477:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:196,availability,operat,operator,196,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:310,availability,error,error,310,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:185,interoperability,convers,conversion,185,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:244,interoperability,platform,platform,244,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:310,performance,error,error,310,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:310,safety,error,error,310,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:310,usability,error,error,310,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:55,availability,error,errors,55,"The platform is Linux (Debian 9). The full compilation errors for `RDFInterfaceUtils.cxx` is:. ```. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In lambda function:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(basic_string&& __str). ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:238,availability,error,error,238,"The platform is Linux (Debian 9). The full compilation errors for `RDFInterfaceUtils.cxx` is:. ```. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In lambda function:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(basic_string&& __str). ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:2277,availability,error,error,2277,"4/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ‘{anonymous}::ParsedExpression {anonymous}::ParseRDFExpression(const string&, const ColumnNames_t&, const ColumnNames_t&, const ColumnNames_t&, const std::map<std::basic_string<char>, std::basic_string<char> >&)’:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:173:31: error: invalid operands of types ‘const char [3]’ and ‘void’ to binary ‘operator+’. TPRegexp replacer(""\\b"" + escapeDots(colOrAlias) + ""\\b""); // watch out: need to replace colOrAlias, not col. ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:177:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:2349,availability,operat,operator,2349,"sic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ‘{anonymous}::ParsedExpression {anonymous}::ParseRDFExpression(const string&, const ColumnNames_t&, const ColumnNames_t&, const ColumnNames_t&, const std::map<std::basic_string<char>, std::basic_string<char> >&)’:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:173:31: error: invalid operands of types ‘const char [3]’ and ‘void’ to binary ‘operator+’. TPRegexp replacer(""\\b"" + escapeDots(colOrAlias) + ""\\b""); // watch out: need to replace colOrAlias, not col. ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:177:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:2565,availability,error,error,2565,"_a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ‘{anonymous}::ParsedExpression {anonymous}::ParseRDFExpression(const string&, const ColumnNames_t&, const ColumnNames_t&, const ColumnNames_t&, const std::map<std::basic_string<char>, std::basic_string<char> >&)’:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:173:31: error: invalid operands of types ‘const char [3]’ and ‘void’ to binary ‘operator+’. TPRegexp replacer(""\\b"" + escapeDots(colOrAlias) + ""\\b""); // watch out: need to replace colOrAlias, not col. ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:177:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_trai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:4359,deployability,releas,release,4359,"erfaceUtils.cxx:177:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(basic_string&& __str). ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. ```. This is for the 6.24.00 release, so the line numbers may be a bit different from the current master. I also stripped the prefix for all the paths. The only cmake options I used is `-DCMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:459,energy efficiency,core,core,459,"The platform is Linux (Debian 9). The full compilation errors for `RDFInterfaceUtils.cxx` is:. ```. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In lambda function:. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,. from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,. from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,. from root-6.24.00/core/base/inc/Rtypes.h:191,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,. from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,. from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(basic_string&& __str). ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());. ^~~~~~~~~~~~. GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’. basic_string(const basic_string& __str);. ^~~~~~~~~~~~. root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
