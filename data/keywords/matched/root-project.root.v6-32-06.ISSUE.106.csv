id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/15302:268,energy efficiency,load,loaded,268,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:325,energy efficiency,current,currently,325,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:461,energy efficiency,CPU,CPU,461,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:136,integrability,version,version,136,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:255,integrability,version,versions,255,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:308,interoperability,incompatib,incompatible,308,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:136,modifiability,version,version,136,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:255,modifiability,version,versions,255,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:19,performance,cpu,cpu,19,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:83,performance,cpu,cpu,83,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:268,performance,load,loaded,268,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:461,performance,CPU,CPU,461,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:38,safety,avoid,avoid,38,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:383,safety,reme,remedy,383,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:375,usability,minim,minimal,375,"[CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15303:142,deployability,version,version,142,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:224,deployability,instal,installed,224,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:261,deployability,version,versions,261,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:25,energy efficiency,cpu,cpu,25,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:89,energy efficiency,cpu,cpu,89,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:274,energy efficiency,load,loaded,274,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:331,energy efficiency,current,currently,331,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:467,energy efficiency,CPU,CPU,467,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:142,integrability,version,version,142,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:261,integrability,version,versions,261,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:314,interoperability,incompatib,incompatible,314,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:142,modifiability,version,version,142,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:261,modifiability,version,versions,261,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:25,performance,cpu,cpu,25,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:89,performance,cpu,cpu,89,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:274,performance,load,loaded,274,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:467,performance,CPU,CPU,467,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:44,safety,avoid,avoid,44,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:389,safety,reme,remedy,389,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:381,usability,minim,minimal,381,"[v630][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15304:142,deployability,version,version,142,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:224,deployability,instal,installed,224,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:261,deployability,version,versions,261,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:25,energy efficiency,cpu,cpu,25,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:89,energy efficiency,cpu,cpu,89,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:274,energy efficiency,load,loaded,274,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:331,energy efficiency,current,currently,331,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:467,energy efficiency,CPU,CPU,467,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:142,integrability,version,version,142,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:261,integrability,version,versions,261,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:314,interoperability,incompatib,incompatible,314,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:142,modifiability,version,version,142,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:261,modifiability,version,versions,261,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:25,performance,cpu,cpu,25,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:89,performance,cpu,cpu,89,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:274,performance,load,loaded,274,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:467,performance,CPU,CPU,467,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:44,safety,avoid,avoid,44,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:389,safety,reme,remedy,389,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:381,usability,minim,minimal,381,"[v632][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15305:142,deployability,version,version,142,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:224,deployability,instal,installed,224,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:261,deployability,version,versions,261,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:677,deployability,version,versions,677,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:724,deployability,version,version,724,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:25,energy efficiency,cpu,cpu,25,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:89,energy efficiency,cpu,cpu,89,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:274,energy efficiency,load,loaded,274,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:331,energy efficiency,current,currently,331,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:467,energy efficiency,CPU,CPU,467,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:142,integrability,version,version,142,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:261,integrability,version,versions,261,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:677,integrability,version,versions,677,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:724,integrability,version,version,724,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:314,interoperability,incompatib,incompatible,314,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:142,modifiability,version,version,142,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:261,modifiability,version,versions,261,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:677,modifiability,version,versions,677,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:724,modifiability,version,version,724,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:25,performance,cpu,cpu,25,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:89,performance,cpu,cpu,89,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:274,performance,load,loaded,274,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:467,performance,CPU,CPU,467,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:44,safety,avoid,avoid,44,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:389,safety,reme,remedy,389,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:381,usability,minim,minimal,381,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:701,usability,support,supported,701,"[v628][CI] Disable `tmva-cpu` on `alma9` to avoid openblas clashes with NumPy; The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15306:171,deployability,instal,installed,171,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:110,performance,time,time,110,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:43,safety,test,tests,43,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:60,safety,test,testing,60,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:43,testability,test,tests,43,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:60,testability,test,testing,60,[DRAFT][TMVA] Unconditionally run all TMVA tests; This is a testing PR to unveil all other possible remaining time bombs. in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15307:91,availability,error,error,91,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:103,deployability,version,version,103,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:103,integrability,version,version,103,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:103,modifiability,version,version,103,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:91,performance,error,error,91,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:91,safety,error,error,91,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15307:91,usability,error,error,91,Delete `net/monalisa` directory; `-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15308:89,availability,error,error,89,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:101,deployability,version,version,101,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:127,deployability,depend,depends,127,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:101,integrability,version,version,101,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:127,integrability,depend,depends,127,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:101,modifiability,version,version,101,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:127,modifiability,depend,depends,127,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:89,performance,error,error,89,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:89,safety,error,error,89,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:127,safety,depend,depends,127,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:127,testability,depend,depends,127,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:89,usability,error,error,89,"Remove `xproofd` functionality; `-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has. ```cmake. target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc). ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/issues/15309:1066,availability,state,stated,1066,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:14,deployability,modul,module,14,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:146,deployability,modul,modules,146,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:267,deployability,version,version,267,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:729,deployability,version,version,729,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:895,deployability,version,version,895,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1444,deployability,modul,modules,1444,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:248,energy efficiency,load,load,248,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:979,energy efficiency,cpu,cpu,979,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1003,energy efficiency,CPU,CPU,1003,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1037,energy efficiency,cpu,cpu,1037,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1143,energy efficiency,cpu,cpu,1143,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:267,integrability,version,version,267,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:729,integrability,version,version,729,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:895,integrability,version,version,895,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1066,integrability,state,stated,1066,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:21,interoperability,compatib,compatibility,21,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:85,interoperability,compatib,compatibility,85,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:559,interoperability,compatib,compatibility,559,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:14,modifiability,modul,module,14,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:146,modifiability,modul,modules,146,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:267,modifiability,version,version,267,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:729,modifiability,version,version,729,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:895,modifiability,version,version,895,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1444,modifiability,modul,modules,1444,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:248,performance,load,load,248,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:979,performance,cpu,cpu,979,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1003,performance,CPU,CPU,1003,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1037,performance,cpu,cpu,1037,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1143,performance,cpu,cpu,1143,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:604,reliability,doe,doesn,604,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:14,safety,modul,module,14,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:146,safety,modul,modules,146,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:498,safety,test,test,498,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1444,safety,modul,modules,1444,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:498,testability,test,test,498,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:589,usability,support,support,589,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:850,usability,support,support,850,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:908,usability,support,supports,908,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1550,usability,learn,learning,1550,"[TMVA] Python module compatibility problems; ## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy. SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support. PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy. The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}. Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:. * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/pull/15310:174,deployability,releas,release,174,[PyROOT] Move CPython extensions in subdirectories; Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:36,integrability,sub,subdirectories,36,[PyROOT] Move CPython extensions in subdirectories; Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:22,modifiability,extens,extensions,22,[PyROOT] Move CPython extensions in subdirectories; Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:145,modifiability,pac,packagers,145,[PyROOT] Move CPython extensions in subdirectories; Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15310:52,usability,Close,Closes,52,[PyROOT] Move CPython extensions in subdirectories; Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15311:23,deployability,automat,automatic,23,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:78,deployability,automat,automatic,78,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:33,interoperability,convers,conversion,33,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:88,interoperability,convers,conversion,88,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:307,interoperability,convers,conversion,307,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:530,safety,safe,safest,530,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:23,testability,automat,automatic,23,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:78,testability,automat,automatic,78,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15311:545,usability,Close,Closes,545,"[v632][PyROOT] Disable automatic conversion of regular to smart pointers; The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15312:23,safety,test,test,23,[CI] Set `arrow=ON` to test the RDataFrame Arrow data source; We should not leave anything untested in the CI if we can.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15312:23,testability,test,test,23,[CI] Set `arrow=ON` to test the RDataFrame Arrow data source; We should not leave anything untested in the CI if we can.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15312
https://github.com/root-project/root/pull/15313:184,availability,avail,available,184,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:311,deployability,manag,management,311,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:311,energy efficiency,manag,management,311,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:65,integrability,configur,configured,65,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:65,modifiability,configur,configured,65,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:458,modifiability,Exten,Extend,458,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:184,reliability,availab,available,184,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:184,safety,avail,available,184,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:206,safety,detect,detected,206,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:311,safety,manag,management,311,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:65,security,configur,configured,65,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:184,security,availab,available,184,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:206,security,detect,detected,206,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:505,usability,help,help,505,"[webgui] introduce new default webgui display kind; Enabled when configured with `root --web` or `root --web=on`. It tries to use local displays like CEF or Qt6 or Qt5 first. . If not available, try to use detected ""native"" browsers like Chrome or Firefox. . All these display kinds provides comfortable window management which are very like to normal windows. Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15314:371,deployability,updat,updated,371,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:111,safety,test,testing,111,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:341,safety,test,tested,341,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:371,safety,updat,updated,371,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:371,security,updat,updated,371,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:111,testability,test,testing,111,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:341,testability,test,tested,341,[skip-ci][WIP][CI][Doc] Generate Doxygen docs with CMake + GitHub Actions ; # This Pull request:. Draft PR for testing the doxygen generation github action with our self-hosted runners . **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/issues/15315:789,availability,error,error,789,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:829,availability,error,error,829,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:100,deployability,upgrad,upgrade,100,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1013,deployability,modul,module,1013,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1122,deployability,fail,failed,1122,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:22,modifiability,inherit,inheriting,22,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:100,modifiability,upgrad,upgrade,100,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1013,modifiability,modul,module,1013,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:789,performance,error,error,789,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:829,performance,error,error,829,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:68,reliability,doe,doesn,68,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:159,reliability,doe,doesn,159,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:427,reliability,DoE,DoEval,427,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1122,reliability,fail,failed,1122,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:789,safety,error,error,789,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:829,safety,error,error,829,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1013,safety,modul,module,1013,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:931,testability,Trace,Traceback,931,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:789,usability,error,error,789,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:829,usability,error,error,829,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:1111,usability,support,supported,1111,"[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade; ### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:. https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python. import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. def NDim( self ):. return 1. def DoEval( self, x ):. return (x[0] - 42) * (x[0] - 42). def Clone( self ):. x = MyMultiGenFCN(). ROOT.SetOwnership(x, False). return x. def main():. fitter = ROOT.Fit.Fitter(). myMultiGenFCN = MyMultiGenFCN(). params = array('d', [1.]). fitter.FitFCN(myMultiGenFCN, params). fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':. main(). ```. The error is:. ```txt. input_line_33:38:23: error: expected '(' for function-style cast or type construction. return unsigned int{};. ~~~~~~~~ ^. Traceback (most recent call last):. File ""/home/rembserj/example.py"", line 5, in <module>. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):. TypeError: no python-side overrides supported (failed to compile the dispatcher code). ```. See:. * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/pull/15316:11,integrability,sub,subscript,11,"[tree] Fix subscript overflow in cumulSizes; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10923. k starts at 0 and should go at max until Ndim-1. This bug was here since 24y :). https://github.com/root-project/root/commit/6b5ac6dbb79d33682e7e3b815abf6ca4eb3db03e#diff-76114d41c696ac3adf8349c86c2be74751b8ed81cebf74a075144aa727654372. At that point, there was fUsedCumulSizes which had a size of MAXDIM+1 instead of MAXDIM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15316
https://github.com/root-project/root/issues/15318:374,availability,error,errors,374,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:429,availability,Error,Error,429,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:593,availability,Error,Error,593,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:685,availability,Error,Error,685,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:774,availability,avail,available,774,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:836,availability,Error,Error,836,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:923,availability,avail,available,923,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1736,availability,Operat,Operating,1736,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:28,deployability,modul,module,28,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:35,deployability,modul,modulemap,35,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:205,deployability,build,builds,205,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:265,deployability,instal,installs,265,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:407,deployability,Modul,Module,407,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:516,deployability,Modul,Module,516,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:544,deployability,Modul,Module,544,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:566,deployability,Modul,Module,566,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1116,deployability,modul,module,1116,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1123,deployability,modul,modulemap,1123,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1253,deployability,modul,module,1253,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1260,deployability,modul,modulemap,1260,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1387,deployability,deploy,deployed,1387,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1454,deployability,modul,module,1454,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1461,deployability,modul,modulemap,1461,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1582,deployability,Build,Build,1582,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1652,deployability,version,version,1652,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1696,deployability,Instal,Installation,1696,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:447,energy efficiency,Load,LoadPCM,447,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:611,energy efficiency,Load,LoadPCM,611,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:703,energy efficiency,Load,LoadClassInfo,703,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:854,energy efficiency,Load,LoadClassInfo,854,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1277,energy efficiency,current,current,1277,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:827,integrability,rout,routine,827,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:976,integrability,rout,routine,976,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1652,integrability,version,version,1652,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:28,modifiability,modul,module,28,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:35,modifiability,modul,modulemap,35,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:50,modifiability,pac,packaged,50,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:159,modifiability,pac,packaging,159,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:407,modifiability,Modul,Module,407,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:516,modifiability,Modul,Module,516,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:544,modifiability,Modul,Module,544,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:566,modifiability,Modul,Module,566,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1116,modifiability,modul,module,1116,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1123,modifiability,modul,modulemap,1123,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1253,modifiability,modul,module,1253,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1260,modifiability,modul,modulemap,1260,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1454,modifiability,modul,module,1454,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1461,modifiability,modul,modulemap,1461,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1538,modifiability,variab,variable,1538,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1652,modifiability,version,version,1652,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:374,performance,error,errors,374,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:429,performance,Error,Error,429,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:447,performance,Load,LoadPCM,447,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:593,performance,Error,Error,593,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:611,performance,Load,LoadPCM,611,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:685,performance,Error,Error,685,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:703,performance,Load,LoadClassInfo,703,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:836,performance,Error,Error,836,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:854,performance,Load,LoadClassInfo,854,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:500,reliability,doe,does,500,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:669,reliability,doe,does,669,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:774,reliability,availab,available,774,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:923,reliability,availab,available,923,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:28,safety,modul,module,28,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:35,safety,modul,modulemap,35,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:374,safety,error,errors,374,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:407,safety,Modul,Module,407,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:429,safety,Error,Error,429,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:516,safety,Modul,Module,516,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:544,safety,Modul,Module,544,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:566,safety,Modul,Module,566,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:593,safety,Error,Error,593,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:685,safety,Error,Error,685,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:774,safety,avail,available,774,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:836,safety,Error,Error,836,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:923,safety,avail,available,923,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1116,safety,modul,module,1116,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1123,safety,modul,modulemap,1123,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1253,safety,modul,module,1253,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1260,safety,modul,modulemap,1260,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1454,safety,modul,module,1454,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1461,safety,modul,modulemap,1461,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1791,safety,prevent,preventing,1791,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:774,security,availab,available,774,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:923,security,availab,available,923,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1791,security,preven,preventing,1791,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1238,testability,simpl,simply,1238,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1774,testability,context,context,1774,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:374,usability,error,errors,374,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:429,usability,Error,Error,429,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:593,usability,Error,Error,593,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:685,usability,Error,Error,685,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:836,usability,Error,Error,836,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1016,usability,command,command,1016,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1238,usability,simpl,simply,1238,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1352,usability,clear,clearly,1352,"ROOT 6.30.01 unable to find module.modulemap when packaged via fpm; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```. Module Net not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist. Module MultiProc not found. Module Imt not found. Module MathCore not found. Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist. Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine. Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine. ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/pull/15319:113,integrability,discover,discovery,113,"[RF] Add codegen+AD support for `RooUniform` and `RooRecursiveFraction`; These classes are used in the CMS Higgs discovery analysis, that's why we want to support this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15319
https://github.com/root-project/root/pull/15319:113,interoperability,discover,discovery,113,"[RF] Add codegen+AD support for `RooUniform` and `RooRecursiveFraction`; These classes are used in the CMS Higgs discovery analysis, that's why we want to support this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15319
https://github.com/root-project/root/pull/15319:20,usability,support,support,20,"[RF] Add codegen+AD support for `RooUniform` and `RooRecursiveFraction`; These classes are used in the CMS Higgs discovery analysis, that's why we want to support this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15319
https://github.com/root-project/root/pull/15319:113,usability,discov,discovery,113,"[RF] Add codegen+AD support for `RooUniform` and `RooRecursiveFraction`; These classes are used in the CMS Higgs discovery analysis, that's why we want to support this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15319
https://github.com/root-project/root/pull/15319:155,usability,support,support,155,"[RF] Add codegen+AD support for `RooUniform` and `RooRecursiveFraction`; These classes are used in the CMS Higgs discovery analysis, that's why we want to support this now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15319
https://github.com/root-project/root/issues/15321:27,availability,error,error,27,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:241,availability,error,error,241,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:250,availability,error,error,250,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1227,availability,Operat,Operating,1227,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:15,deployability,fail,failed,15,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:58,deployability,fail,failed,58,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:184,deployability,build,build,184,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:281,deployability,fail,failed,281,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:863,deployability,instal,install,863,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1045,deployability,Configurat,Configuration,1045,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1059,deployability,Releas,Release,1059,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1124,deployability,Build,Build,1124,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1152,deployability,version,version,1152,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1197,deployability,Instal,Installation,1197,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1311,deployability,log,log,1311,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1318,deployability,Build,Build,1318,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1324,deployability,log,log,1324,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1381,deployability,Build,Build,1381,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1387,deployability,log,log,1387,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1045,integrability,Configur,Configuration,1045,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1152,integrability,version,version,1152,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1029,interoperability,Platform,Platform,1029,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1045,modifiability,Configur,Configuration,1045,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1152,modifiability,version,version,1152,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:27,performance,error,error,27,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:241,performance,error,error,241,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:250,performance,error,error,250,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:15,reliability,fail,failed,15,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:58,reliability,fail,failed,58,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:281,reliability,fail,failed,281,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:27,safety,error,error,27,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:241,safety,error,error,241,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:250,safety,error,error,250,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1311,safety,log,log,1311,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1324,safety,log,log,1324,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1387,safety,log,log,1387,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1045,security,Configur,Configuration,1045,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1311,security,log,log,1311,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1324,security,log,log,1324,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1387,security,log,log,1387,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1293,testability,context,context,1293,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1311,testability,log,log,1311,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1324,testability,log,log,1324,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1387,testability,log,log,1387,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:27,usability,error,error,27,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:241,usability,error,error,241,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:250,usability,error,error,250,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:546,usability,Tool,Tools,546,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:552,usability,Command,Command,552,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:754,usability,Visual,Visual,754,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:792,usability,Tool,Tools,792,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:897,usability,Visual,Visual,897,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022"". 2. git clone https://github.com/root-project/root.git. 3. mkdir root\build_amd64. 4. cd /d root\build_amd64. 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64. 6. python.exe -m pip install pytest 2>&1. 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1. 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:. Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:. [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/pull/15322:64,performance,content,content,64,[v6.32][BP] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15229,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15322
https://github.com/root-project/root/pull/15322:16,safety,compl,completion,16,[v6.32][BP] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15229,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15322
https://github.com/root-project/root/pull/15322:16,security,compl,completion,16,[v6.32][BP] tab completion: insert match but do not replace the content after it; # This Pull request:. ## Changes or fixes:. BP of https://github.com/root-project/root/pull/15229,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15322
https://github.com/root-project/root/issues/15323:890,availability,Operat,Operating,890,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,deployability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:799,deployability,version,version,799,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:834,deployability,Instal,Installation,834,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:240,energy efficiency,reduc,reducing,240,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:222,integrability,event,events,222,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:253,integrability,event,events,253,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,integrability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:799,integrability,version,version,799,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,interoperability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,modifiability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:799,modifiability,version,version,799,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:667,performance,time,time,667,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,reliability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:333,safety,test,test,333,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:640,safety,test,test,640,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,security,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:333,testability,test,test,333,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:557,testability,Integr,Integral,557,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:640,testability,test,test,640,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:937,testability,context,context,937,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:4,usability,Progress,Progress,4,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:169,usability,progress,progress,169,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:187,usability,progress,progress,187,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:750,usability,progress,progress,750,"RDF Progress bar seems to ignore Range() calls; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++. void test() {. ROOT::RDataFrame df(100);. ROOT::RDF::Experimental::AddProgressBar(df);. auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });. auto max = def.Range(0, 10);. auto hist = max.Histo1D(""x"");. std::cout << hist->Integral() << ""\n"";. }. ```. The following code shows:. ```. root [0] . Processing test.cxx... [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] . 10. ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/pull/15324:138,deployability,stack,stack,138,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:399,deployability,updat,updated,399,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:7,integrability,pub,public,7,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:31,safety,safe,safe,31,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:107,safety,prevent,prevents,107,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:258,safety,test,test,258,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:369,safety,test,tested,369,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:399,safety,updat,updated,399,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:107,security,preven,prevents,107,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:399,security,updat,updated,399,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:144,testability,trace,trace,144,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:258,testability,test,test,258,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:369,testability,test,tested,369,[tree] public method should be safe against fImpl = null; as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15325:25,modifiability,paramet,parameter,25,[roofit] Document unused parameter in constructor; To avoid compiler warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15325
https://github.com/root-project/root/pull/15325:54,safety,avoid,avoid,54,[roofit] Document unused parameter in constructor; To avoid compiler warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15325
https://github.com/root-project/root/pull/15325:9,usability,Document,Document,9,[roofit] Document unused parameter in constructor; To avoid compiler warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15325
https://github.com/root-project/root/pull/15330:921,availability,consist,consistency,921,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:65,deployability,patch,patch,65,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:71,deployability,releas,release,71,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:94,deployability,patch,patch,94,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:100,deployability,releas,release,100,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:262,deployability,version,version,262,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:650,deployability,patch,patch,650,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:656,deployability,releas,release,656,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:874,deployability,releas,release,874,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:982,deployability,releas,release,982,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:262,integrability,version,version,262,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:331,integrability,discover,discovery,331,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:331,interoperability,discover,discovery,331,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:400,interoperability,compatib,compatibility,400,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:262,modifiability,version,version,262,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:65,safety,patch,patch,65,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:94,safety,patch,patch,94,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:650,safety,patch,patch,650,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:65,security,patch,patch,65,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:94,security,patch,patch,94,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:650,security,patch,patch,650,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:331,usability,discov,discovery,331,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:633,usability,feedback,feedback,633,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:921,usability,consist,consistency,921,"[v628][RF] Remove `RooExpPoly` and `RooPower` from the next 6.28 patch release; The next 6.28 patch release should remove the `RooPower` and. `RooExpPoly` classes. It is an unfortunate but unavoidable change:. different classes with the same name and `ClassDef` version were used in. the CMS collaboration since at least the Higgs discovery. This name. collision caused massive problems in backwards compatibility and was. blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely. advertised, so people should not be affected by this removal. Based on. the feedback to this patch release, the `RooPower` and `RooExpPoly`. classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28. because they are skipping this ROOT release for combine. However, for. the sake of consistency, the classes are retroactively removed from all. release branches <= 6.30. The corresponding PR in ROOT 6.30:. https://github.com/root-project/root/pull/15299.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15332:203,deployability,fail,fail,203,[tutorials] Add missing headers in RNTuple tutorials; I was going through the [RNTuple tutorials](https://root.cern/doc/master/group__tutorial__ntuple.html) and I noticed that there are two of them that fail to compile because there are headers that are not included (although they run fine in interactive mode). I just added the missing headers so that they can be compiled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15332
https://github.com/root-project/root/pull/15332:203,reliability,fail,fail,203,[tutorials] Add missing headers in RNTuple tutorials; I was going through the [RNTuple tutorials](https://root.cern/doc/master/group__tutorial__ntuple.html) and I noticed that there are two of them that fail to compile because there are headers that are not included (although they run fine in interactive mode). I just added the missing headers so that they can be compiled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15332
https://github.com/root-project/root/pull/15332:294,usability,interact,interactive,294,[tutorials] Add missing headers in RNTuple tutorials; I was going through the [RNTuple tutorials](https://root.cern/doc/master/group__tutorial__ntuple.html) and I noticed that there are two of them that fail to compile because there are headers that are not included (although they run fine in interactive mode). I just added the missing headers so that they can be compiled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15332
https://github.com/root-project/root/pull/15333:18,deployability,build,builds,18,[ci] Remove mac12 builds for master; those are not present for 6.32 either.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15333
https://github.com/root-project/root/pull/15334:99,availability,state,state,99,"[io] Remove wrong comment in RRawFile; This was changed in commit 09010c5ed5 (""[io] make buffering state explicit in RRawFile"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15334
https://github.com/root-project/root/pull/15334:89,integrability,buffer,buffering,89,"[io] Remove wrong comment in RRawFile; This was changed in commit 09010c5ed5 (""[io] make buffering state explicit in RRawFile"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15334
https://github.com/root-project/root/pull/15334:99,integrability,state,state,99,"[io] Remove wrong comment in RRawFile; This was changed in commit 09010c5ed5 (""[io] make buffering state explicit in RRawFile"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15334
https://github.com/root-project/root/pull/15335:494,deployability,updat,updated,494,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:171,reliability,doe,does,171,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:7,safety,prevent,prevent,7,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:95,safety,Avoid,Avoids,95,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:464,safety,test,tested,464,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:494,safety,updat,updated,494,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:7,security,preven,prevent,7,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:33,security,access,access,33,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:494,security,updat,updated,494,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:464,testability,test,tested,464,"[tree] prevent crash due to null access in clones; # This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:. switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/issues/15336:45,availability,error,error,45,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:322,availability,error,error,322,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1167,availability,Error,Error,1167,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1271,availability,error,error,1271,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1294,availability,error,error,1294,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1482,availability,Operat,Operating,1482,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1534,availability,operat,operating,1534,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1905,availability,Operat,Operating,1905,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:16,deployability,fail,failed,16,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:279,deployability,fail,failed,279,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:293,deployability,fail,failed,293,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1110,deployability,Configurat,Configuration,1110,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1124,deployability,Releas,Release,1124,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1188,deployability,updat,updating,1188,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1245,deployability,fail,failed,1245,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1518,deployability,version,versions,1518,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1627,deployability,Stack,Stacktrace,1627,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1857,deployability,version,version,1857,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1875,deployability,Instal,Installation,1875,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1110,integrability,Configur,Configuration,1110,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1173,integrability,Messag,Message,1173,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1518,integrability,version,versions,1518,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1656,integrability,Plug-in,Plug-in,1656,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1706,integrability,Plug-in,Plug-in,1706,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1857,integrability,version,version,1857,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1092,interoperability,Platform,Platform,1092,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1173,interoperability,Messag,Message,1173,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1600,interoperability,Architectur,Architectures,1600,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1656,interoperability,Plug,Plug-in,1656,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1664,interoperability,format,formats,1664,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1706,interoperability,Plug,Plug-in,1706,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1110,modifiability,Configur,Configuration,1110,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1518,modifiability,version,versions,1518,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1857,modifiability,version,version,1857,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:45,performance,error,error,45,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:322,performance,error,error,322,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1167,performance,Error,Error,1167,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1271,performance,error,error,1271,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1294,performance,error,error,1294,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:16,reliability,fail,failed,16,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:279,reliability,fail,failed,279,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:293,reliability,fail,failed,293,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1245,reliability,fail,failed,1245,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:45,safety,error,error,45,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:322,safety,error,error,322,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1167,safety,Error,Error,1167,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1188,safety,updat,updating,1188,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1271,safety,error,error,1271,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1294,safety,error,error,1294,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1773,safety,Test,Testing,1773,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1110,security,Configur,Configuration,1110,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1188,security,updat,updating,1188,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1201,security,hash,hash,1201,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1773,testability,Test,Testing,1773,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1947,testability,context,context,1947,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:45,usability,error,error,45,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:322,usability,error,error,322,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:519,usability,help,help,519,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:602,usability,behavi,behavior,602,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:770,usability,Visual,Visual,770,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:808,usability,Tool,Tools,808,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1167,usability,Error,Error,1167,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1271,usability,error,error,1271,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1294,usability,error,error,1294,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1452,usability,behavi,behaviour,1452,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char); ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance! ### Reproducer. Steps to reproduce the behavior:. 1. https://github.com/root-project/root C:\gitP\root-project/root. 2. Open a VS2022 x86 cmd. 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build. 4. cd /d C:\gitP\root-project\root\build_x86. 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:. libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**. Project Pass. **Operating System**. Windows. **What versions of the operating systems?**. VS 2022 + Windows Server 2022 Datacenter. **Architectures**. 86-bit. **Stacktrace**. No response. **Plug-in formats (if applicable)**. No response. **Plug-in host applications (DAWs) (if applicable)**. No response. **Testing on the develop branch**. The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/pull/15337:249,deployability,build,building,249,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:299,deployability,build,builds,299,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:402,deployability,build,build,402,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:460,deployability,Instal,Install,460,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:475,deployability,version,version,475,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:667,deployability,releas,releases,667,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:701,deployability,build,build,701,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:721,deployability,build,build,721,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:748,deployability,build,building,748,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:843,deployability,build,builds,843,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:928,deployability,depend,dependencies,928,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:273,energy efficiency,core,core,273,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:683,energy efficiency,OPTIM,OPTIMIZATION,683,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:475,integrability,version,version,475,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:928,integrability,depend,dependencies,928,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:475,modifiability,version,version,475,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:533,modifiability,pac,packages,533,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:928,modifiability,depend,dependencies,928,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:683,performance,OPTIMIZ,OPTIMIZATION,683,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:114,safety,test,testing,114,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:321,safety,test,tests,321,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:392,safety,Test,Test,392,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:928,safety,depend,dependencies,928,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:114,testability,test,testing,114,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:321,testability,test,tests,321,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:392,testability,Test,Test,392,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:928,testability,depend,dependencies,928,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:226,usability,Statu,Status,226,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:284,usability,workflow,workflow,284,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:354,usability,document,documentation,354,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:429,usability,document,documentation,429,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:727,usability,workflow,workflows,727,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:771,usability,workflow,workflow,771,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:850,usability,document,documentation,850,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:910,usability,support,supports,910,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:1017,usability,workflow,workflow,1017,"[skip-ci][ci][docu] Generate Doxygen docs with Makefile + GitHub Actions; # This Pull request:. This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/issues/15340:40,availability,error,error,40,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:872,availability,Error,Error,872,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1152,availability,Error,Error,1152,"ics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1432,availability,Error,Error,1432,", F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1785,availability,Error,Error,1785,"F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2065,availability,Error,Error,2065,/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. mas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2345,availability,Error,Error,2345,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2760,availability,ERROR,ERROR,2760,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2919,availability,ERROR,ERROR,2919,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2975,availability,servic,service,2975,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3111,availability,Operat,Operating,3111,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:190,deployability,build,building,190,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:574,deployability,version,version,574,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1002,deployability,build,build,1002,"aphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1019,deployability,build,build,1019,"splayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1039,deployability,build,build,1039,"ror printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1282,deployability,build,build,1282,"--------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1299,deployability,build,build,1299,"---------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1319,deployability,build,build,1319,"-------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1559,deployability,build,build,1559,"Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1576,deployability,build,build,1576,"on 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1596,deployability,build,build,1596,"0.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1915,deployability,build,build,1915,libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1932,deployability,build,build,1932,lay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1952,deployability,build,build,1952,lib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] F,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2195,deployability,build,build,2195,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2212,deployability,build,build,2212,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2232,deployability,build,build,2232,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2472,deployability,build,build,2472,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2489,deployability,build,build,2489,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2509,deployability,build,build,2509,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2954,deployability,Fail,Failed,2954,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2975,deployability,servic,service,2975,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3056,deployability,version,version,3056,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3077,deployability,Instal,Installation,3077,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:864,energy efficiency,Draw,Draw,864,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:574,integrability,version,version,574,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2975,integrability,servic,service,2975,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3056,integrability,version,version,3056,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:574,modifiability,version,version,574,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2806,modifiability,extens,extension,2806,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2975,modifiability,servic,service,2975,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2994,modifiability,extens,extension,2994,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3056,modifiability,version,version,3056,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:40,performance,error,error,40,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:872,performance,Error,Error,872,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1152,performance,Error,Error,1152,"ics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1432,performance,Error,Error,1432,", F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1785,performance,Error,Error,1785,"F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2065,performance,Error,Error,2065,/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. mas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2345,performance,Error,Error,2345,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2760,performance,ERROR,ERROR,2760,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2919,performance,ERROR,ERROR,2919,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:977,reliability,doe,does,977,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1257,reliability,doe,does,1257,"ot --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1534,reliability,doe,does,1534,"759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1890,reliability,doe,does,1890,tem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2170,reliability,doe,does,2170,tem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2447,reliability,doe,does,2447,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2954,reliability,Fail,Failed,2954,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:40,safety,error,error,40,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:872,safety,Error,Error,872,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1152,safety,Error,Error,1152,"ics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1432,safety,Error,Error,1432,", F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1785,safety,Error,Error,1785,"F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2065,safety,Error,Error,2065,/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. mas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2345,safety,Error,Error,2345,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2760,safety,ERROR,ERROR,2760,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2919,safety,ERROR,ERROR,2919,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:410,security,Team,Team,410,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2722,security,session,session,2722,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3151,testability,context,context,3151,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:40,usability,error,error,40,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:619,usability,help,help,619,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:872,usability,Error,Error,872,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:996,usability,User,Users,996,"Webgraphics: canvas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1013,usability,User,Users,1013,"vas displayed, but many error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1033,usability,User,Users,1033,"any error printed; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1152,usability,Error,Error,1152,"ics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```. -> root --web. ------------------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1276,usability,User,Users,1276,"--------------------------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1293,usability,User,Users,1293,"---------------------------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1313,usability,User,Users,1313,"-------------------. | Welcome to ROOT 6.33/01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1432,usability,Error,Error,1432,", F. Rademakers |. | Built for macosxarm64 on Apr 25 2024, 07:37:38 |. | From heads/master@v6-31-01-1759-ga6c7efff71 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1553,usability,User,Users,1553," With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1570,usability,User,Users,1570," version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1590,usability,User,Users,1590,"ng-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4). (TH1F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1785,usability,Error,Error,1785,"F &) Name: h Title: h NbinsX: 64. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1909,usability,User,Users,1909,ary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1926,usability,User,Users,1926,ebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:exte,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1946,usability,User,Users,1946, | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2065,usability,Error,Error,2065,/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. mas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2189,usability,User,Users,2189,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2206,usability,User,Users,2206,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2226,usability,User,Users,2226,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2345,usability,Error,Error,2345,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2466,usability,User,Users,2466,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2483,usability,User,Users,2483,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2503,usability,User,Users,2503,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2760,usability,ERROR,ERROR,2760,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2919,usability,ERROR,ERROR,2919,em::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Opening in existing browser session. [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt. [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt. ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/pull/15341:5,deployability,Updat,Update,5,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:202,performance,content,content,202,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:5,safety,Updat,Update,5,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:5,security,Updat,Update,5,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:108,security,access,accessing,108,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:180,security,access,accessing,180,"[RF] Update xRooFit; This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15342:27,safety,test,testing,27,Spurrious change to enable testing jenkins; Nothing to see.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15342
https://github.com/root-project/root/pull/15342:27,testability,test,testing,27,Spurrious change to enable testing jenkins; Nothing to see.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15342
https://github.com/root-project/root/pull/15343:23,availability,operat,operator,23,[v632] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile); Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15343
https://github.com/root-project/root/pull/15343:36,security,sign,signature,36,[v632] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile); Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15343
https://github.com/root-project/root/pull/15343:11,usability,support,support,11,[v632] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile); Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15343
https://github.com/root-project/root/pull/15344:23,availability,operat,operator,23,[v630] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile) ; Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15344
https://github.com/root-project/root/pull/15344:36,security,sign,signature,36,[v630] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile) ; Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15344
https://github.com/root-project/root/pull/15344:11,usability,support,support,11,[v630] Add support for operator new signature introduced in C++17 in libNew (need for TMapFile) ; Backport of https://github.com/root-project/root/pull/14792.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15344
https://github.com/root-project/root/pull/15345:41,deployability,build,build,41,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:87,deployability,build,build,87,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:69,integrability,configur,configured,69,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:69,modifiability,configur,configured,69,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:110,safety,test,tested,110,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:69,security,configur,configured,69,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:110,testability,test,tested,110,"[webgui] try local displays only if they build; If local web display configured,. only build variants will be tested. Fixes issue #15340.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15346:82,safety,test,test,82,Don't write files in RooStats tutorials for no reason; This can be problematic in test environments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15346
https://github.com/root-project/root/pull/15346:82,testability,test,test,82,Don't write files in RooStats tutorials for no reason; This can be problematic in test environments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15346
https://github.com/root-project/root/pull/15347:41,deployability,build,build,41,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:94,deployability,build,build,94,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:76,integrability,configur,configured,76,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:76,modifiability,configur,configured,76,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:117,safety,test,tested,117,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:76,security,configur,configured,76,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:117,testability,test,tested,117,"[webgui] try local displays only if they build [6.32]; If local web display configured,. only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/issues/15348:762,availability,Operat,Operating,762,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:412,deployability,log,log,412,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:534,deployability,log,log,534,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:610,deployability,log,log,610,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:702,deployability,version,version,702,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:723,deployability,Instal,Installation,723,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:36,energy efficiency,draw,drawing,36,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:140,energy efficiency,draw,drawing,140,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:322,energy efficiency,Draw,Draw,322,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:657,energy efficiency,draw,drawCore,657,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:702,integrability,version,version,702,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:702,modifiability,version,version,702,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:412,safety,log,log,412,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:534,safety,log,log,534,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:610,safety,log,log,610,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:412,security,log,log,412,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:534,security,log,log,534,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:610,security,log,log,610,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:412,testability,log,log,412,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:534,testability,log,log,534,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:610,testability,log,log,610,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:802,testability,context,context,802,"Graphics: nasty output printed when drawing histogram; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```. -> root -l. root [0] TH1F h(""h"",""h"", 64, -4,4);. root [1] h.FillRandom(""gaus""). root [2] h.Draw(). Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)). FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800. FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/pull/15349:71,deployability,build,building,71,[webgui] check local displays first; Check qt5/qt6/cef in cmake before building ROOTWebDisplay library. Required to correctly detect if such displays can be used by default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15349
https://github.com/root-project/root/pull/15349:126,safety,detect,detect,126,[webgui] check local displays first; Check qt5/qt6/cef in cmake before building ROOTWebDisplay library. Required to correctly detect if such displays can be used by default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15349
https://github.com/root-project/root/pull/15349:126,security,detect,detect,126,[webgui] check local displays first; Check qt5/qt6/cef in cmake before building ROOTWebDisplay library. Required to correctly detect if such displays can be used by default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15349
https://github.com/root-project/root/pull/15350:54,deployability,version,version,54,[webcanvas] make default off for the TWebCanvas; 6.32 version of https://github.com/root-project/root/pull/13872.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15350
https://github.com/root-project/root/pull/15350:54,integrability,version,version,54,[webcanvas] make default off for the TWebCanvas; 6.32 version of https://github.com/root-project/root/pull/13872.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15350
https://github.com/root-project/root/pull/15350:54,modifiability,version,version,54,[webcanvas] make default off for the TWebCanvas; 6.32 version of https://github.com/root-project/root/pull/13872.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15350
https://github.com/root-project/root/pull/15352:59,deployability,releas,release,59,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:174,deployability,patch,patches,174,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:109,integrability,repositor,repository,109,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:109,interoperability,repositor,repository,109,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:174,safety,patch,patches,174,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:174,security,patch,patches,174,[jsroot] latest code for 6.32 branch; JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/issues/15353:593,availability,Operat,Operating,593,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:243,deployability,updat,updated,243,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:538,deployability,version,version,538,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:559,deployability,Instal,Installation,559,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:218,energy efficiency,draw,drawing,218,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:349,energy efficiency,Draw,Draw,349,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:402,energy efficiency,Draw,Draw,402,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:538,integrability,version,version,538,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:538,modifiability,version,version,538,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:243,safety,updat,updated,243,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:243,security,updat,updated,243,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:633,testability,context,context,633,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:23,usability,behavi,behaviour,23,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:175,usability,behavi,behaviour,175,"Webgraphics: different behaviour wrt classic graphics with 2 canvases; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```. TCanvas c1;. TH1F h(""h"",""h"", 64, -4,4);. h.FillRandom(""gaus"");. h.Draw();. TCanvas c2;. h.FillRandom(""gaus"",10000);. h.Draw();. ```. Classic graphics: One histo with 5k entries and one with 15k entries. Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/pull/15355:31,deployability,version,version,31,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:71,deployability,depend,depends,71,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:406,deployability,version,version,406,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:31,integrability,version,version,31,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:71,integrability,depend,depends,71,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:406,integrability,version,version,406,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:151,interoperability,compatib,compatibility,151,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:524,interoperability,compatib,compatibility,524,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:31,modifiability,version,version,31,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:71,modifiability,depend,depends,71,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:406,modifiability,version,version,406,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:71,safety,depend,depends,71,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:191,safety,Test,TestWithParam,191,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:254,safety,test,test,254,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:293,safety,test,test,293,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:71,testability,depend,depends,71,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:191,testability,Test,TestWithParam,191,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:254,testability,test,test,254,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:293,testability,test,test,293,"Globally assume at least GTest version 1.10.0; It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:. * `GTEST_SKIP`. * `TestWithParam` with non-default constructible type. * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15356:44,energy efficiency,model,models,44,[v630][TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Backport of https://github.com/root-project/root/pull/15173.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15356
https://github.com/root-project/root/pull/15356:44,security,model,models,44,[v630][TMVA] Fix RBDT evaluation of XGBoost models by merging RBDT with FastForest; Backport of https://github.com/root-project/root/pull/15173.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15356
https://github.com/root-project/root/pull/15358:18,availability,error,error,18,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15358:24,integrability,messag,messages,24,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15358:24,interoperability,messag,messages,24,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15358:18,performance,error,error,18,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15358:18,safety,error,error,18,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15358:18,usability,error,error,18,[webgui] suppress error messages from browsers [6.32]; Backport of #15357,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15358
https://github.com/root-project/root/pull/15359:14,performance,concurren,concurrent,14,[v632] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15359
https://github.com/root-project/root/pull/15359:42,safety,Test,TestBit,42,[v632] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15359
https://github.com/root-project/root/pull/15359:42,testability,Test,TestBit,42,[v632] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15359
https://github.com/root-project/root/pull/15360:14,performance,concurren,concurrent,14,[v630] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15360
https://github.com/root-project/root/pull/15360:42,safety,Test,TestBit,42,[v630] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15360
https://github.com/root-project/root/pull/15360:42,testability,Test,TestBit,42,[v630] Remove concurrent usage of TClass::TestBit; Backport of https://github.com/root-project/root/pull/15113,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15360
https://github.com/root-project/root/pull/15361:17,deployability,build,build,17,[v632] Fix Clang build with libstdc++; Backport of #15354.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15361
https://github.com/root-project/root/pull/15362:17,deployability,build,build,17,[v630] Fix Clang build with libstdc++; Backport of https://github.com/root-project/root/pull/15354.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15362
https://github.com/root-project/root/pull/15363:19,deployability,stack,stack,19,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:270,deployability,updat,updated,270,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:240,safety,test,tested,240,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:270,safety,updat,updated,270,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:270,security,updat,updated,270,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:240,testability,test,tested,240,"[tmva] branches on stack, local scope, reset before return; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/issues/15364:369,availability,Operat,Operating,369,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:48,deployability,fail,fails,48,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:312,deployability,version,version,312,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:339,deployability,Instal,Installation,339,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:312,integrability,version,version,312,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:312,modifiability,version,version,312,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:48,reliability,fail,fails,48,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/issues/15364:411,testability,context,context,411,"[Win32] tutorial-roostats-rs101_limitexample-py fails with a segfault; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/pull/15367:35,deployability,version,version,35,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:104,deployability,releas,released,104,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:146,deployability,releas,releases,146,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:35,integrability,version,version,35,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:16,interoperability,compatib,compatible,16,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:35,modifiability,version,version,35,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:224,safety,test,tested,224,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:224,testability,test,tested,224,"Add Python 3.12-compatible `numba` version in requirements.txt; Numba 0.59 with Python 3.12 was already released:. https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15368:38,availability,state,statements,38,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:167,deployability,updat,updated,167,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:38,integrability,state,statements,38,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:137,safety,test,tested,137,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:167,safety,updat,updated,167,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:30,security,control,control,30,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:167,security,updat,updated,167,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:30,testability,control,control,30,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:137,testability,test,tested,137,[TCling] Do not add decls for control statements if already annotated ; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15369:28,deployability,Releas,Release,28,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:216,deployability,updat,updated,216,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:186,safety,test,tested,186,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:216,safety,updat,updated,216,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:216,security,updat,updated,216,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:7,testability,assert,assert,7,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:186,testability,test,tested,186,"[tmva] assert is ignored in Release mode, so return null; # This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/issues/15370:320,availability,avail,available,320,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:900,availability,avail,available,900,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1946,availability,Operat,Operating,1946,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1759,deployability,version,version,1759,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1780,deployability,version,version,1780,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1794,deployability,Version,Version,1794,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1916,deployability,Instal,Installation,1916,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:739,energy efficiency,load,loadExportKeys,739,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:128,integrability,messag,message,128,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:249,integrability,messag,message,249,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1759,integrability,version,version,1759,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1780,integrability,version,version,1780,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1794,integrability,Version,Version,1794,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:128,interoperability,messag,message,128,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:249,interoperability,messag,message,249,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:430,modifiability,pac,package,430,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1759,modifiability,version,version,1759,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1780,modifiability,version,version,1780,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1794,modifiability,Version,Version,1794,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:739,performance,load,loadExportKeys,739,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:320,reliability,availab,available,320,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:900,reliability,availab,available,900,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:320,safety,avail,available,320,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:900,safety,avail,available,900,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:320,security,availab,available,320,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:900,security,availab,available,900,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1986,testability,context,context,1986,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:400,usability,custom,custom,400,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:642,usability,clear,clearExportKeys,642,"Broken link in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1682,usability,tool,tool,1682,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1692,usability,tool,tool,1692,"ink in HS3 printout; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,. https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message. ```. unable to export class 'RooBreitWigner' - no export keys available! there are several possible reasons for this:. 1. RooBreitWigner is a custom class that you or some package you are using added. 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for. 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename). either way, please make sure that:. 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available. 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this! (int) 0. ```. ### Reproducer. 1. Use the latest root,. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`. ```c++. #include ""RooRealVar.h"". #include ""RooBreitWigner.h"". #include ""RooWorkspace.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(). {. RooRealVar x(""x"", ""x"", -10, 10);. RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);. RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);. RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");. w.import(bw);. RooJSONFactoryWSTool tool(w);. tool.exportJSON(""standard_pdf.json"");. return 0;. }. ```. ### ROOT version. ```. root --version. ROOT Version: 6.33/01. Built for linuxx8664gcc on Apr 26 2024, 23:06:35. From heads/master@v6-31-01-1819-gb5ad658677. ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/pull/15371:279,deployability,updat,updated,279,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:24,integrability,translat,translated,24,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:89,integrability,translat,translated,89,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:181,integrability,translat,translated,181,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:24,interoperability,translat,translated,24,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:89,interoperability,translat,translated,89,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:181,interoperability,translat,translated,181,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:231,safety,test,tested,231,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:279,safety,updat,updated,279,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:279,security,updat,updated,279,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:231,testability,test,tested,231,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:378,usability,close,close,378,[RF] RooStats tutorials translated into Python; # This Pull request:. roostats tutorials translated into Python. ## Changes or fixes:. The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3. - [ yes ] updated the docs . This PR fixes # . https://github.com/root-project/root/issues/8758 . and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15372:57,modifiability,paramet,parameter,57,[Minuit2] Remove unused Minuit2 code; Remove some unused parameter getters and setters for algorithms where these parameters are not relevant. This makes it easier for the reader of the code what the algorithm parameters actually are.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:114,modifiability,paramet,parameters,114,[Minuit2] Remove unused Minuit2 code; Remove some unused parameter getters and setters for algorithms where these parameters are not relevant. This makes it easier for the reader of the code what the algorithm parameters actually are.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15372:210,modifiability,paramet,parameters,210,[Minuit2] Remove unused Minuit2 code; Remove some unused parameter getters and setters for algorithms where these parameters are not relevant. This makes it easier for the reader of the code what the algorithm parameters actually are.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15372
https://github.com/root-project/root/pull/15374:390,deployability,updat,updated,390,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:249,safety,compl,completely,249,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:360,safety,test,tested,360,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:390,safety,updat,updated,390,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:249,security,compl,completely,249,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:390,security,updat,updated,390,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:360,testability,test,tested,360,[cling] Make parts of the cling codebase similar to upstream `clang-repl`; # This Pull request:. Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/issues/15375:1013,availability,Operat,Operating,1013,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:6,deployability,updat,update,6,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:394,deployability,updat,update,394,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:779,deployability,version,version,779,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:854,deployability,version,version,854,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:891,deployability,releas,release,891,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:930,deployability,releas,release,930,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:957,deployability,Instal,Installation,957,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:998,deployability,releas,releases,998,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:509,energy efficiency,Load,LoadText,509,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:538,integrability,pub,public,538,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:779,integrability,version,version,779,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:854,integrability,version,version,854,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:779,modifiability,version,version,779,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:854,modifiability,version,version,854,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:509,performance,Load,LoadText,509,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:903,reliability,doe,doesn,903,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:6,safety,updat,update,6,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:33,safety,except,exceptions,33,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:394,safety,updat,update,394,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:712,safety,except,except,712,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:6,security,updat,update,6,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:394,security,updat,update,394,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:1040,testability,verif,verified,1040,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:1079,testability,context,context,1079,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:21,usability,behavi,behavior,21,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:163,usability,effectiv,effectively,163,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:285,usability,behavi,behavioral,285,"cppyy update changed behavior of exceptions thrown in c++ and caught in python; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.LoadText(. """""". class Foo {. public:. void bar() { throw std::logic_error(""This is fine""); }. void bar() const { throw std::logic_error(""This is fine""); }. };. """""". ). foo = ROOT.Foo(). try:. foo.bar(). except ROOT.std.logic_error:. print(""Caught""). pass. ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/pull/15376:176,modifiability,refact,refactoring,176,[PyROOT] Don't import `libcppyy` directly in PyROOT; The `libcppyy` is an implementation detail of `cppyy` that we should not include directly. This is done to anticipate more refactoring later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15376:176,performance,refactor,refactoring,176,[PyROOT] Don't import `libcppyy` directly in PyROOT; The `libcppyy` is an implementation detail of `cppyy` that we should not include directly. This is done to anticipate more refactoring later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15377:43,modifiability,variab,variable,43,Make sure the saved TGraph is a proper C++ variable; Make sure the saved TGraph is a proper C++ variable. As suggested here: https://its.cern.ch/jira/browse/ROOT-8277. it works also for the classes inheriting from TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:96,modifiability,variab,variable,96,Make sure the saved TGraph is a proper C++ variable; Make sure the saved TGraph is a proper C++ variable. As suggested here: https://its.cern.ch/jira/browse/ROOT-8277. it works also for the classes inheriting from TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:198,modifiability,inherit,inheriting,198,Make sure the saved TGraph is a proper C++ variable; Make sure the saved TGraph is a proper C++ variable. As suggested here: https://its.cern.ch/jira/browse/ROOT-8277. it works also for the classes inheriting from TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/issues/15378:39,availability,operat,operator,39,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:70,availability,operat,operator,70,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:99,availability,Operat,Operators,99,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:115,availability,operat,operator,115,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:346,availability,operat,operator,346,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:677,availability,Operat,Operating,677,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:513,deployability,version,version,513,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:624,deployability,Instal,Installation,624,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:645,deployability,Build,Build,645,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:513,integrability,version,version,513,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:513,modifiability,version,version,513,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:722,testability,context,context,722,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:828,testability,simpl,simplified,828,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:828,usability,simpl,simplified,828,"[PyROOT] Problem with templated binary operator implementations like `operator+`; ### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python. import cppyy. cppyy.cppdef("""""". template<class T>. struct Foo {. Foo(T v) : val{v} {}. T val;. };. template <class T>. Foo<T> operator+(Foo<T> const &a, Foo<T> const &b). {. return Foo<T>{a.val + b.val};. }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4). b = klass(7). a + b. ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:. https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer. * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/pull/15379:113,usability,Close,Closes,113,"Revert ""[cmake] Silence Clang8 shadow warnings::""; This reverts commit 66659309b055da2443b1faadd8e2da772cb4b755. Closes:. https://its.cern.ch/jira/browse/ROOT-9763",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15379
https://github.com/root-project/root/pull/15380:69,deployability,releas,release,69,"[cmake] Fix distsrc script.; Fixes the `make distsrc` command in the release checklist, so far working until 6.30.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15380
https://github.com/root-project/root/pull/15380:54,usability,command,command,54,"[cmake] Fix distsrc script.; Fixes the `make distsrc` command in the release checklist, so far working until 6.30.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15380
https://github.com/root-project/root/pull/15382:66,availability,error,error,66,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:7,deployability,Updat,Update,7,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:66,performance,error,error,66,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:7,safety,Updat,Update,7,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:66,safety,error,error,66,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:7,security,Updat,Update,7,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/pull/15382:66,usability,error,error,66,[reve] Update RenderCore; # This Pull request:. * Fixes rendering error of REveBoxSet on Chrome OSX and Safari. https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/issues/15384:20,deployability,version,version,20,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:160,deployability,version,version,160,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:329,deployability,version,version,329,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:342,energy efficiency,core,core,342,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:20,integrability,version,version,20,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:160,integrability,version,version,160,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:329,integrability,version,version,329,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:20,modifiability,version,version,20,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:160,modifiability,version,version,160,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:215,modifiability,variab,variable,215,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:299,modifiability,variab,variable,299,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:329,modifiability,version,version,329,"GetCppName: Mangled version of the C++ symbol; ### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version. The core of the code is this switch:. ```. switch(c) {. case '+': repl = ""pL""; break;. case '-': repl = ""mI""; break;. case '*': repl = ""mU""; break;. case '/': repl = ""dI""; break;. case '&': repl = ""aN""; break;. case '%': repl = ""pE""; break;. case '|': repl = ""oR""; break;. case '^': repl = ""hA""; break;. case '>': repl = ""gR""; break;. case '<': repl = ""lE""; break;. case '=': repl = ""eQ""; break;. case '~': repl = ""wA""; break;. case '.': repl = ""dO""; break;. case '(': repl = ""oP""; break;. case ')': repl = ""cP""; break;. case '[': repl = ""oB""; break;. case ']': repl = ""cB""; break;. case '!': repl = ""nO""; break;. case ',': repl = ""cO""; break;. case '$': repl = ""dA""; break;. case ' ': repl = ""sP""; break;. case ':': repl = ""cL""; break;. case '""': repl = ""dQ""; break;. case '@': repl = ""aT""; break;. case '\'': repl = ""sQ""; break;. case '\\': repl = ""fI""; break;. }. ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;. I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/pull/15385:28,availability,cluster,cluster,28,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:28,deployability,cluster,cluster,28,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:111,deployability,scale,scale,111,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:75,energy efficiency,measur,measure,75,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:111,energy efficiency,scale,scale,111,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:111,modifiability,scal,scale,111,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:111,performance,scale,scale,111,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:117,safety,test,testing,117,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:90,testability,context,context,90,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15385:117,testability,test,testing,117,[df] Allow changing RNTuple cluster bunch size in env; This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15386:165,deployability,updat,updated,165,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:55,modifiability,variab,variable,55,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:135,safety,test,tested,135,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:165,safety,updat,updated,165,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:165,security,updat,updated,165,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:135,testability,test,tested,135,[Tcling] Add more characters that are invalid in a C++ variable name; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15387:22,deployability,build,builds,22,[ci] Remove Fedora 38 builds; The distribution is at its EOL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15387
https://github.com/root-project/root/pull/15387:34,interoperability,distribut,distribution,34,[ci] Remove Fedora 38 builds; The distribution is at its EOL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15387
https://github.com/root-project/root/pull/15389:31,deployability,build,builds,31,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15389:108,deployability,automat,automatic,108,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15389:43,interoperability,distribut,distribution,43,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15389:103,safety,test,test,103,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15389:103,testability,test,test,103,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15389:108,testability,automat,automatic,108,[skip-ci][ci] Remove Fedora 38 builds; The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/pull/15390:22,deployability,build,builds,22,[ci] Remove Fedora 38 builds; The distribution is at its EOL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15390
https://github.com/root-project/root/pull/15390:34,interoperability,distribut,distribution,34,[ci] Remove Fedora 38 builds; The distribution is at its EOL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15390
https://github.com/root-project/root/issues/15396:195,availability,error,error,195,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:208,availability,Error,Error,208,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:216,availability,ERROR,ERROR,216,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:236,availability,error,error,236,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:577,availability,Operat,Operating,577,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:26,deployability,fail,failing,26,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:160,deployability,fail,fails,160,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:365,deployability,releas,release,365,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:508,deployability,version,version,508,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:538,deployability,Instal,Installation,538,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:508,integrability,version,version,508,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:508,modifiability,version,version,508,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:195,performance,error,error,195,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:208,performance,Error,Error,208,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:216,performance,ERROR,ERROR,216,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:236,performance,error,error,236,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:26,reliability,fail,failing,26,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:160,reliability,fail,fails,160,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:13,safety,test,test,13,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:130,safety,test,test,130,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:195,safety,error,error,195,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:208,safety,Error,Error,208,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:216,safety,ERROR,ERROR,216,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:236,safety,error,error,236,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:271,safety,test,test,271,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:306,safety,prevent,prevent,306,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:306,security,preven,prevent,306,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:13,testability,test,test,13,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:130,testability,test,test,130,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:148,testability,Regress,Regression,148,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:271,testability,test,test,271,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:617,testability,context,context,617,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:195,usability,error,error,195,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:208,usability,Error,Error,208,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:216,usability,ERROR,ERROR,216,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:236,usability,error,error,236,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:328,usability,behavi,behaviour,328,"[TMVA] Pymva test (Keras) failing on 632 and main; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:. ```. Error: [ERROR] Mean squared error is 115.737 (>30.0). ```. The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/pull/15398:203,deployability,version,versions,203,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:1,energy efficiency,core,core,1,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:98,energy efficiency,model,model,98,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:203,integrability,version,versions,203,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:203,modifiability,version,versions,203,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:129,performance,multiplex,multiplexers,129,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:98,security,model,model,98,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:73,testability,simpl,simplify,73,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:175,testability,simpl,simplify,175,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:73,usability,simpl,simplify,73,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:175,usability,simpl,simplify,175,[core] Remove never used code from the callbacks.; This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/issues/15399:1437,availability,operat,operation,1437,"ls.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2601,availability,Operat,Operating,2601,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:462,deployability,manag,management,462,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2406,deployability,log,log,2406,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2438,deployability,log,log,2438,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2458,deployability,log,log,2458,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2524,deployability,log,log,2524,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2539,deployability,version,version,2539,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2557,deployability,Instal,Installation,2557,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2578,deployability,Build,Build,2578,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:462,energy efficiency,manag,management,462,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1359,energy efficiency,optim,optimization,1359,"FInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:507,integrability,sub,subsequent,507,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2539,integrability,version,version,2539,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2539,modifiability,version,version,2539,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:0,performance,Memor,Memory,0,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:455,performance,memor,memory,455,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1348,performance,time,time,1348,"ataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1359,performance,optimiz,optimization,1359,"FInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1506,performance,memor,memory,1506,"bsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/151",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:462,safety,manag,management,462,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2406,safety,log,log,2406,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2438,safety,log,log,2438,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2458,safety,log,log,2458,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2524,safety,log,log,2524,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2406,security,log,log,2406,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2438,security,log,log,2438,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2458,security,log,log,2458,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2524,security,log,log,2524,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2406,testability,log,log,2406,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2438,testability,log,log,2438,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2458,testability,log,log,2458,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2524,testability,log,log,2524,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2639,testability,context,context,2639,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:0,usability,Memor,Memory,0,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:455,usability,memor,memory,455,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:552,usability,Help,Helper,552,"Memory leak with jitted nodes if the execution is never triggered; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a node of the computation graph needs to JIT, certain objects are created on the heap with `new`, see for example https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1506,usability,memor,memory,1506,"bsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/151",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1597,usability,help,helper,1597,"with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. #include <TFile.h>. #include <TTree.h>. #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(). {. {. std::cout << ""Begin scope\n"";. ROOT::RDataFrame rdf(1);. auto df1 = rdf.Define(""x"", ""42"");. std::cout << ""End scope\n"";. }. }. ```. Compile and run with valgrind:. ```. $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`. valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1. ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/pull/15400:125,energy efficiency,alloc,allocate,125,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:11,performance,memor,memory,11,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:337,performance,time,time,337,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:442,performance,lock,locking,442,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:5,safety,Avoid,Avoid,5,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:442,security,lock,locking,442,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15400:11,usability,memor,memory,11,"[df] Avoid memory leak in JIT when the execution is not triggered; If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15401:363,availability,redund,redundant,363,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:17,deployability,build,build,17,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:23,deployability,configurat,configuration,23,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:87,deployability,build,build,87,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:93,deployability,configurat,configuration,93,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:218,deployability,modul,module,218,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:363,deployability,redundan,redundant,363,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:23,integrability,configur,configuration,23,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:93,integrability,configur,configuration,93,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:23,modifiability,configur,configuration,23,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:93,modifiability,configur,configuration,93,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:218,modifiability,modul,module,218,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:363,reliability,redundan,redundant,363,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:218,safety,modul,module,218,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:357,safety,avoid,avoid,357,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:363,safety,redund,redundant,363,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:23,security,configur,configuration,23,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:93,security,configur,configuration,93,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:8,testability,Simpl,Simplify,8,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:114,testability,simpl,simplified,114,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:8,usability,Simpl,Simplify,8,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:74,usability,support,support,74,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:114,usability,simpl,simplified,114,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:206,usability,help,help,206,"[CMake] Simplify build configuration with Python 3; After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15402:9,deployability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:537,deployability,contain,contain,537,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:731,deployability,updat,update,731,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,integrability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:82,integrability,sub,submodule,82,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,interoperability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:794,interoperability,format,formatted,794,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,modifiability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:186,modifiability,pac,packagers,186,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:259,modifiability,pac,packages,259,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:324,modifiability,pac,packages,324,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:360,modifiability,pac,packages,360,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:425,modifiability,pac,package,425,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:511,modifiability,pac,package,511,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,reliability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:524,reliability,doe,doesn,524,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:731,safety,updat,update,731,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,security,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:731,security,updat,update,731,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:9,testability,Integr,Integrate,9,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:122,testability,simpl,simplify,122,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:165,testability,simpl,simplify,165,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:114,usability,clear,clearly,114,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:122,usability,simpl,simplify,122,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:165,usability,simpl,simplify,165,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:436,usability,clear,clearly,436,"[PyROOT] Integrate JsMVA into PyROOT; There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:. https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15403:110,availability,Error,Error,110,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:4,deployability,fail,failing,4,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:189,energy efficiency,model,model,189,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:160,integrability,event,events,160,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:110,performance,Error,Error,110,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:4,reliability,fail,failing,4,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:12,safety,test,test,12,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:110,safety,Error,Error,110,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:141,safety,test,test,141,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:189,security,model,model,189,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:12,testability,test,test,12,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:29,testability,Regress,Regression,29,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:130,testability,Regress,Regression,130,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:141,testability,test,test,141,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:95,usability,Minim,Minimal,95,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:110,usability,Error,Error,110,Fix failing test Pymva Keras Regression; This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15404:82,modifiability,extens,extension,82,[PyROOT] Merge `libROOTPythonizations` and `libJupyROOT`; Having only one CPython extension for PyROOT definitely makes things easier. The `libJupyROOT` was very small.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15404
https://github.com/root-project/root/issues/15405:933,availability,Operat,Operating,933,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:883,deployability,version,version,883,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:903,deployability,Instal,Installation,903,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:642,integrability,event,eventually,642,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:883,integrability,version,version,883,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:343,modifiability,paramet,parameters,343,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:384,modifiability,paramet,parameter,384,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:883,modifiability,version,version,883,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:601,testability,simpl,simply,601,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:715,testability,simpl,simply,715,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:971,testability,context,context,971,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:25,usability,document,documentation,25,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:127,usability,document,documentation,127,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:601,usability,simpl,simply,601,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:715,usability,simpl,simply,715,"[RF] ExternalConstraints documentation incorrect for RooMCStudy; ### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15406:54,availability,state,statements,54,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:259,availability,state,statements,259,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1974,availability,Operat,Operating,1974,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:2070,availability,state,statement,2070,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:2309,availability,state,statement,2309,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:782,deployability,releas,release,782,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1923,deployability,version,version,1923,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1944,deployability,Instal,Installation,1944,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:54,integrability,state,statements,54,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:259,integrability,state,statements,259,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1923,integrability,version,version,1923,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:2070,integrability,state,statement,2070,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:2309,integrability,state,statement,2309,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1923,modifiability,version,version,1923,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:17,reliability,doe,does,17,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:222,reliability,doe,does,222,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:2012,testability,context,context,2012,"::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement. ```. root [3] namespace A { class B {}; }. root [4] TClass::GetClass(""A::B""). (TClass *) 0x13af817f0. root [5] namespace C { using A::B; }. root [6] TClass::GetClass(""C::B""). (TClass *) 0x13af817f0. ```. but not using namespace statement:. ```. root [7] namespace D { using namespace A; }. root [8] TClass::GetClass(""D::B""). (TClass *) nullptr. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:900,usability,behavi,behavior,900,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:941,usability,behavi,behavior,941,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:970,usability,user,user,970,"`TEnum::GetEnum` does not seem to see 'through' using statements.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```. root [1] namespace A { enum E { kOne }; }. root [2] namespace B { using A::E; }. root [3] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000cc9770. root [4] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. root [5] namespace C { using namespace A; }. root [6] TEnum::GetEnum(""C::E""). (TEnum *) nullptr. ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```. namespace reco. {. namespace btau. {. enum class TaggingVariableName {. kOne. };. } // namespace btau. using btau::TaggingVariableName;. struct TaggingVariableList {. bool get(TaggingVariableName in) { return true; };. };. } // namespace reco. int enumusing() . {. 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");. if (!e1). return 1;. auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");. if (!e2). return 2;. return 0;. }. int related_enumusing(). {. auto c = TClass::GetClass(""reco::TaggingVariableList"");. auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));. if (!m). return 1;. auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));. if (!arg). return 2;. std::string target(""reco::btau::TaggingVariableName"");. std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()). return 0;. if (target == arg->GetTypeName()). return 3;. return 4;. }. ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15407:1048,availability,avail,available,1048,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1709,availability,Operat,Operating,1709,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1641,deployability,version,version,1641,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1679,deployability,Instal,Installation,1679,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1824,deployability,fail,failing,1824,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1641,integrability,version,version,1641,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1641,modifiability,version,version,1641,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:30,reliability,doe,does,30,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1048,reliability,availab,available,1048,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1505,reliability,doe,does,1505,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1824,reliability,fail,failing,1824,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:306,safety,test,test,306,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1048,safety,avail,available,1048,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1342,safety,test,testing,1342,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1048,security,availab,available,1048,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:306,testability,test,test,306,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1342,testability,test,testing,1342,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1747,testability,context,context,1747,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:280,usability,User,Users,280,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:793,usability,behavi,behavior,793,"`cling::utils::Lookup::Named` does not look into using directive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:. ```. (lldb) p sofar->dumpAsDecl(). NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C. `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'. ```. will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```. root [0] namespace A { enum E { kOne }; class C; }. root [1] namespace B { using namespace A; }. root [2] TClass::GetClass(""A::C""). Warning in <TClass::Init>: no dictionary for class A::C is available. (TClass *) 0x12fe265f0. root [3] TClass::GetClass(""B::C""). (TClass *) nullptr. root [4] TEnum::GetEnum(""A::E""). (TEnum *) 0x600000e64c30. root [5] TEnum::GetEnum(""B::E""). (TEnum *) nullptr. ```. ```. namespace A { enum E { kOne }; class C; }. namespace B { using namespace A; }. int testing(). {. 	auto c = TClass::GetClass(""B::C"");. if (!c) . return 1;. if (c != TClass::GetClass(""A::E"");. return 2;. // Should work when PR #15408 is merged but does not. auto e = TEnum::GetEnum(""B::E""). if (!e). return 3;. if (e != TEnum::GetEnum(""A::E"");. return 4;. return 0;. }. ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/pull/15408:76,availability,state,statement,76,TEnum::GetEnum normalize name before search.; This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:76,integrability,state,statement,76,TEnum::GetEnum normalize name before search.; This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:137,safety,test,tested,137,TEnum::GetEnum normalize name before search.; This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15408:137,testability,test,tested,137,TEnum::GetEnum normalize name before search.; This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15410:58,availability,avail,available,58,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15410:90,availability,operat,operations,90,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15410:83,integrability,Filter,Filter,83,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15410:58,reliability,availab,available,58,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15410:58,safety,avail,available,58,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15410:58,security,availab,available,58,"[6.32] Hide RDF Numba Pythonizations; Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15411:28,deployability,patch,patches,28,[reve] backport to v6-32-00-patches t fix rendering of REveBoxSet; This is a backport of #15382. The changes are in RenderCore only to fix problem of BoxSet rendering on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15411
https://github.com/root-project/root/pull/15411:28,safety,patch,patches,28,[reve] backport to v6-32-00-patches t fix rendering of REveBoxSet; This is a backport of #15382. The changes are in RenderCore only to fix problem of BoxSet rendering on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15411
https://github.com/root-project/root/pull/15411:28,security,patch,patches,28,[reve] backport to v6-32-00-patches t fix rendering of REveBoxSet; This is a backport of #15382. The changes are in RenderCore only to fix problem of BoxSet rendering on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15411
https://github.com/root-project/root/pull/15412:39,deployability,build,builds,39,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:55,deployability,build,builds,55,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:72,deployability,build,builds,72,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:100,deployability,configurat,configurations,100,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:169,deployability,releas,releases,169,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:217,deployability,build,builds,217,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:262,deployability,build,build,262,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:303,deployability,modul,modules,303,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:316,deployability,build,build,316,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:100,integrability,configur,configurations,100,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:100,modifiability,configur,configurations,100,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:303,modifiability,modul,modules,303,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:84,safety,test,test,84,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:303,safety,modul,modules,303,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:100,security,configur,configurations,100,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:84,testability,test,test,84,"[ci] Introduce the category of special builds; Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:. - The ""march=native"" build, that fixes #12291. - The ""runtime modules off"" build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/issues/15413:170,availability,error,errors,170,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:281,availability,error,error,281,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1074,availability,error,error,1074,"d for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1869,availability,error,error,1869,"th AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2870,availability,error,error,2870,"r: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3934,availability,error,error,3934,"cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4728,availability,error,error,4728,"ith AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5524,availability,error,error,5524," AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6526,availability,error,error,6526,": identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7496,availability,error,errors,7496,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:8002,availability,Operat,Operating,8002,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:0,deployability,Fail,Fails,0,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:9,deployability,build,build,9,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:26,deployability,version,version,26,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:112,deployability,Build,Building,112,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:185,deployability,build,build,185,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:907,deployability,build,build,907,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:978,deployability,build,build,978,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1702,deployability,build,build,1702,"AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1773,deployability,build,build,1773,":DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2703,deployability,build,build,2703,"d/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2774,deployability,build,build,2774,"d/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3767,deployability,build,build,3767,"u. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInferenc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3838,deployability,build,build,3838,"ecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4561,deployability,build,build,4561,"TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4632,deployability,build,build,4632,"t TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5357,deployability,build,build,5357,"loat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5428,deployability,build,build,5428,"NN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6359,deployability,build,build,6359,"/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6430,deployability,build,build,6430,"/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7424,deployability,build,build,7424,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7536,deployability,build,build,7536,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7727,deployability,api,api,7727,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7844,deployability,api,api,7844,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7884,deployability,Build,Build,7884,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7936,deployability,version,version,7936,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7958,deployability,Instal,Installation,7958,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7979,deployability,build,build,7979,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:26,integrability,version,version,26,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7727,integrability,api,api,7727,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7844,integrability,api,api,7844,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7936,integrability,version,version,7936,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:231,interoperability,Architectur,Architectures,231,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:953,interoperability,Architectur,Architectures,953,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1024,interoperability,Architectur,Architectures,1024,"on 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1748,interoperability,Architectur,Architectures,1748,"nsor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Archit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1819,interoperability,Architectur,Architectures,1819,"N::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Archit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2749,interoperability,Architectur,Architectures,2749,"tures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2820,interoperability,Architectur,Architectures,2820,"tures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3813,interoperability,Architectur,Architectures,3813,"Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNFo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3884,interoperability,Architectur,Architectures,3884,"dnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4607,interoperability,Architectur,Architectures,4607,"at>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBack",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4678,interoperability,Architectur,Architectures,4678,"MVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5403,interoperability,Architectur,Architectures,5403,"or_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Archi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5474,interoperability,Architectur,Architectures,5474,":TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Archi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6405,interoperability,Architectur,Architectures,6405,"ures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6476,interoperability,Architectur,Architectures,6476,"ures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7470,interoperability,Architectur,Architectures,7470,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7582,interoperability,Architectur,Architectures,7582,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7727,interoperability,api,api,7727,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7844,interoperability,api,api,7844,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:26,modifiability,version,version,26,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7936,modifiability,version,version,7936,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:170,performance,error,errors,170,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:281,performance,error,error,281,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1074,performance,error,error,1074,"d for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1869,performance,error,error,1869,"th AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2870,performance,error,error,2870,"r: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3934,performance,error,error,3934,"cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4728,performance,error,error,4728,"ith AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5524,performance,error,error,5524," AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6526,performance,error,error,6526,": identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7496,performance,error,errors,7496,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:0,reliability,Fail,Fails,0,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:170,safety,error,errors,170,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:281,safety,error,error,281,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:391,safety,detect,detected,391,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1074,safety,error,error,1074,"d for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1186,safety,detect,detected,1186,"/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1869,safety,error,error,1869,"th AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1973,safety,detect,detected,1973,"/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2870,safety,error,error,2870,"r: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3037,safety,detect,detected,3037,"NBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3934,safety,error,error,3934,"cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4044,safety,detect,detected,4044,"ring instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4728,safety,error,error,4728,"ith AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4840,safety,detect,detected,4840,"root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5524,safety,error,error,5524," AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5628,safety,detect,detected,5628,"build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6526,safety,error,error,6526,": identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6693,safety,detect,detected,6693,"Backward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7496,safety,error,errors,7496,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7503,safety,detect,detected,7503,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:288,security,ident,identifier,288,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:391,security,detect,detected,391,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1081,security,ident,identifier,1081,"licates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1186,security,detect,detected,1186,"/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1876,security,ident,identifier,1876,"=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: iden",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1973,security,detect,detected,1973,"/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2877,security,ident,identifier,2877,"fier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3037,security,detect,detected,3037,"NBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3941,security,ident,identifier,3941,"ackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4044,security,detect,detected,4044,"ring instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4735,security,ident,identifier,4735,"t=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4840,security,detect,detected,4840,"root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5531,security,ident,identifier,5531,"ouble_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: ide",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5628,security,detect,detected,5628,"build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6533,security,ident,identifier,6533,"ier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6693,security,detect,detected,6693,"Backward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplear",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7503,security,detect,detected,7503,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:8047,testability,context,context,8047,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:170,usability,error,errors,170,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:281,usability,error,error,281,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:353,usability,statu,status,353,"Fails to build with cuDNN version 9; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1074,usability,error,error,1074,"d for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1147,usability,statu,status,1147,"ts in the following errors:. ```. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1869,usability,error,error,1869,"th AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1938,usability,statu,status,1938,"mva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2870,usability,error,error,2870,"r: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2928,usability,statu,status,2928,"atus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3934,usability,error,error,3934,"cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4006,usability,statu,status,4006,"(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4728,usability,error,error,4728,"ith AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4801,usability,statu,status,4801,"/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined. cudnnStatus_t status = cudnnRNNForwardTraining(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5524,usability,error,error,5524," AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5593,usability,statu,status,5593,"va/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined. cudnnStatus_t status = cudnnRNNForwardInference(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6526,usability,error,error,6526,": identifier ""cudnnRNNBackwardData"" is undefined. cudnnStatus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6584,usability,statu,status,6584,"tus_t status = cudnnRNNBackwardData(. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Archi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7496,usability,error,errors,7496,"A::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined. status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),. ^. detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"". ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/pull/15415:158,safety,review,review,158,"Fix PyROOT for Ubuntu 24.04; ~~Situation should be better but there may be still some leftover issues.~~. All issues should now be fixed, the PR is ready for review!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15415
https://github.com/root-project/root/pull/15415:158,testability,review,review,158,"Fix PyROOT for Ubuntu 24.04; ~~Situation should be better but there may be still some leftover issues.~~. All issues should now be fixed, the PR is ready for review!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15415
https://github.com/root-project/root/pull/15416:13,deployability,build,build,13,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:47,deployability,Build,Building,47,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:72,deployability,depend,depend,72,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:72,integrability,depend,depend,72,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:26,interoperability,plug,plugin,26,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:72,modifiability,depend,depend,72,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:72,safety,depend,depend,72,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15416:72,testability,depend,depend,72,"[CMake] Only build `clad` plugin if requested; Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15417:75,deployability,version,versions,75,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:261,deployability,build,build,261,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:321,deployability,version,version,321,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:381,deployability,build,build,381,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:1,energy efficiency,core,core,1,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:75,integrability,version,versions,75,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:321,integrability,version,version,321,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:41,interoperability,compatib,compatibility,41,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:75,modifiability,version,versions,75,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:321,modifiability,version,version,321,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:129,security,cryptograph,cryptographically,129,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/pull/15417:147,security,secur,secure,147,"[core] Fallback to urandom for increased compatibility; Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/issues/15418:60,availability,cluster,clusters,60,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:139,availability,cluster,cluster,139,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:204,availability,cluster,clusters,204,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:326,availability,Operat,Operating,326,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:60,deployability,cluster,clusters,60,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:139,deployability,cluster,cluster,139,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:204,deployability,cluster,clusters,204,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:266,deployability,version,version,266,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:287,deployability,Instal,Installation,287,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:173,energy efficiency,current,currently,173,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:266,integrability,version,version,266,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:266,modifiability,version,version,266,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15418:364,testability,context,context,364,Set RNTuple read-ahead window in number of bytes instead of clusters; ### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15419:556,availability,Operat,Operating,556,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:501,deployability,version,version,501,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:523,deployability,Instal,Installation,523,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:501,integrability,version,version,501,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:501,modifiability,version,version,501,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:596,testability,context,context,596,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/issues/15419:139,usability,progress,progress,139,"RNTuple: add max key length field to RNTuple anchor; ### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple. The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/pull/15420:290,availability,consist,consistent,290,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:279,integrability,compon,components,279,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:279,interoperability,compon,components,279,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:279,modifiability,compon,components,279,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:223,usability,support,support,223,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/pull/15420:290,usability,consist,consistent,290,"[CMake] Look for Python3 again in `SearchInstalledSoftware.cmake`; This commit essentially reverts a288ff9 from four years ago, which was also part of the multi-python machinery that is not necessary anymore after Python 2 support was dropped. Also, make the choice of looked-up components consistent with what is actually required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15420
https://github.com/root-project/root/issues/15422:30,deployability,build,builds,30,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:102,deployability,build,builds,102,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:236,deployability,build,builds,236,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:248,deployability,fail,failing,248,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:171,reliability,doe,does,171,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:248,reliability,fail,failing,248,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/issues/15422:347,testability,context,context,347,"Enable Fortran also for MacOS builds; ### Feature description. Enable in the CI Fortran also on MacOS builds, like this PR https://github.com/root-project/root/pull/15397 does for Win and Linux. This was not done in that PR because the builds were failing due to nodes misconfigurations. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15422
https://github.com/root-project/root/pull/15423:237,deployability,updat,updated,237,The xrootd headers in proof/xrdinc are no longer used -- remove; # This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:207,safety,test,tested,207,The xrootd headers in proof/xrdinc are no longer used -- remove; # This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:237,safety,updat,updated,237,The xrootd headers in proof/xrdinc are no longer used -- remove; # This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:237,security,updat,updated,237,The xrootd headers in proof/xrdinc are no longer used -- remove; # This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:207,testability,test,tested,207,The xrootd headers in proof/xrdinc are no longer used -- remove; # This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15424:23,deployability,modul,module,23,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/pull/15424:63,deployability,build,build,63,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/pull/15424:171,deployability,build,build,171,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/pull/15424:23,modifiability,modul,module,23,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/pull/15424:23,safety,modul,module,23,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/pull/15424:207,safety,accid,accidentally,207,"[PyROOT] Correct JsMVA module path and always include JsMVA in build ; Follow-up to 38ac97e5a. Before that commit, the `JsMVA` Python sources were always included in. the build, even if `tmva=OFF`. This was accidentally changed, and breaks. `import ROOT` in a notebook if `tmva` is not enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15424
https://github.com/root-project/root/issues/15425:1561,availability,Operat,Operating,1561,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:335,deployability,observ,observed,335,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:572,deployability,observ,observations,572,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:710,deployability,observ,observed,710,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1482,deployability,version,version,1482,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1517,deployability,Instal,Installation,1517,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:27,integrability,event,events,27,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:191,integrability,event,events,191,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:645,integrability,event,events,645,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:676,integrability,event,events,676,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:790,integrability,event,events,790,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:834,integrability,event,events,834,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:933,integrability,event,events,933,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:991,integrability,event,events,991,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1037,integrability,event,events,1037,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1420,integrability,event,events,1420,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1482,integrability,version,version,1482,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1482,modifiability,version,version,1482,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:43,performance,time,times,43,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:207,performance,time,times,207,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1226,safety,Test,TestMP,1226,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:335,testability,observ,observed,335,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:572,testability,observ,observations,572,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:710,testability,observ,observed,710,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1226,testability,Test,TestMP,1226,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1608,testability,context,context,1608,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:473,usability,minim,minimally,473,"TTreeProcessorMP processes events multiple times when there are more threads than entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip). Run:. ```. mkdir files. root FillRootFiles.C. root TestMP.C+. ```. This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/pull/15426:174,deployability,releas,release-notes,174,"[CMake] Don't support `builtin_openssl` on Linux; The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15426:83,interoperability,specif,specifically,83,"[CMake] Don't support `builtin_openssl` on Linux; The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15426:14,usability,support,support,14,"[CMake] Don't support `builtin_openssl` on Linux; The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15426:132,usability,support,support,132,"[CMake] Don't support `builtin_openssl` on Linux; The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15427:0,deployability,Updat,Update,0,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:192,deployability,updat,updated,192,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:0,safety,Updat,Update,0,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:162,safety,test,tested,162,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:192,safety,updat,updated,192,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:0,security,Updat,Update,0,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:192,security,updat,updated,192,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:162,testability,test,tested,162,"Update JsMVA imports; # This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/issues/15430:5,availability,failur,failures,5,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:107,availability,Down,Downstream,107,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:911,availability,down,downstream,911,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1135,availability,Operat,Operating,1135,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:5,deployability,fail,failures,5,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:188,deployability,fail,fails,188,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:197,deployability,build,build,197,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:235,deployability,fail,failed,235,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:350,deployability,Fail,Failed,350,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:469,deployability,build,build,469,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:712,deployability,build,builds,712,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:849,deployability,build,build,849,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1006,deployability,version,version,1006,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1028,deployability,Instal,Installation,1028,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1057,deployability,build,build,1057,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1006,integrability,version,version,1006,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:564,modifiability,pac,package,564,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:607,modifiability,pac,packages,607,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:704,modifiability,pac,package,704,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1006,modifiability,version,version,1006,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1049,modifiability,Pac,Package,1049,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1121,modifiability,pac,packages,1121,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:5,performance,failur,failures,5,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:5,reliability,fail,failures,5,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:188,reliability,fail,fails,188,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:235,reliability,fail,failed,235,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:350,reliability,Fail,Failed,350,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:0,safety,Test,Test,0,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:229,safety,test,tests,229,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:579,safety,Test,Testing,579,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:675,safety,test,test,675,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:0,testability,Test,Test,0,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:229,testability,test,tests,229,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:579,testability,Test,Testing,579,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:675,testability,test,test,675,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:691,testability,mock,mock,691,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:866,testability,mock,mock,866,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1184,testability,context,context,1184,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:1208,testability,plan,planned,1208,"Test failures with Python 3.13; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6. 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only. AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr. You can follow these instructions to test locally in mock if your package builds with Python 3.13:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:. https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/pull/15431:12,deployability,build,build,12,"[cling] Fix build with assertions; Fixes commit 68769cd980 (""[cling] Move parts of Parse to another function"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15431
https://github.com/root-project/root/pull/15431:23,testability,assert,assertions,23,"[cling] Fix build with assertions; Fixes commit 68769cd980 (""[cling] Move parts of Parse to another function"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15431
https://github.com/root-project/root/pull/15432:18,safety,test,test,18,[TCling] Separate test for GetCppName; Also enable it on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15432
https://github.com/root-project/root/pull/15432:18,testability,test,test,18,[TCling] Separate test for GetCppName; Also enable it on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15432
https://github.com/root-project/root/issues/15434:774,availability,Operat,Operating,774,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:689,deployability,version,version,689,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:710,deployability,Instal,Installation,710,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:206,energy efficiency,current,currently,206,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:827,energy efficiency,current,currently,827,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:689,integrability,version,version,689,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:689,modifiability,version,version,689,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/issues/15434:812,testability,context,context,812,"Consider passing TString by value to TNamed ctor; ### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp. TNamed::TNamed(const TString& name, const TString& title). ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor? ```diff. - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }. + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }. ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/pull/15435:42,deployability,version,version,42,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:110,deployability,version,version,110,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:182,deployability,modul,module,182,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:278,deployability,modul,modules,278,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:361,deployability,depend,dependency,361,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:399,deployability,instal,installed,399,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:42,integrability,version,version,42,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:110,integrability,version,version,110,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:361,integrability,depend,dependency,361,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:211,interoperability,specif,specific,211,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:42,modifiability,version,version,42,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:110,modifiability,version,version,110,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:182,modifiability,modul,module,182,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:278,modifiability,modul,modules,278,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:361,modifiability,depend,dependency,361,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:182,safety,modul,module,182,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:278,safety,modul,modules,278,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:326,safety,avoid,avoids,326,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:361,safety,depend,dependency,361,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:361,testability,depend,dependency,361,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:8,usability,Prefer,Prefer,8,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:170,usability,help,help,170,[CMake] Prefer the macOS-native framework version of OpenGL; Make sure we're using the macOS-native framework version in the OpenGL case. See:. * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific. * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15437:293,deployability,depend,dependence,293,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:587,deployability,build,build,587,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:604,deployability,version,versions,604,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:192,integrability,coupl,couple,192,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:293,integrability,depend,dependence,293,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:604,integrability,version,versions,604,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:192,modifiability,coupl,couple,192,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:293,modifiability,depend,dependence,293,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:604,modifiability,version,versions,604,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:202,safety,test,tests,202,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:261,safety,test,test,261,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:293,safety,depend,dependence,293,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:311,safety,test,test,311,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:432,safety,test,tests,432,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:455,safety,Review,Reviewed,455,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:546,safety,review,reviews,546,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:192,testability,coupl,couple,192,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:202,testability,test,tests,202,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:261,testability,test,test,261,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:293,testability,depend,dependence,293,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:311,testability,test,test,311,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:432,testability,test,tests,432,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:455,testability,Review,Reviewed,455,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:546,testability,review,reviews,546,"[Clang] Implement CWG2518 - static_assert(false); This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp. * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`. still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15438:250,deployability,version,versions,250,[CMake] Disable `builtin_glew` on macOS; The CMake issue that made is necessary to use `builtin_glew` was apparently fixed last year:. https://gitlab.kitware.com/cmake/cmake/-/commit/a31b27078595fce911b2469937ac12934555644a. I checked that the CMake versions on all the three macOS platforms include the fix. The workaround that this commit reverts was introduced here:. https://github.com/root-project/root/pull/5458.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15438
https://github.com/root-project/root/pull/15438:250,integrability,version,versions,250,[CMake] Disable `builtin_glew` on macOS; The CMake issue that made is necessary to use `builtin_glew` was apparently fixed last year:. https://gitlab.kitware.com/cmake/cmake/-/commit/a31b27078595fce911b2469937ac12934555644a. I checked that the CMake versions on all the three macOS platforms include the fix. The workaround that this commit reverts was introduced here:. https://github.com/root-project/root/pull/5458.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15438
https://github.com/root-project/root/pull/15438:282,interoperability,platform,platforms,282,[CMake] Disable `builtin_glew` on macOS; The CMake issue that made is necessary to use `builtin_glew` was apparently fixed last year:. https://gitlab.kitware.com/cmake/cmake/-/commit/a31b27078595fce911b2469937ac12934555644a. I checked that the CMake versions on all the three macOS platforms include the fix. The workaround that this commit reverts was introduced here:. https://github.com/root-project/root/pull/5458.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15438
https://github.com/root-project/root/pull/15438:250,modifiability,version,versions,250,[CMake] Disable `builtin_glew` on macOS; The CMake issue that made is necessary to use `builtin_glew` was apparently fixed last year:. https://gitlab.kitware.com/cmake/cmake/-/commit/a31b27078595fce911b2469937ac12934555644a. I checked that the CMake versions on all the three macOS platforms include the fix. The workaround that this commit reverts was introduced here:. https://github.com/root-project/root/pull/5458.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15438
https://github.com/root-project/root/pull/15439:98,deployability,version,version,98,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:98,integrability,version,version,98,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:87,interoperability,compatib,compatible,87,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:142,interoperability,platform,platforms,142,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:98,modifiability,version,version,98,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:24,safety,test,tests,24,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:162,safety,test,tests,162,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:24,testability,test,tests,24,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/pull/15439:162,testability,test,tests,162,"[TMVA] Enable again all tests on `alma9` and `fedora39`; Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/issues/15442:554,availability,Operat,Operating,554,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:506,deployability,version,version,506,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:524,deployability,Instal,Installation,524,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:256,integrability,filter,filter-and-define-are-called,256,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:506,integrability,version,version,506,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:0,interoperability,Distribut,Distributed,0,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:218,interoperability,distribut,distributed-rdataframe-instance-after-filter-and-define-are-called,218,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:314,interoperability,distribut,distributed,314,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:506,modifiability,version,version,506,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:23,reliability,doe,does,23,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:194,security,access,accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called,194,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:300,testability,simpl,simply,300,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:592,testability,context,context,592,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:300,usability,simpl,simply,300,"Distributed RDataFrame does not see all defined column names; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/pull/15443:85,integrability,discover,discovery,85,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:395,integrability,sub,subsequent,395,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:406,integrability,compon,components,406,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:85,interoperability,discover,discovery,85,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:406,interoperability,compon,components,406,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:317,modifiability,paramet,parameters,317,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:406,modifiability,compon,components,406,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:444,modifiability,paramet,parameters,444,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:371,security,modif,modified,371,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:9,usability,behavi,behaviour,9,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15443:85,usability,discov,discovery,85,"[RF] Fix behaviour of getAllConstraints; In trying to debug the fit to the CMS higgs discovery workspace, I found that the way the constraintTerm is determined will be buggy if doing a stripDisconnected determination of the constraint terms (i.e. not using the `Constrain` option). The cause is that the RooArgSet of parameters passed to `RooAbsPdf::getConstraints` gets modified, and therefore subsequent components don't see the full list of parameters of the parent pdf, so the list of constraint terms ends up being incomplete. I think this PR fixes things",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15443
https://github.com/root-project/root/pull/15444:402,deployability,automat,automatic,402,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:16,energy efficiency,reduc,reduce,16,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:144,energy efficiency,reduc,reduce,144,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:412,interoperability,convers,conversion,412,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:352,performance,memor,memory,352,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:387,reliability,doe,doesn,387,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:229,safety,except,except,229,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:240,safety,avoid,avoiding,240,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:402,testability,automat,automatic,402,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:352,usability,memor,memory,352,"[RF] Implement `reduce()` also for concrete RooAbsData classes; Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15446:55,deployability,build,building,55,[skip-ci] fix doxygen parnames; to avoid warnings when building docu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15446
https://github.com/root-project/root/pull/15446:35,safety,avoid,avoid,35,[skip-ci] fix doxygen parnames; to avoid warnings when building docu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15446
https://github.com/root-project/root/issues/15447:343,availability,Operat,Operating,343,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:173,deployability,modul,modules,173,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:282,deployability,version,version,282,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:305,deployability,Instal,Installation,305,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:282,integrability,version,version,282,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:121,interoperability,Specif,Specifying,121,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:173,modifiability,modul,modules,173,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:282,modifiability,version,version,282,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:173,safety,modul,modules,173,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/issues/15447:383,testability,context,context,383,"`-Dminimal=ON` disables `runtime_cxxmodules`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```. cmake -Dminimal=ON. ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/pull/15448:56,deployability,modul,modules,56,[cmake] Fix issue #15447; Don't disable the runtime C++ modules when specifying `-Dminimal=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15448
https://github.com/root-project/root/pull/15448:69,interoperability,specif,specifying,69,[cmake] Fix issue #15447; Don't disable the runtime C++ modules when specifying `-Dminimal=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15448
https://github.com/root-project/root/pull/15448:56,modifiability,modul,modules,56,[cmake] Fix issue #15447; Don't disable the runtime C++ modules when specifying `-Dminimal=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15448
https://github.com/root-project/root/pull/15448:56,safety,modul,modules,56,[cmake] Fix issue #15447; Don't disable the runtime C++ modules when specifying `-Dminimal=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15448
https://github.com/root-project/root/pull/15449:170,deployability,version,version,170,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,deployability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:440,deployability,version,version,440,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:162,energy efficiency,current,current,162,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:170,integrability,version,version,170,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,integrability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:440,integrability,version,version,440,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,interoperability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:170,modifiability,version,version,170,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:216,modifiability,reu,reused,216,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,modifiability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:440,modifiability,version,version,440,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:132,reliability,doe,doesn,132,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,reliability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:53,safety,test,test,53,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:275,safety,test,tested,275,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:286,safety,test,testRooCrystalBall,286,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:385,safety,test,test,385,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,security,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:53,testability,test,test,53,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:275,testability,test,tested,275,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:286,testability,test,testRooCrystalBall,286,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:334,testability,integr,integrate,334,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:385,testability,test,test,385,"[RF] Implement code generation for `RooCBShape`; The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15451:221,deployability,updat,updated,221,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:191,safety,test,tested,191,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:221,safety,updat,updated,221,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:221,security,updat,updated,221,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:191,testability,test,tested,191,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:94,usability,prefer,prefer,94,"[TList] Retire dangerous ctor; This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp. TList mylist = new TList();. ```. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15452:77,modifiability,pac,packet,77,[webgui] strict check for HMAC signature; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:42,safety,Prevent,Prevent,42,[webgui] strict check for HMAC signature; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:31,security,sign,signature,31,[webgui] strict check for HMAC signature; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15452:42,security,Preven,Prevent,42,[webgui] strict check for HMAC signature; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15452
https://github.com/root-project/root/pull/15453:84,modifiability,pac,packet,84,[webgui] strict check for HMAC signature [6.32]; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15453
https://github.com/root-project/root/pull/15453:49,safety,Prevent,Prevent,49,[webgui] strict check for HMAC signature [6.32]; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15453
https://github.com/root-project/root/pull/15453:31,security,sign,signature,31,[webgui] strict check for HMAC signature [6.32]; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15453
https://github.com/root-project/root/pull/15453:49,security,Preven,Prevent,49,[webgui] strict check for HMAC signature [6.32]; Prevent situation with manipulated packet send without HMAC at all could be accepted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15453
https://github.com/root-project/root/pull/15458:164,deployability,updat,updated,164,[cling] Make cling::utils::Lookup::Named look into using directives; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:134,safety,test,tested,134,[cling] Make cling::utils::Lookup::Named look into using directives; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:164,safety,updat,updated,164,[cling] Make cling::utils::Lookup::Named look into using directives; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:164,security,updat,updated,164,[cling] Make cling::utils::Lookup::Named look into using directives; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:134,testability,test,tested,134,[cling] Make cling::utils::Lookup::Named look into using directives; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15459:75,availability,state,statement,75,TEnum::GetEnum normalize name before search.; This allows to resolve using statement and find the target enum. This fixes #15406.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15459
https://github.com/root-project/root/pull/15459:75,integrability,state,statement,75,TEnum::GetEnum normalize name before search.; This allows to resolve using statement and find the target enum. This fixes #15406.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15459
https://github.com/root-project/root/issues/15460:195,interoperability,specif,specification,195,"TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs; As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g. ```. enum A : int {};. TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3. ```. but. ```. enum B : std::int32_t {};. TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15460
https://github.com/root-project/root/issues/15460:180,modifiability,exten,extends,180,"TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs; As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g. ```. enum A : int {};. TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3. ```. but. ```. enum B : std::int32_t {};. TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15460
https://github.com/root-project/root/issues/15460:41,reliability,doe,does,41,"TEnum::GetEnum(""B"")->GetUnderlyingType() does not following typedefs; As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g. ```. enum A : int {};. TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3. ```. but. ```. enum B : std::int32_t {};. TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15460
https://github.com/root-project/root/pull/15461:67,modifiability,Exten,Extend,67,TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15461:78,safety,test,test,78,TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15461:78,testability,test,test,78,TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15461:25,usability,support,support,25,TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15462:74,modifiability,Exten,Extend,74,[v632] TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15462:85,safety,test,test,85,[v632] TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15462:85,testability,test,test,85,[v632] TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15462:32,usability,support,support,32,[v632] TEnum::GetUnderlying add support for typedefs.; This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15463:82,availability,state,statement,82,[v630] TEnum::GetEnum normalize name before search.; This allows to resolve using statement and find the target enum. This fixes #15406# This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15463
https://github.com/root-project/root/pull/15463:82,integrability,state,statement,82,[v630] TEnum::GetEnum normalize name before search.; This allows to resolve using statement and find the target enum. This fixes #15406# This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15463
https://github.com/root-project/root/pull/15464:428,availability,failur,failure,428,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:246,deployability,automat,automatically,246,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:414,deployability,configurat,configuration,414,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:428,deployability,fail,failure,428,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:451,deployability,fail,fail-on-missing,451,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:414,integrability,configur,configuration,414,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:199,modifiability,pac,packagers,199,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:414,modifiability,configur,configuration,414,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:428,performance,failur,failure,428,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:428,reliability,fail,failure,428,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:451,reliability,fail,fail-on-missing,451,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:28,safety,test,tests,28,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:136,safety,test,tests,136,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:155,safety,test,tests,155,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:303,safety,test,tests,303,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:363,safety,test,tests,363,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:414,security,configur,configuration,414,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:28,testability,test,tests,28,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:136,testability,test,tests,136,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:155,testability,test,tests,155,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:246,testability,automat,automatically,246,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:303,testability,test,tests,303,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:363,testability,test,tests,363,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:314,usability,clear,clearly,314,"[CMake] Don't treat DistRDF tests as features; The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15465:67,performance,time,time,67,"[tree] Remove trailing whitespaces that trigger warnings at config time; Remove trailing whitespaces to avoid warnings like these:. ```. /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3760:97: warning: backslash and newline separated by space. 3760 | ""Could not init branch associated to this leaf (%s)."", leaf->GetName()); \. |. /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3829:97: warning: backslash and newline separated by space. 3829 | } \. |. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15465
https://github.com/root-project/root/pull/15465:104,safety,avoid,avoid,104,"[tree] Remove trailing whitespaces that trigger warnings at config time; Remove trailing whitespaces to avoid warnings like these:. ```. /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3760:97: warning: backslash and newline separated by space. 3760 | ""Could not init branch associated to this leaf (%s)."", leaf->GetName()); \. |. /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3829:97: warning: backslash and newline separated by space. 3829 | } \. |. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15465
https://github.com/root-project/root/pull/15467:166,availability,down,download,166,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:511,availability,down,downloaded,511,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:552,availability,failur,failure,552,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:34,deployability,fail,fail-on-missing,34,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:98,deployability,fail,fail-on-missing,98,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:185,deployability,depend,dependency,185,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:275,deployability,depend,dependency,275,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:293,deployability,fail,fail-on-missing,293,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:432,deployability,configurat,configuration,432,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:538,deployability,configurat,configuration,538,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:552,deployability,fail,failure,552,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:697,deployability,releas,release,697,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:185,integrability,depend,dependency,185,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:275,integrability,depend,dependency,275,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:432,integrability,configur,configuration,432,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:538,integrability,configur,configuration,538,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:185,modifiability,depend,dependency,185,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:275,modifiability,depend,dependency,275,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:432,modifiability,configur,configuration,432,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:538,modifiability,configur,configuration,538,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:680,modifiability,pac,packaging,680,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:446,performance,overhead,overhead,446,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:552,performance,failur,failure,552,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:34,reliability,fail,fail-on-missing,34,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:98,reliability,fail,fail-on-missing,98,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:293,reliability,fail,fail-on-missing,293,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:317,reliability,doe,doesn,317,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:552,reliability,fail,failure,552,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:185,safety,depend,dependency,185,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:275,safety,depend,dependency,275,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:432,security,configur,configuration,432,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:538,security,configur,configuration,538,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:185,testability,depend,dependency,185,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:275,testability,depend,dependency,275,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:572,usability,Close,Closes,572,"[CMake] Skip connection check if `fail-on-missing=ON`; The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15468:110,deployability,releas,release,110,[v632] Backport of recent fixes and improvements; Backport some recent relevant fixes and improvements to the release branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15468
https://github.com/root-project/root/pull/15469:378,deployability,updat,updated,378,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:1,energy efficiency,core,core,1,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:255,energy efficiency,reduc,reduce,255,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:229,interoperability,semant,semantics,229,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:348,safety,test,tested,348,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:378,safety,updat,updated,378,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:378,security,updat,updated,378,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:348,testability,test,tested,348,"[core] Pass TString by value to TNamed ctor; # This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). fixes: #15434.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15470:95,deployability,build,building,95,"[skip-ci] define missing doxygen groups; we get otherwise about 300 warnings of this type when building docu:. warning: Found non-existing group 'ROOT7' for the command '@ingroup', ignoring command. warning: Found non-existing group 'NTuple' for the command '@ingroup', ignoring command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:161,usability,command,command,161,"[skip-ci] define missing doxygen groups; we get otherwise about 300 warnings of this type when building docu:. warning: Found non-existing group 'ROOT7' for the command '@ingroup', ignoring command. warning: Found non-existing group 'NTuple' for the command '@ingroup', ignoring command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:190,usability,command,command,190,"[skip-ci] define missing doxygen groups; we get otherwise about 300 warnings of this type when building docu:. warning: Found non-existing group 'ROOT7' for the command '@ingroup', ignoring command. warning: Found non-existing group 'NTuple' for the command '@ingroup', ignoring command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:250,usability,command,command,250,"[skip-ci] define missing doxygen groups; we get otherwise about 300 warnings of this type when building docu:. warning: Found non-existing group 'ROOT7' for the command '@ingroup', ignoring command. warning: Found non-existing group 'NTuple' for the command '@ingroup', ignoring command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15470:279,usability,command,command,279,"[skip-ci] define missing doxygen groups; we get otherwise about 300 warnings of this type when building docu:. warning: Found non-existing group 'ROOT7' for the command '@ingroup', ignoring command. warning: Found non-existing group 'NTuple' for the command '@ingroup', ignoring command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15470
https://github.com/root-project/root/pull/15471:463,availability,redund,redundant,463,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:359,deployability,build,builds,359,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:463,deployability,redundan,redundant,463,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:683,deployability,log,logic,683,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:770,deployability,fail,fail,770,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:801,deployability,fail,fail-on-missing,801,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:463,reliability,redundan,redundant,463,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:744,reliability,doe,doesn,744,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:770,reliability,fail,fail,770,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:801,reliability,fail,fail-on-missing,801,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:463,safety,redund,redundant,463,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:683,safety,log,logic,683,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:683,security,log,logic,683,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:683,testability,log,logic,683,"[CMake] Don't check if Python headers are found in `RootBuildOptions`; This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15472:106,energy efficiency,Current,Currently,106,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:152,energy efficiency,Current,Currently,152,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:95,interoperability,standard,standards,95,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:166,safety,test,tested,166,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:166,testability,test,tested,166,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/pull/15472:71,usability,support,supported,71,Remove the K&R style definitions from builtin zlib (part 2); No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/issues/15473:13,availability,fault,fault,13,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:215,availability,fault,fault,215,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2177,availability,fault,fault,2177,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2427,availability,avail,available,2427,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2731,availability,Operat,Operating,2731,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:24,deployability,build,building,24,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:321,deployability,FAIL,FAILED,321,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:371,deployability,build,builddir,371,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:408,deployability,build,builddir,408,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:441,deployability,build,builddir,441,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:506,deployability,build,builddir,506,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:560,deployability,build,builddir,560,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:634,deployability,build,builddir,634,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:722,deployability,build,builddir,722,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:759,deployability,build,builddir,759,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:797,deployability,build,builddir,797,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1369,deployability,build,builddir,1369,"ilddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1960,deployability,build,builddir,1960,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2242,deployability,build,build,2242,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2402,deployability,Instal,Install,2402,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2533,deployability,build,builddir,2533,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2546,deployability,build,builddir,2546,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2632,deployability,version,version,2632,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2687,deployability,Instal,Installation,2687,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2708,deployability,Build,Build,2708,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:13,energy efficiency,fault,fault,13,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:215,energy efficiency,fault,fault,215,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1430,energy efficiency,core,core,1430,"cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it avail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1460,energy efficiency,core,core,1460,"/usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1497,energy efficiency,core,core,1497,"=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mol",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1519,energy efficiency,core,core,1519,"sr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1540,energy efficiency,core,core,1540,"OREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1562,energy efficiency,core,core,1562,"ddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1583,energy efficiency,core,core,1583,"ootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1607,energy efficiency,core,core,1607,".cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1634,energy efficiency,core,core,1634,"ilddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1661,energy efficiency,core,core,1661,"IO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1683,energy efficiency,core,core,1683,"excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1705,energy efficiency,core,core,1705,"ludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1726,energy efficiency,core,core,1726,"ir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1754,energy efficiency,core,core,1754,"ot/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1785,energy efficiency,core,core,1785,"ath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1813,energy efficiency,core,core,1813,"-DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1835,energy efficiency,core,core,1835,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1863,energy efficiency,core,core,1863,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1891,energy efficiency,core,core,1891,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1913,energy efficiency,core,core,1913,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:1938,energy efficiency,core,core,1938,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2025,energy efficiency,core,core,2025,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2177,energy efficiency,fault,fault,2177,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2632,integrability,version,version,2632,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2632,modifiability,version,version,2632,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:13,performance,fault,fault,13,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:215,performance,fault,fault,215,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2177,performance,fault,fault,2177,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:13,reliability,fault,fault,13,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:215,reliability,fault,fault,215,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:321,reliability,FAIL,FAILED,321,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2177,reliability,fault,fault,2177,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2234,reliability,doe,doesn,2234,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2427,reliability,availab,available,2427,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2669,reliability,doe,doesn,2669,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:13,safety,fault,fault,13,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:215,safety,fault,fault,215,"Segmentation fault when building with the mold linker; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here. ```. [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm. FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm. cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2177,safety,fault,fault,2177,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2427,safety,avail,available,2427,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2427,security,availab,available,2427,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2778,testability,context,context,2778,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h. Segmentation fault. ```. I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer. ``` bash. # Install mold and have it available in PATH, for example in /usr/bin. export LDFLAGS=""-fuse-ld=mold"". # from the root source. mkdir builddir. cd builddir. cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja. ninja. ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15474:19,availability,failur,failures,19,"[Web Graphics] Two failures with one simple PyROOT plotter; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:. 1. A crash, upon first execution. 2. A system freeze, once the browser is loaded. ## Crash. Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:. ```. [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:. ERROR: Failed parsing extensions. [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ . -> Created TensorFlow Lite XNNPACK delegate for CPU. ```. The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze. Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py. import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). h.Draw(). input(""Press Enter to exit""). ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:459,availability,error,error,459,"[Web Graphics] Two failures with one simple PyROOT plotter; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:. 1. A crash, upon first execution. 2. A system freeze, once the browser is loaded. ## Crash. Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:. ```. [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:. ERROR: Failed parsing extensions. [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ . -> Created TensorFlow Lite XNNPACK delegate for CPU. ```. The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze. Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py. import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). h.Draw(). input(""Press Enter to exit""). ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:512,availability,ERROR,ERROR,512,"[Web Graphics] Two failures with one simple PyROOT plotter; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:. 1. A crash, upon first execution. 2. A system freeze, once the browser is loaded. ## Crash. Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:. ```. [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:. ERROR: Failed parsing extensions. [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ . -> Created TensorFlow Lite XNNPACK delegate for CPU. ```. The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze. Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py. import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(). h = ROOT.TH1D("""","""",64, -4,4). h.FillRandom(""gaus""). h.Draw(). input(""Press Enter to exit""). ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
