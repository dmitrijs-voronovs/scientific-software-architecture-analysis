id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/3595:129,usability,error,error,129,"Hi @etejedor, thank's for taking care of this! I lack the technical knowledge to really isolate which circumstances lead to this error, that's why I described my use case with the python unit testing. Do you need some more details on what is exactly happening? Unfortunately I don't really have time do do some research on this this week thought...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:87,deployability,modul,modules,87,"Yes, I would prefer to understand what leads to `ROOT` not being present in the system modules, is it pytest doing this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:87,modifiability,modul,modules,87,"Yes, I would prefer to understand what leads to `ROOT` not being present in the system modules, is it pytest doing this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:87,safety,modul,modules,87,"Yes, I would prefer to understand what leads to `ROOT` not being present in the system modules, is it pytest doing this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:23,testability,understand,understand,23,"Yes, I would prefer to understand what leads to `ROOT` not being present in the system modules, is it pytest doing this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:13,usability,prefer,prefer,13,"Yes, I would prefer to understand what leads to `ROOT` not being present in the system modules, is it pytest doing this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3595:2,usability,close,close,2,I close this because the issue is not important for me anymore (although it still exists).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3595
https://github.com/root-project/root/pull/3598:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:5,availability,failur,failure,5,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:5,deployability,fail,failure,5,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:5,performance,failur,failure,5,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:5,reliability,fail,failure,5,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:0,safety,Test,Test,0,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3598:0,testability,Test,Test,0,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3598
https://github.com/root-project/root/pull/3599:11,deployability,build,build,11,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:116,deployability,Build,Building,116,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:208,deployability,build,building,208,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:217,deployability,modul,module,217,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:327,deployability,modul,module-includes,327,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:380,deployability,modul,modules,380,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:388,deployability,build,builds,388,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:882,deployability,Build,Building,882,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1226,deployability,Build,Building,1226,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1551,deployability,Build,Building,1551,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:64,energy efficiency,green,green,64,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:136,energy efficiency,core,core,136,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:261,energy efficiency,core,core,261,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:634,energy efficiency,core,core,634,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:902,energy efficiency,core,core,902,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:972,energy efficiency,core,core,972,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1246,energy efficiency,core,core,1246,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1307,energy efficiency,core,core,1307,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:477,integrability,sub,submodule,477,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:695,integrability,sub,submodule,695,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1034,integrability,sub,submodule,1034,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:1361,integrability,sub,submodule,1361,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:217,modifiability,modul,module,217,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:327,modifiability,modul,module-includes,327,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:380,modifiability,modul,modules,380,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:75,safety,except,except,75,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:217,safety,modul,module,217,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:327,safety,modul,module-includes,327,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3599:380,safety,modul,modules,380,"cxxmodules build with -Dbuiltin_clang=Off -Dbuiltin_llvm=Off is green too, except of the few warnings: . `[34/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Cling_Interpreter' imported from ../core/metacling/src/TClingTypeInfo.cxx:30:. In file included from <module-includes>:14:. /home/oksana/CERN_sources/root-modules/builds/../interpreter/cling/include/cling/Interpreter/CIFactory.h:13:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../core/metacling/src/TClingTypeInfo.cxx:38:2: warning: missing submodule 'Clang_Frontend.CompilerInstance' [-Wincomplete-umbrella]. #include ""clang/Frontend/CompilerInstance.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 2 warnings generated. [104/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. ../core/metacling/src/TClingClassInfo.cxx:50:2: warning: missing submodule 'LLVM_ExecutionEngine.GenericValue' [-Wincomplete-umbrella]. #include ""llvm/ExecutionEngine/GenericValue.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [286/2182] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ../core/metacling/src/TCling.cxx:103:2: warning: missing submodule Cling_MetaProcessor.MetaProcessor [-Wincomplete-umbrella]. #include ""cling/MetaProcessor/MetaProcessor.h"". ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1 warning generated. [540/2182] Building CXX object hist/hist/CMakeFiles/Hist.dir/src/AnalyticalIntegrals.cxx.o^`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3599
https://github.com/root-project/root/pull/3601:132,deployability,patch,patch,132,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:689,deployability,patch,patch,689,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:0,energy efficiency,Measur,Measurements,0,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:245,energy efficiency,CPU,CPU,245,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:802,energy efficiency,CPU,CPU,802,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:113,integrability,repositor,repository,113,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:113,interoperability,repositor,repository,113,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:240,performance,Time,Time,240,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:245,performance,CPU,CPU,245,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:797,performance,Time,Time,797,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:802,performance,CPU,CPU,802,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:132,safety,patch,patch,132,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:689,safety,patch,patch,689,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:132,security,patch,patch,132,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3601:689,security,patch,patch,689,Measurements for the benchmarks in the `philippe` branch of the [df_bench](https://gitlab.com/bluehood/df_bench) repository. Before patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 247377 ns 247373 ns 2856. TreeGetEntryTwoBranchesAndAllStatusFalse 310731 ns 310725 ns 2258. TreeGetEntryTwoBranches 381067 ns 381058 ns 1828. TreeGetEntryTwoBranchesWithoutSetStatus 985630 ns 985614 ns 701. BranchGetEntryOneBranch 103621 ns 103620 ns 6753. BranchGetEntryTwoBranches 103768 ns 103764 ns 6749. ```. After patch:. ```. -----------------------------------------------------------------------------------. Benchmark Time CPU Iterations. -----------------------------------------------------------------------------------. TreeGetEntryOneBranch 180852 ns 180846 ns 3872. TreeGetEntryTwoBranchesAndAllStatusFalse 220974 ns 220957 ns 3180. TreeGetEntryTwoBranches 292639 ns 292633 ns 2396. TreeGetEntryTwoBranchesWithoutSetStatus 900375 ns 900325 ns 773. BranchGetEntryOneBranch 104265 ns 104262 ns 6592. BranchGetEntryTwoBranches 105086 ns 105083 ns 6686. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3601
https://github.com/root-project/root/pull/3602:12,availability,failur,failures,12,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,deployability,fail,failures,12,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,performance,failur,failures,12,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,reliability,fail,failures,12,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:7,safety,test,test,7,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:7,testability,test,test,7,~~Most test failures are due to https://sft.its.cern.ch/jira/browse/ROOT-10062~~ (red herring),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,availability,failur,failure,12,The windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,deployability,fail,failure,12,The windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,performance,failur,failure,12,The windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:12,reliability,fail,failure,12,The windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:11,deployability,build,build,11,"@phsft-bot build , just to check the win build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:41,deployability,build,build,41,"@phsft-bot build , just to check the win build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:69,availability,failur,failures,69,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:87,availability,error,error,87,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:69,deployability,fail,failures,69,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:69,performance,failur,failures,69,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:87,performance,error,error,87,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:69,reliability,fail,failures,69,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:87,safety,error,error,87,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:87,usability,error,error,87,"@Axel-Naumann @bellenot do you have any idea why I get these windows failures about an error that, as far as I can tell, has been fixed in master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:13,testability,simpl,simply,13,"I guess it's simply that they are not fixed in master, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:13,usability,simpl,simply,13,"I guess it's simply that they are not fixed in master, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3602:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3602
https://github.com/root-project/root/pull/3612:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:52,availability,error,errors,52,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:156,availability,Error,Error,156,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:413,deployability,automat,automatically,413,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:52,performance,error,errors,52,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:156,performance,Error,Error,156,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:282,reliability,doe,does,282,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:52,safety,error,errors,52,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:156,safety,Error,Error,156,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:413,testability,automat,automatically,413,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:52,usability,error,errors,52,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:156,usability,Error,Error,156,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:194,availability,error,error,194,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:333,availability,error,error,333,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:383,availability,Error,Error,383,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:528,availability,Error,Error,528,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:578,availability,Error,Error,578,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:175,deployability,automat,automatically,175,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:194,performance,error,error,194,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:304,performance,memor,memory,304,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:333,performance,error,error,333,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:383,performance,Error,Error,383,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:528,performance,Error,Error,528,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:578,performance,Error,Error,578,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:44,reliability,doe,does,44,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:194,safety,error,error,194,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:333,safety,error,error,333,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:383,safety,Error,Error,383,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:495,safety,valid,valid,495,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:528,safety,Error,Error,528,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:578,safety,Error,Error,578,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:175,testability,automat,automatically,175,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:194,usability,error,error,194,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:304,usability,memor,memory,304,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:333,usability,error,error,333,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:383,usability,Error,Error,383,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:528,usability,Error,Error,528,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:578,usability,Error,Error,578,"> The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically? The error is spurrious. Indeed the code pattern is unusual and **intentionally** look at (sometime) uninitialized memory). You can ignore this error. > The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. This is also cumbersome but valid (because we don't overload Error here). You can also replace it with. ```. ::Error(""TTreeReaderFast::TTreeReaderFast"", ""TTree is NULL!"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:22,availability,Error,Error,22,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:59,availability,Error,Error,59,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:87,availability,error,error,87,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:22,performance,Error,Error,22,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:59,performance,Error,Error,59,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:87,performance,error,error,87,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:22,safety,Error,Error,22,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:59,safety,Error,Error,59,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:87,safety,error,error,87,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:22,usability,Error,Error,22,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:59,usability,Error,Error,59,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:87,usability,error,error,87,@pcanal I changed the Error functions in constructors to ::Error and ignore the second error for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:2,deployability,updat,updated,2,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:62,integrability,coupl,couple,62,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:62,modifiability,coupl,couple,62,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:2,safety,updat,updated,2,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:2,security,updat,updated,2,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:24,testability,simpl,simplify,24,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:62,testability,coupl,couple,62,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:24,usability,simpl,simplify,24,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:134,availability,failur,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:51,deployability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:94,deployability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:134,deployability,fail,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:51,integrability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:94,integrability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:114,integrability,event,event,114,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:51,modifiability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:94,modifiability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:134,performance,failur,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:134,reliability,fail,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:51,safety,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:94,safety,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:51,testability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3612:94,testability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3612
https://github.com/root-project/root/pull/3616:11,deployability,build,build,11,@phsft-bot build again please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:23,availability,failur,failure,23,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:23,deployability,fail,failure,23,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:23,performance,failur,failure,23,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:23,reliability,fail,failure,23,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:29,safety,review,review,29,"@pcanal, this is ready for a review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3616:29,testability,review,review,29,"@pcanal, this is ready for a review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3616
https://github.com/root-project/root/pull/3618:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:92,deployability,patch,patches,92,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:113,deployability,patch,patches,113,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:92,safety,patch,patches,92,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:113,safety,patch,patches,113,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:92,security,patch,patches,92,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:113,security,patch,patches,113,"@agheata , in CMS we are still using root 6.14. Can you please backport it to root v6-14-00-patches and v6-16-00-patches branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:0,availability,ping,ping,0,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:638,availability,operat,operation,638,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:502,deployability,manag,manager,502,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:562,deployability,manag,manager,562,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:502,energy efficiency,manag,manager,502,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:562,energy efficiency,manag,manager,562,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:338,integrability,pub,public,338,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:141,interoperability,conflict,conflicts,141,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:502,safety,manag,manager,502,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:562,safety,manag,manager,562,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:20,testability,plan,plans,20,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3618:598,usability,user,user,598,"ping @agheata ? Any plans for this to be back ported to root 6.14 and 6.16? . I tried to cherry-pick it in cms root repo but there are merge conflicts [a] . [a]. ```. diff --cc geom/geom/inc/TGeoManager.h. index 723081f,51fdd36..0000000. --- a/geom/geom/inc/TGeoManager.h. +++ b/geom/geom/inc/TGeoManager.h. @@@ -556,7 -594,7 +562,11 @@@ public. void SetUseParallelWorldNav(Bool_t flag);. Bool_t IsParallelWorldNav() const {return fUsePWNav;}. . ++<<<<<<< HEAD. + ClassDef(TGeoManager, 15) // geometry manager. ++=======. + ClassDef(TGeoManager, 17) // geometry manager. ++>>>>>>> 0afe5bb... Added user defined const properties. Added Up operation in TGeoIterator. };. . R__EXTERN TGeoManager *gGeoManager;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3618
https://github.com/root-project/root/pull/3620:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3620
https://github.com/root-project/root/pull/3621:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:134,availability,failur,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:51,deployability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:94,deployability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:134,deployability,fail,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:51,integrability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:94,integrability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:114,integrability,event,event,114,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:51,modifiability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:94,modifiability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:134,performance,failur,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:134,reliability,fail,failure,134,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:51,safety,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:94,safety,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:51,testability,depend,dependency,51,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3621:94,testability,depend,depends,94,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event). The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3621
https://github.com/root-project/root/pull/3622:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3622
https://github.com/root-project/root/pull/3622:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3622
https://github.com/root-project/root/pull/3622:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3622
https://github.com/root-project/root/pull/3622:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3622
https://github.com/root-project/root/pull/3625:55,safety,test,test,55,"You sjhould be able to enabled/disabled MT in a single test case, by using TMVA;;gConfig::EnableMT/DisableMT. for example: . ```. TMVA::gConfig().EnableMT(0); // use default pool size. TMVA::gConfig().GetNCpu(); // e.g return 16 (default size) . TMVA::gConfig().DisableMT(); . TMVA::gConfig().GetNCpu(); // returns 1 . TMVA::gConfig().EnableMT(4); // create a pool with 4 threads. TMVA::gConfig().GetNCpu(); // returns 4. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3625
https://github.com/root-project/root/pull/3625:55,testability,test,test,55,"You sjhould be able to enabled/disabled MT in a single test case, by using TMVA;;gConfig::EnableMT/DisableMT. for example: . ```. TMVA::gConfig().EnableMT(0); // use default pool size. TMVA::gConfig().GetNCpu(); // e.g return 16 (default size) . TMVA::gConfig().DisableMT(); . TMVA::gConfig().GetNCpu(); // returns 1 . TMVA::gConfig().EnableMT(4); // create a pool with 4 threads. TMVA::gConfig().GetNCpu(); // returns 4. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3625
https://github.com/root-project/root/pull/3628:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:12,availability,failur,failure,12,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:39,availability,failur,failure,39,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:12,deployability,fail,failure,12,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:39,deployability,fail,failure,39,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:12,performance,failur,failure,12,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:39,performance,failur,failure,39,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:12,reliability,fail,failure,12,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3628:39,reliability,fail,failure,39,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3628
https://github.com/root-project/root/pull/3630:16,interoperability,compatib,compatibility,16,"fixed the C++11 compatibility, rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3630
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:59,deployability,fail,fails,59,"Let's rebuild tomorrow, #3571 built fine, but here windows fails to find `M_PI`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:59,reliability,fail,fails,59,"Let's rebuild tomorrow, #3571 built fine, but here windows fails to find `M_PI`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:77,deployability,build,build,77,"Following https://godbolt.org/z/Ay4mOJ, `M_PI` should be there now. Edit: We build on windows with MSVC 19.14 (see [here](http://cdash.cern.ch/buildSummary.php?buildid=641370)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:143,deployability,build,buildSummary,143,"Following https://godbolt.org/z/Ay4mOJ, `M_PI` should be there now. Edit: We build on windows with MSVC 19.14 (see [here](http://cdash.cern.ch/buildSummary.php?buildid=641370)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:160,deployability,build,buildid,160,"Following https://godbolt.org/z/Ay4mOJ, `M_PI` should be there now. Edit: We build on windows with MSVC 19.14 (see [here](http://cdash.cern.ch/buildSummary.php?buildid=641370)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:59,usability,close,closed,59,"Btw, this PR should supersede #3416 , so I guess it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:48,deployability,build,build,48,"Ok, I've no idea why it does not work in the PR build. It should be fine following the msvc docs and godbolt (?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:24,reliability,doe,does,24,"Ok, I've no idea why it does not work in the PR build. It should be fine following the msvc docs and godbolt (?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3631:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3631
https://github.com/root-project/root/pull/3633:25,deployability,fail,fails,25,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:50,deployability,releas,release,50,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:58,deployability,build,builds,58,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:84,deployability,build,build,84,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:102,deployability,build,build,102,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:4,energy efficiency,load,loading,4,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:4,performance,load,loading,4,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:25,reliability,fail,fails,25,"Ok, loading the printers fails as expected during release builds. Let's try a debug build. @phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:36,modifiability,reu,reuse,36,Maybe it is possible/makes sense to reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:231,deployability,stack,stack,231,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:281,deployability,stack,stack,281,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:390,deployability,stack,stack,390,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:642,deployability,stack,stack,642,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:704,deployability,build,build,704,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:783,deployability,releas,release,783,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:791,deployability,build,builds,791,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:273,energy efficiency,current,current,273,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:2,modifiability,reu,reuse,2,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:521,performance,memor,memory,521,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:571,safety,except,exception,571,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:735,safety,test,test,735,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:195,security,sign,signal,195,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:510,security,access,access,510,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:237,testability,trace,trace,237,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:287,testability,trace,trace,287,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:396,testability,trace,trace,396,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:648,testability,trace,trace,648,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:735,testability,test,test,735,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:521,usability,memor,memory,521,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:613,usability,stop,stops,613,"> reuse https://root.cern.ch/doc/master/namespacecling.html#func-members in `to_string`? To expand a bit on what @Axel-Naumann said:. If you call a C++ function on a dead pointer, gdb will get a signal while executing, and add the stack trace of the call on the top of the current stack trace. It might even start calling another function when trying to pretty-print another object, so the stack trace will get longer. Instead, if you re-implement member lookup in gdb, gdb will either tell you that it cannot access the memory at the given address or it throws a python exception. In both cases, pretty-printing stops without cluttering the stack trace. @Axel-Naumann:. - Is there a way to have a debug build? I would like to see the test succeed. - I will try to disable it during release builds before proceeding.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:130,deployability,instal,install,130,I think it's okay to not have tests for this; please consider not merging them. The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:157,deployability,instal,install,157,I think it's okay to not have tests for this; please consider not merging them. The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:30,safety,test,tests,30,I think it's okay to not have tests for this; please consider not merging them. The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:30,testability,test,tests,30,I think it's okay to not have tests for this; please consider not merging them. The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:190,usability,behavi,behavior,190,I think it's okay to not have tests for this; please consider not merging them. The CMake approach seems fine; I don't know about install - could you try to install ROOT and see whether the behavior is as expected?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:49,deployability,instal,installing,49,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:4,safety,test,tests,4,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:37,safety,test,tested,37,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:4,testability,test,tests,4,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3633:37,testability,test,tested,37,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3633
https://github.com/root-project/root/pull/3635:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:166,deployability,build,builds,166,"@arpi-r, I reverted your changes before https://root.cern.ch/gitweb/?p=root.git;a=commitdiff;h=2b8011b3e44fdf2463f8c57cc5d799f95704c2da since we found that on nighty builds where was enabled -Dr=ON, tests were failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:210,deployability,fail,failing,210,"@arpi-r, I reverted your changes before https://root.cern.ch/gitweb/?p=root.git;a=commitdiff;h=2b8011b3e44fdf2463f8c57cc5d799f95704c2da since we found that on nighty builds where was enabled -Dr=ON, tests were failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:210,reliability,fail,failing,210,"@arpi-r, I reverted your changes before https://root.cern.ch/gitweb/?p=root.git;a=commitdiff;h=2b8011b3e44fdf2463f8c57cc5d799f95704c2da since we found that on nighty builds where was enabled -Dr=ON, tests were failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:199,safety,test,tests,199,"@arpi-r, I reverted your changes before https://root.cern.ch/gitweb/?p=root.git;a=commitdiff;h=2b8011b3e44fdf2463f8c57cc5d799f95704c2da since we found that on nighty builds where was enabled -Dr=ON, tests were failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:199,testability,test,tests,199,"@arpi-r, I reverted your changes before https://root.cern.ch/gitweb/?p=root.git;a=commitdiff;h=2b8011b3e44fdf2463f8c57cc5d799f95704c2da since we found that on nighty builds where was enabled -Dr=ON, tests were failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:7,safety,test,test,7,Please test it locally with flag -Dr=ON (you need also to have R preinstalled) and check root test suite results.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:94,safety,test,test,94,Please test it locally with flag -Dr=ON (you need also to have R preinstalled) and check root test suite results.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:7,testability,test,test,7,Please test it locally with flag -Dr=ON (you need also to have R preinstalled) and check root test suite results.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:94,testability,test,test,94,Please test it locally with flag -Dr=ON (you need also to have R preinstalled) and check root test suite results.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3635:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3635
https://github.com/root-project/root/pull/3639:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:4,availability,failur,failure,4,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:130,availability,error,error,130,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:4,deployability,fail,failure,4,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:40,deployability,build,build,40,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:74,deployability,build,build,74,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:244,deployability,build,build,244,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:278,deployability,build,build,278,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:284,deployability,build,build,284,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:230,interoperability,specif,specified,230,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:4,performance,failur,failure,4,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:130,performance,error,error,130,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:4,reliability,fail,failure,4,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:100,safety,test,test,100,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:130,safety,error,error,130,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:305,safety,test,test,305,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:100,testability,test,test,100,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:305,testability,test,test,305,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:130,usability,error,error,130,"The failure in Windows is. `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`. Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3639:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3639
https://github.com/root-project/root/pull/3640:44,deployability,patch,patch,44,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:54,deployability,fail,fails,54,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:266,modifiability,requires chang,requires changes,266,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:54,reliability,fail,fails,54,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:44,safety,patch,patch,44,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:44,security,patch,patch,44,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:82,security,access,access,82,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:182,security,access,access,182,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:370,usability,support,support,370,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:81,deployability,updat,update,81,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:95,deployability,patch,patch,95,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:81,safety,updat,update,81,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:95,safety,patch,patch,95,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:81,security,updat,update,81,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3640:95,security,patch,patch,95,"Thank you for the heads up @wlav , please let me know when you are done with the update of the patch and I will redo this PR accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3640
https://github.com/root-project/root/pull/3641:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3641
https://github.com/root-project/root/pull/3646:163,performance,perform,performance,163,Can u open a jira item with the overloads you have in mind? we can consider those 1 by 1 and decide if they need to be resolved. I think that giving access to top performance with compiled only DF based analysis applications is quite important.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3646
https://github.com/root-project/root/pull/3646:149,security,access,access,149,Can u open a jira item with the overloads you have in mind? we can consider those 1 by 1 and decide if they need to be resolved. I think that giving access to top performance with compiled only DF based analysis applications is quite important.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3646
https://github.com/root-project/root/pull/3646:163,usability,perform,performance,163,Can u open a jira item with the overloads you have in mind? we can consider those 1 by 1 and decide if they need to be resolved. I think that giving access to top performance with compiled only DF based analysis applications is quite important.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3646
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:86,availability,error,errors,86,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:18,performance,time,time,18,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:86,performance,error,errors,86,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:86,safety,error,errors,86,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:86,usability,error,errors,86,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:59,availability,error,error,59,@Andres-Briones please fork also roottest to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:53,deployability,build,build,53,@Andres-Briones please fork also roottest to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:59,performance,error,error,59,@Andres-Briones please fork also roottest to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:59,safety,error,error,59,@Andres-Briones please fork also roottest to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:59,usability,error,error,59,@Andres-Briones please fork also roottest to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:112,availability,error,error,112,@Andres-Briones please fork also [roottest](https://github.com/root-project/roottest) in order to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:106,deployability,build,build,106,@Andres-Briones please fork also [roottest](https://github.com/root-project/roottest) in order to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:112,performance,error,error,112,@Andres-Briones please fork also [roottest](https://github.com/root-project/roottest) in order to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:112,safety,error,error,112,@Andres-Briones please fork also [roottest](https://github.com/root-project/roottest) in order to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:112,usability,error,error,112,@Andres-Briones please fork also [roottest](https://github.com/root-project/roottest) in order to fix the build error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:20,usability,statu,status,20,"@couet, what is the status of this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3647:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3647
https://github.com/root-project/root/pull/3649:230,safety,test,testing,230,"Hi Philippe @pcanal, . First commit was already solved by Danilo, but maybe second one https://github.com/root-project/root/pull/3649/commits/b0901d1f868a18f51d34b6e7dfe8382250b44967 can be applied? It is printf arguments in tree testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3649
https://github.com/root-project/root/pull/3649:230,testability,test,testing,230,"Hi Philippe @pcanal, . First commit was already solved by Danilo, but maybe second one https://github.com/root-project/root/pull/3649/commits/b0901d1f868a18f51d34b6e7dfe8382250b44967 can be applied? It is printf arguments in tree testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3649
https://github.com/root-project/root/pull/3656:63,availability,consist,consistent,63,"great PR, thanks for spotting this @stwunsch . To be even more consistent with the past, could this veto be added to the `pyveto`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3656
https://github.com/root-project/root/pull/3656:63,usability,consist,consistent,63,"great PR, thanks for spotting this @stwunsch . To be even more consistent with the past, could this veto be added to the `pyveto`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3656
https://github.com/root-project/root/pull/3661:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3666:27,deployability,fail,failing,27,I.e. the BulkApi tests are failing *not* because of the pointer check. Closing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3666:27,reliability,fail,failing,27,I.e. the BulkApi tests are failing *not* because of the pointer check. Closing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3666:17,safety,test,tests,17,I.e. the BulkApi tests are failing *not* because of the pointer check. Closing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3666:17,testability,test,tests,17,I.e. the BulkApi tests are failing *not* because of the pointer check. Closing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3667:14,deployability,updat,update,14,Should I also update the main README?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:14,safety,updat,update,14,Should I also update the main README?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:14,security,updat,update,14,Should I also update the main README?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:16,deployability,updat,update,16,"> Should I also update the main README? I'd say no, as that's for ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:16,safety,updat,update,16,"> Should I also update the main README? I'd say no, as that's for ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:16,security,updat,update,16,"> Should I also update the main README? I'd say no, as that's for ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3669:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3669
https://github.com/root-project/root/pull/3670:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3676:0,reliability,Doe,Doesn,0,"Doesn't ```delete c``` also deletes ```p```? If not, why not?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:76,safety,valid,valid,76,p is not is the list of primitives but has fMother set to gPad which is not valid anymore when c is deleted. See the description in Jira,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:4,reliability,doe,does,4,How does the Canvas 'knows' about its Pads (ie. why is it not on the list of primitives)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:174,deployability,fail,fail,174,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:58,energy efficiency,draw,drawn,58,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:372,performance,time,time,372,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:174,reliability,fail,fail,174,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:386,reliability,doe,doesn,386,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:156,usability,behavi,behaviour,156,A Pad enters in the TCanvas list of primitives when it is drawn. Like any other primitives. I am aware that the fixe proposed here relies on some undefined behaviour and may fail sometimes. This technique is used elsewhere in TPad and I guess it is better to have this extra check than nothing. I tried also to set the fMother member to 0 instead of gPad at TPad creation time but that doesn't not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:9,availability,failur,failures,9,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:9,deployability,fail,failures,9,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:9,performance,failur,failures,9,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:9,reliability,fail,failures,9,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:4,safety,test,test,4,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3676:4,testability,test,test,4,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3677:14,deployability,fail,failing,14,bulk test are failing due to a (being looked into) issue with the 32bit vm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3677
https://github.com/root-project/root/pull/3677:14,reliability,fail,failing,14,bulk test are failing due to a (being looked into) issue with the 32bit vm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3677
https://github.com/root-project/root/pull/3677:5,safety,test,test,5,bulk test are failing due to a (being looked into) issue with the 32bit vm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3677
https://github.com/root-project/root/pull/3677:5,testability,test,test,5,bulk test are failing due to a (being looked into) issue with the 32bit vm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3677
https://github.com/root-project/root/pull/3683:69,deployability,build,builds,69,"The test is here https://github.com/root-project/roottest/pull/306 , builds are running :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3683:4,safety,test,test,4,"The test is here https://github.com/root-project/roottest/pull/306 , builds are running :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3683:4,testability,test,test,4,"The test is here https://github.com/root-project/roottest/pull/306 , builds are running :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3683:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3686:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3686
https://github.com/root-project/root/pull/3687:33,availability,failur,failure,33,"@bellenot, I suspect the windows failure is due to the max_size limit of std::string. Could you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:33,deployability,fail,failure,33,"@bellenot, I suspect the windows failure is due to the max_size limit of std::string. Could you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:33,performance,failur,failure,33,"@bellenot, I suspect the windows failure is due to the max_size limit of std::string. Could you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:33,reliability,fail,failure,33,"@bellenot, I suspect the windows failure is due to the max_size limit of std::string. Could you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:96,usability,confirm,confirm,96,"@bellenot, I suspect the windows failure is due to the max_size limit of std::string. Could you confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3691:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3693:11,deployability,build,build,11,"@phsft-bot build. Trying again, not sure if it picked the corresponding roottest PR:. https://github.com/root-project/roottest/pull/307",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:65,deployability,build,build,65,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:175,deployability,fail,fail,175,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:175,reliability,fail,fail,175,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:170,safety,test,test,170,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:170,testability,test,test,170,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:130,usability,progress,progressivecsv,130,"For some reason, the branch of this PR is not checked out in the build nodes, but the corresponding branch of roottest (`etejedor:progressivecsv`) is. That is making the test fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3695:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:106,availability,failur,failures,106,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:106,deployability,fail,failures,106,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:290,deployability,modul,modules,290,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:305,deployability,modul,modules,305,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:290,modifiability,modul,modules,290,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:305,modifiability,modul,modules,305,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:106,performance,failur,failures,106,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:106,reliability,fail,failures,106,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:290,safety,modul,modules,290,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:305,safety,modul,modules,305,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:138,usability,behavi,behavior,138,"@pcanal, it looks like projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest* failures actually bring the old behavior as described in https://github.com/root-project/roottest/blob/master/cling/typedef_global/output.ref-5. How do make this check conditional for modules vs non-modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:11,deployability,build,build,11,@phsft-bot build on mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3700:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3700
https://github.com/root-project/root/pull/3700:9,availability,error,errors,9,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3700
https://github.com/root-project/root/pull/3700:9,performance,error,errors,9,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3700
https://github.com/root-project/root/pull/3700:9,safety,error,errors,9,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3700
https://github.com/root-project/root/pull/3700:9,usability,error,errors,9,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3700
https://github.com/root-project/root/pull/3701:26,deployability,releas,release,26,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:252,deployability,contain,contains,252,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:906,deployability,Contain,Container,906,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:236,interoperability,compatib,compatible,236,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:1006,interoperability,convers,conversion,1006,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:397,modifiability,paramet,parameter,397,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:266,safety,valid,valid,266,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:277,security,ident,identifiers,277,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3701:996,usability,indicat,indicates,996,"Here is copy of text from release notes:. Add possibility to convert STL `std::map`, `std::multimap`, `std::unordered_map`,. `std::unordered_multimap` classes into JSON object. This only possible when key typename. is `std::string` (or compatible) and contains only valid JSON identifiers. By default these classes converted. into JSON array of `std::pair` objects. To enable new feature, compact parameter should be 5:. ~~~ {.cpp}. std::map<std::string,int> obj;. obj[""name1""] = 11;. obj[""name1""] = 22;. auto json = TBufferJSON::ToJSON(&obj, 5);. // {""_typename"": ""map<string,int>"", ""name1"": 11, ""name2"": 22}. auto dflt_json = TBufferJSON::ToJSON(&obj);. // [{""$pair"" : ""pair<string,int>"", ""first"" : ""name1"", ""second"" : 11}, {""$pair"" : ""pair<string,int>"", ""first"" : ""name2"", ""second"" : 22}]. ~~~. Also one could put ""JSON_object"" string in class-member comments to enable this feature:. ~~~ {.cpp}. class Container {. int field{5};. std::unordered_map<std::string,double> data; ///< JSON_object indicates conversion. };. ~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3702:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:11,deployability,build,build,11,"@phsft-bot build on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:99,deployability,build,build,99,"@bellenot Should I push ""dummy"" commit? Without new commits Jenkins very often ignore our tries to build ROOT with root7 flags - it just abort building.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:143,deployability,build,building,143,"@bellenot Should I push ""dummy"" commit? Without new commits Jenkins very often ignore our tries to build ROOT with root7 flags - it just abort building.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:7,deployability,build,build,7,"It was build on two platforms (MacOS and fedora27), all other are hanging now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:20,interoperability,platform,platforms,20,"It was build on two platforms (MacOS and fedora27), all other are hanging now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:11,deployability,build,build,11,@phsft-bot build on windows10/default with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:52,interoperability,platform,platforms,52,@bellenot . I trying to trigger windows - all other platforms are OK,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:48,availability,error,error,48,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:37,deployability,depend,dependency,37,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:37,integrability,depend,dependency,37,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:37,modifiability,depend,dependency,37,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:48,performance,error,error,48,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:37,safety,depend,dependency,37,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:48,safety,error,error,48,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:55,safety,detect,detected,55,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:101,safety,detect,detected,101,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:55,security,detect,detected,55,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:101,security,detect,detected,101,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:37,testability,depend,dependency,37,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:48,usability,error,error,48,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:30,deployability,Log,Logically,30,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:49,deployability,depend,dependency,49,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:49,integrability,depend,dependency,49,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:49,modifiability,depend,dependency,49,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:30,safety,Log,Logically,30,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:49,safety,depend,dependency,49,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:30,security,Log,Logically,30,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:30,testability,Log,Logically,30,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:49,testability,depend,dependency,49,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3703:0,availability,Failur,Failure,0,"Failure is unrelated to my changes, merging commit since it fix nightlies build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:0,deployability,Fail,Failure,0,"Failure is unrelated to my changes, merging commit since it fix nightlies build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:74,deployability,build,build,74,"Failure is unrelated to my changes, merging commit since it fix nightlies build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:0,performance,Failur,Failure,0,"Failure is unrelated to my changes, merging commit since it fix nightlies build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:0,reliability,Fail,Failure,0,"Failure is unrelated to my changes, merging commit since it fix nightlies build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3704:0,availability,Failur,Failures,0,"Failures are unrelated to these changes, merging since it will fix nightlies builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:0,deployability,Fail,Failures,0,"Failures are unrelated to these changes, merging since it will fix nightlies builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:77,deployability,build,builds,77,"Failures are unrelated to these changes, merging since it will fix nightlies builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:0,performance,Failur,Failures,0,"Failures are unrelated to these changes, merging since it will fix nightlies builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:0,reliability,Fail,Failures,0,"Failures are unrelated to these changes, merging since it will fix nightlies builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3706:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3706
https://github.com/root-project/root/pull/3706:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3706
https://github.com/root-project/root/pull/3707:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:82,deployability,version,version,82,quick comment (actual review will follow) the coding coventions (see the upcoming version of its description at https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.cxx and https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.hxx). requires 3 spaces indentation and no trailing spaces. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:82,integrability,version,version,82,quick comment (actual review will follow) the coding coventions (see the upcoming version of its description at https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.cxx and https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.hxx). requires 3 spaces indentation and no trailing spaces. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:82,modifiability,version,version,82,quick comment (actual review will follow) the coding coventions (see the upcoming version of its description at https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.cxx and https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.hxx). requires 3 spaces indentation and no trailing spaces. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:22,safety,review,review,22,quick comment (actual review will follow) the coding coventions (see the upcoming version of its description at https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.cxx and https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.hxx). requires 3 spaces indentation and no trailing spaces. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:22,testability,review,review,22,quick comment (actual review will follow) the coding coventions (see the upcoming version of its description at https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.cxx and https://github.com/root-project/root/blob/79b51a9f9a44454c24c29d4b3ce2659655392249/README/RCodingStyle.hxx). requires 3 spaces indentation and no trailing spaces. thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:18,safety,test,tests,18,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:29,safety,test,test,29,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:246,safety,test,testing,246,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:18,testability,test,tests,18,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:29,testability,test,test,29,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:246,testability,test,testing,246,"Yes, there are no tests that test TTreeSQL right now with the different databases so it's hard to know. I could probably write some for sqlite and mysql (and maybe ODBC?), but I don't know if it's easy to get some hands on an Oracle database for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:216,safety,test,test,216,"> I could probably write some for sqlite . It would be grate! . As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:209,testability,simpl,simple,209,"> I could probably write some for sqlite . It would be grate! . As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:216,testability,test,test,216,"> I could probably write some for sqlite . It would be grate! . As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:176,usability,support,supported,176,"> I could probably write some for sqlite . It would be grate! . As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:209,usability,simpl,simple,209,"> I could probably write some for sqlite . It would be grate! . As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:39,integrability,sub,submit,39,I am merging this PR. Could you please submit a new PR adding tests (likely best placed in roottest). Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:62,safety,test,tests,62,I am merging this PR. Could you please submit a new PR adding tests (likely best placed in roottest). Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:62,testability,test,tests,62,I am merging this PR. Could you please submit a new PR adding tests (likely best placed in roottest). Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:33,safety,test,test-case,33,Hi @cozzyd . You want to provide test-case for this code. Is it possible?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:33,testability,test,test-case,33,Hi @cozzyd . You want to provide test-case for this code. Is it possible?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3709:74,availability,error,error,74,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:68,deployability,build,build,68,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:160,deployability,build,builds,160,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:222,interoperability,platform,platform,222,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:74,performance,error,error,74,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:74,safety,error,error,74,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:74,usability,error,error,74,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:32,availability,reliab,reliably,32,Last days windows does not work reliably. It is exactly a case with that build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:73,deployability,build,build,73,Last days windows does not work reliably. It is exactly a case with that build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:18,reliability,doe,does,18,Last days windows does not work reliably. It is exactly a case with that build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:32,reliability,reliab,reliably,32,Last days windows does not work reliably. It is exactly a case with that build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:85,interoperability,platform,platforms,85,"thanks. (however I do find it hard to find in jenkins which PR is successful on what platforms, the first link (on this page) does not say and one has to check each platform by hand by following the links there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:165,interoperability,platform,platform,165,"thanks. (however I do find it hard to find in jenkins which PR is successful on what platforms, the first link (on this page) does not say and one has to check each platform by hand by following the links there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3709:126,reliability,doe,does,126,"thanks. (however I do find it hard to find in jenkins which PR is successful on what platforms, the first link (on this page) does not say and one has to check each platform by hand by following the links there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3709
https://github.com/root-project/root/pull/3710:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3710
https://github.com/root-project/root/pull/3710:146,reliability,doe,does,146,"Fixed by Wim in [this](https://bitbucket.org/wlav/cpycppyy/commits/863de298182eceb1fcf89ecca55cefa693e43e9a) commit, let's check tomorrow what it does in detail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3710
https://github.com/root-project/root/pull/3710:6,usability,confirm,confirm,6,I can confirm that the fix by Wim solves our problems.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3710
https://github.com/root-project/root/pull/3711:55,safety,test,tested,55,"Changes are in CEF-related cmake file, which are never tested here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3711
https://github.com/root-project/root/pull/3711:55,testability,test,tested,55,"Changes are in CEF-related cmake file, which are never tested here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3711
https://github.com/root-project/root/pull/3712:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3712
https://github.com/root-project/root/pull/3713:11,deployability,build,build,11,@phsft-bot build with -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3713
https://github.com/root-project/root/pull/3714:6,availability,failur,failure,6,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:6,deployability,fail,failure,6,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:6,performance,failur,failure,6,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:6,reliability,fail,failure,6,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3715:9,availability,failur,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:9,deployability,fail,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:9,performance,failur,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:9,reliability,fail,failure,9,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3716:18,security,auth,author,18,Adding @gganis as author of `TStatistics`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3716
https://github.com/root-project/root/pull/3716:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3716
https://github.com/root-project/root/pull/3718:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:96,availability,state,state,96,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:192,availability,state,states,192,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:269,availability,state,states,269,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:96,integrability,state,state,96,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:192,integrability,state,states,192,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:269,integrability,state,states,269,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:72,security,expos,expose,72,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:253,usability,user,users,253,"What is the use case for this PR ? . I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. . This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:129,availability,state,state,129,I see now the Jira item ROOT-10059. The correct solution for this is to disable GetSeed() for TRandom3. If one wants to copy the state it is just enough to use the class copy constructor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:129,integrability,state,state,129,I see now the Jira item ROOT-10059. The correct solution for this is to disable GetSeed() for TRandom3. If one wants to copy the state it is just enough to use the class copy constructor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:0,energy efficiency,cool,cool,0,cool. I close this PR. Can you close the related jira item?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:8,usability,close,close,8,cool. I close this PR. Can you close the related jira item?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:31,usability,close,close,31,cool. I close this PR. Can you close the related jira item?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3719:0,availability,Failur,Failure,0,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:43,availability,avail,available,43,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:0,deployability,Fail,Failure,0,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:0,performance,Failur,Failure,0,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:0,reliability,Fail,Failure,0,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:43,reliability,availab,available,43,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:43,safety,avail,available,43,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3719:43,security,availab,available,43,Failure in PR is 'jiust' windows not being available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3719
https://github.com/root-project/root/pull/3720:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3720
https://github.com/root-project/root/pull/3720:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3720
https://github.com/root-project/root/pull/3720:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3720
https://github.com/root-project/root/pull/3721:4,availability,error,error,4,The error on macOS is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3721:4,performance,error,error,4,The error on macOS is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3721:4,safety,error,error,4,The error on macOS is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3721:4,usability,error,error,4,The error on macOS is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3723:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3723
https://github.com/root-project/root/pull/3724:4,availability,error,error,4,The error on Windows is not due to the changes done in this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3724
https://github.com/root-project/root/pull/3724:4,performance,error,error,4,The error on Windows is not due to the changes done in this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3724
https://github.com/root-project/root/pull/3724:4,safety,error,error,4,The error on Windows is not due to the changes done in this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3724
https://github.com/root-project/root/pull/3724:4,usability,error,error,4,The error on Windows is not due to the changes done in this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3724
https://github.com/root-project/root/pull/3726:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:9,usability,statu,status,9,checking status of CI https://github.com/root-project/root/pull/3751,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:0,availability,Failur,Failures,0,Failures are not related to to cherry-pick.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:0,deployability,Fail,Failures,0,Failures are not related to to cherry-pick.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:0,performance,Failur,Failures,0,Failures are not related to to cherry-pick.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:0,reliability,Fail,Failures,0,Failures are not related to to cherry-pick.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3728:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3729:22,usability,prefer,prefer,22,Thanks for the fix. I prefer to revert in #3733 and then reapply this fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3729
https://github.com/root-project/root/pull/3729:24,usability,prefer,prefer,24,> Thanks for the fix. I prefer to revert in #3733 and then reapply this fix. As you prefer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3729
https://github.com/root-project/root/pull/3729:84,usability,prefer,prefer,84,> Thanks for the fix. I prefer to revert in #3733 and then reapply this fix. As you prefer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3729
https://github.com/root-project/root/pull/3730:103,deployability,automat,automatically,103,We should turn it `Off` by default (to make people notice the deprecation); the testing machinery will automatically turn it `On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:80,safety,test,testing,80,We should turn it `Off` by default (to make people notice the deprecation); the testing machinery will automatically turn it `On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:80,testability,test,testing,80,We should turn it `Off` by default (to make people notice the deprecation); the testing machinery will automatically turn it `On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:103,testability,automat,automatically,103,We should turn it `Off` by default (to make people notice the deprecation); the testing machinery will automatically turn it `On`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:26,availability,avail,available,26,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:171,deployability,patch,patches,171,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:228,deployability,updat,update,228,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:26,reliability,availab,available,26,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:26,safety,avail,available,26,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:171,safety,patch,patches,171,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:228,safety,updat,update,228,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:26,security,availab,available,26,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:171,security,patch,patches,171,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:228,security,updat,update,228,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:88,testability,plan,planned,88,"Could we have this option available also in the next minor tag (6.16/x) if there is one planned before 6.18/00 ? If so, it would be better to set the default to ON in the patches, and keep OFF in master as you suggest. Should I update the branch with the changed default?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:11,deployability,build,build,11,@phsft-bot build with flags -Dvmc=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:11,deployability,build,build,11,@phsft-bot build just on windows10/default with flags -Dvmc=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:72,deployability,build,build,72,@ihrivnac Could you please also fork roottest? It's required for the PR build to work on Windows. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:35,deployability,build,build,35,"Dear @amadio,. Could you retry the build on windows? Thank you,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:11,deployability,build,build,11,@phsft-bot build just on windows10/default with flags -Dvmc=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:11,deployability,build,build,11,@phsft-bot build just on windows10/default with flags -Dvmc=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3732:12,availability,failur,failure,12,The windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3732
https://github.com/root-project/root/pull/3732:12,deployability,fail,failure,12,The windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3732
https://github.com/root-project/root/pull/3732:12,performance,failur,failure,12,The windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3732
https://github.com/root-project/root/pull/3732:12,reliability,fail,failure,12,The windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3732
https://github.com/root-project/root/pull/3735:11,deployability,build,build,11,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3735
https://github.com/root-project/root/pull/3735:30,performance,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3735
https://github.com/root-project/root/pull/3735:30,usability,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3735
https://github.com/root-project/root/pull/3737:11,deployability,build,build,11,@phsft-bot build with-flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:57,availability,state,state,57,"@linev BTW, FYI, in order to make it work in its current state, one need to install the code editor from OpenUI5...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:76,deployability,instal,install,76,"@linev BTW, FYI, in order to make it work in its current state, one need to install the code editor from OpenUI5...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:49,energy efficiency,current,current,49,"@linev BTW, FYI, in order to make it work in its current state, one need to install the code editor from OpenUI5...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:57,integrability,state,state,57,"@linev BTW, FYI, in order to make it work in its current state, one need to install the code editor from OpenUI5...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:224,integrability,repositor,repository,224,"You mean - I have to add it into openui5 package. In principle, it is easy, but probably we could postpone it for the moment when @amadio is back. Idea was to modify cmake files and place openui5 package outside of the ROOT repository. For now you could activate following line in the html file:. ```. openui5src: ""https://openui5.hana.ondemand.com/"". ```. It should be enough for the moment, I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:224,interoperability,repositor,repository,224,"You mean - I have to add it into openui5 package. In principle, it is easy, but probably we could postpone it for the moment when @amadio is back. Idea was to modify cmake files and place openui5 package outside of the ROOT repository. For now you could activate following line in the html file:. ```. openui5src: ""https://openui5.hana.ondemand.com/"". ```. It should be enough for the moment, I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:41,modifiability,pac,package,41,"You mean - I have to add it into openui5 package. In principle, it is easy, but probably we could postpone it for the moment when @amadio is back. Idea was to modify cmake files and place openui5 package outside of the ROOT repository. For now you could activate following line in the html file:. ```. openui5src: ""https://openui5.hana.ondemand.com/"". ```. It should be enough for the moment, I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:196,modifiability,pac,package,196,"You mean - I have to add it into openui5 package. In principle, it is easy, but probably we could postpone it for the moment when @amadio is back. Idea was to modify cmake files and place openui5 package outside of the ROOT repository. For now you could activate following line in the html file:. ```. openui5src: ""https://openui5.hana.ondemand.com/"". ```. It should be enough for the moment, I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3737:159,security,modif,modify,159,"You mean - I have to add it into openui5 package. In principle, it is easy, but probably we could postpone it for the moment when @amadio is back. Idea was to modify cmake files and place openui5 package outside of the ROOT repository. For now you could activate following line in the html file:. ```. openui5src: ""https://openui5.hana.ondemand.com/"". ```. It should be enough for the moment, I guess",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3737
https://github.com/root-project/root/pull/3744:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:17,reliability,RCa,RCanvas,17,"For the record, `RCanvas` provides an interactive WebGUI canvas for ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:38,usability,interact,interactive,38,"For the record, `RCanvas` provides an interactive WebGUI canvas for ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3745:17,usability,support,support,17,we don't want to support this use case then?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:10,performance,time,times,10,FIlling N times with the same value and N different weights is almost trivial. The issue is wether this makes sense or not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3746:19,safety,review,reviewing,19,thanks @pcanal for reviewing this change so promptly during a weekend!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:19,testability,review,reviewing,19,thanks @pcanal for reviewing this change so promptly during a weekend!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,deployability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,integrability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,interoperability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,modifiability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,reliability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,security,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:13,testability,integr,integrated,13,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:4,usability,feedback,feedback,4,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:21,availability,failur,failure,21,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:21,deployability,fail,failure,21,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:80,deployability,build,build,80,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:21,performance,failur,failure,21,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:21,reliability,fail,failure,21,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:50,safety,test,testDetails,50,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:66,safety,test,test,66,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:113,safety,test,test,113,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:50,testability,test,testDetails,50,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:66,testability,test,test,66,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:113,testability,test,test,113,@pcanal : isn't this failure http://cdash.cern.ch/testDetails.php?test=64373639&build=651127 telling us that the test actually never worked correctly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3747:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3749:414,deployability,depend,depend,414,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:414,integrability,depend,depend,414,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:43,modifiability,scenario,scenarios,43,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:335,modifiability,inherit,inherits,335,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:414,modifiability,depend,depend,414,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:486,reliability,doe,does,486,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:68,safety,test,tested,68,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:414,safety,depend,depend,414,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:68,testability,test,tested,68,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:414,testability,depend,depend,414,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:438,usability,support,supporting,438,"thanks for this! there are two very common scenarios that should be tested for ROOT-9736 to be considered solved:. * `Define(""derived"", [] { return Derived(); }).Define(""base"", [](Base &b) { return b; }, {""derived""})`. * `Define(""val"", [] (Base &b) { return b.val; }, {""derived""})` where ""derived"" is an object of type `Derived` which inherits from `Base` that is stored in a TTree. The second in particular might depend on `TTreeReader` supporting this use case, which I'm not sure it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:90,integrability,messag,messages,90,"Also: the issue is https://sft.its.cern.ch/jira/browse/ROOT-9736, not ROOT-9959 as commit messages and PR title imply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:90,interoperability,messag,messages,90,"Also: the issue is https://sft.its.cern.ch/jira/browse/ROOT-9736, not ROOT-9959 as commit messages and PR title imply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:104,performance,disk,disk,104,Hi @bluehood : thanks for the comment. I agree we need also the test considering the objects written on disk: it will arrive soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:64,safety,test,test,64,Hi @bluehood : thanks for the comment. I agree we need also the test considering the objects written on disk: it will arrive soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:64,testability,test,test,64,Hi @bluehood : thanks for the comment. I agree we need also the test considering the objects written on disk: it will arrive soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:105,modifiability,extens,extension,105,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:154,performance,disk,disk,154,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:22,safety,test,test,22,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:91,safety,prevent,prevents,91,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:91,security,preven,prevents,91,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:22,testability,test,test,22,while programming the test I stumbled ont he obvious: it is TTreeReader{Value/Array} which prevents this extension at the moment if the data is read from disk. Working on this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3750:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3750
https://github.com/root-project/root/pull/3750:46,performance,memor,memory,46,"@dpiparo, you seem to be missing a `#include <memory>`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3750
https://github.com/root-project/root/pull/3750:46,usability,memor,memory,46,"@dpiparo, you seem to be missing a `#include <memory>`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3750
https://github.com/root-project/root/pull/3752:13,availability,down,downside,13,@dpiparo The downside of entering the changes on github is that they disappear when you force-push.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3752
https://github.com/root-project/root/pull/3753:44,deployability,Releas,Release,44,"Something wrong with `ROOT-fedora29-python3-Release` platform, all others build completed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:74,deployability,build,build,74,"Something wrong with `ROOT-fedora29-python3-Release` platform, all others build completed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:53,interoperability,platform,platform,53,"Something wrong with `ROOT-fedora29-python3-Release` platform, all others build completed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:80,safety,compl,completed,80,"Something wrong with `ROOT-fedora29-python3-Release` platform, all others build completed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:80,security,compl,completed,80,"Something wrong with `ROOT-fedora29-python3-Release` platform, all others build completed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3755:54,deployability,build,building,54,"This is changes in JavaScript code, therefore none of building tools can find something",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:63,usability,tool,tools,63,"This is changes in JavaScript code, therefore none of building tools can find something",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3756:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -DCMAKE_CXX_STANDARD=14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON -DCMAKE_CXX_STANDARD=14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:57,deployability,build,build,57,@bellenot . I push second commit just to trigger Jenkins build. This is the only workaround I found to force building same PR after it fails on some platform,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:109,deployability,build,building,109,@bellenot . I push second commit just to trigger Jenkins build. This is the only workaround I found to force building same PR after it fails on some platform,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:135,deployability,fail,fails,135,@bellenot . I push second commit just to trigger Jenkins build. This is the only workaround I found to force building same PR after it fails on some platform,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:149,interoperability,platform,platform,149,@bellenot . I push second commit just to trigger Jenkins build. This is the only workaround I found to force building same PR after it fails on some platform,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:135,reliability,fail,fails,135,@bellenot . I push second commit just to trigger Jenkins build. This is the only workaround I found to force building same PR after it fails on some platform,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3756:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3757:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:18,availability,sli,slightly,18,We solved it in a slightly different way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:18,reliability,sli,slightly,18,We solved it in a slightly different way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3759:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:73,modifiability,interm,intermediate,73,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:62,safety,avoid,avoid,62,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:47,testability,simpl,simplify,47,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:47,usability,simpl,simplify,47,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -Droot7=ON -DCMAKE_CXX_STANDARD=14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:39,deployability,build,build,39,@phsft-bot just on ROOT-fedora31/noimt build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodule=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:39,deployability,build,build,39,@phsft-bot just on ROOT-fedora31/noimt build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodule=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:39,deployability,build,build,39,@phsft-bot just on ROOT-fedora31/noimt build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodule=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora31/noimt,mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodule=OFF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora31/noimt, mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodules=OFF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora31/noimt,mac1015/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora31/noimt with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora31/noimt with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora31/noimt with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:27,performance,perform,performance-,27,"@phsft-bot build just ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:27,usability,perform,performance-,27,"@phsft-bot build just ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:78,availability,failur,failures,78,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:78,deployability,fail,failures,78,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:16,performance,perform,performance-,16,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:78,performance,failur,failures,78,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:78,reliability,fail,failures,78,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:16,usability,perform,performance-,16,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:. ```. projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32. projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build. ```. are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:48,availability,failur,failure,48,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:48,deployability,fail,failure,48,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:79,deployability,Build,Building,79,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:48,performance,failur,failure,48,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:184,performance,time,timeout,184,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:48,reliability,fail,failure,48,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:184,safety,timeout,timeout,184,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:252,security,sign,signal,252,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:153,usability,Cancel,Cancelling,153,Re-running mac1015/cxx17 makes it work. i.e the failure . ```. 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o. 14:48:26 Cancelling nested steps due to timeout. 14:48:26 Could not connect to macphsft20 to send interrupt signal to process. ```. was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora32/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:13,deployability,build,build,13,. @phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build on ROOT-debian10-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On just on ROOT-ubuntu16/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:40,availability,failur,failures,40,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:40,deployability,fail,failures,40,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:40,performance,failur,failures,40,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:40,reliability,fail,failures,40,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:35,safety,test,test,35,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:35,testability,test,test,35,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On just on ROOT-ubuntu16/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on mac1014/python3 with flags -Dclingtest=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on mac11/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DBUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DBUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DBUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on ROOT-debian10-i386/cxx14, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on mac12/noimt,windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,"@phsft-bot build just on mac12/noimt, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodules=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on mac12arm/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:0,deployability,Continu,Continues,0,Continues on https://github.com/root-project/root/pull/14031,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3761:61,availability,error,errors,61,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3761:13,deployability,infrastructur,infrastructure,13,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3761:61,performance,error,errors,61,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3761:61,safety,error,errors,61,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3761:61,usability,error,errors,61,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3762:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:17,availability,error,error,17,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:71,availability,error,error,71,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:17,performance,error,error,17,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:71,performance,error,error,71,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:17,safety,error,error,17,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:24,safety,prevent,preventing,24,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:71,safety,error,error,71,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:24,security,preven,preventing,24,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:17,usability,error,error,17,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3762:71,usability,error,error,71,Both the windows error (preventing actual runs) and the fedora27/noimt error are git related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3762
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,availability,failur,failures,5,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,deployability,fail,failures,5,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,performance,failur,failures,5,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,reliability,fail,failures,5,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:0,safety,Test,Test,0,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:0,testability,Test,Test,0,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,deployability,fail,failing,5,"It's failing on nodes where I have not replaced ninja 1.9.0 by ninja-1.8.2 due to https://gitlab.kitware.com/cmake/cmake/issues/19222 Next is this one (macitois21)... Done, restarting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:5,reliability,fail,failing,5,"It's failing on nodes where I have not replaced ninja 1.9.0 by ninja-1.8.2 due to https://gitlab.kitware.com/cmake/cmake/issues/19222 Next is this one (macitois21)... Done, restarting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:10,availability,failur,failure,10,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:238,availability,ERROR,ERROR,238,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:564,availability,ERROR,ERROR,564,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:580,availability,Error,Error,580,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:10,deployability,fail,failure,10,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:89,deployability,build,build,89,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:131,deployability,build,build,131,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:269,deployability,build,build,269,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:311,deployability,build,build,311,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:317,deployability,build,build,317,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:359,deployability,build,build,359,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:401,deployability,build,build,401,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:407,deployability,build,build,407,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:460,deployability,build,build,460,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:502,deployability,build,build,502,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:590,deployability,build,build,590,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:632,deployability,build,build,632,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:649,deployability,modul,modules,649,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:816,deployability,build,build,816,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:683,integrability,messag,message,683,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:683,interoperability,messag,message,683,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:649,modifiability,modul,modules,649,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:10,performance,failur,failure,10,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:37,performance,I/O,I/O,37,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:238,performance,ERROR,ERROR,238,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:564,performance,ERROR,ERROR,564,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:580,performance,Error,Error,580,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:782,performance,I/O,I/O,782,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:10,reliability,fail,failure,10,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:67,safety,TEST,TEST,67,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:185,safety,TEST,TEST,185,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:208,safety,TEST,TEST,208,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:233,safety,TEST,TEST,233,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:238,safety,ERROR,ERROR,238,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:559,safety,TEST,TEST,559,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:564,safety,ERROR,ERROR,564,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:580,safety,Error,Error,580,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:649,safety,modul,modules,649,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:746,safety,safe,safely,746,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:67,testability,TEST,TEST,67,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:185,testability,TEST,TEST,185,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:208,testability,TEST,TEST,208,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:233,testability,TEST,TEST,233,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:559,testability,TEST,TEST,559,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:72,usability,COMMAND,COMMAND,72,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:238,usability,ERROR,ERROR,238,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:546,usability,Stop,Stop,546,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:564,usability,ERROR,ERROR,564,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:580,usability,Error,Error,580,"This last failure is related to Bulk I/O, not my changes:. ```. -- TEST COMMAND -- . cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts. /usr/bin/make utils. -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build. make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --. CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):. got exit code 2 but expected 0. ```. I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3764:11,deployability,build,build,11,@phsft-bot build with flags -Dall=ON -Dalien=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:11,deployability,build,build,11,@phsft-bot build with flags -Dall=ON -Dalien=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -Dall=ON -Dalien=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -Dall=ON -Dalien=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:31,safety,review,review,31,@Axel-Naumann Could you please review and merge if appropriate? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:31,testability,review,review,31,@Axel-Naumann Could you please review and merge if appropriate? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3765:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:229,deployability,fail,fail,229,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:324,energy efficiency,load,load,324,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:371,energy efficiency,reduc,reduce,371,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:109,interoperability,semant,semantics,109,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:537,interoperability,semant,semantics,537,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:30,modifiability,scenario,scenario,30,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:126,performance,Cach,Cache,126,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:295,performance,time,time,295,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:324,performance,load,load,324,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:420,performance,improve perform,improve performance,420,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:0,reliability,Doe,Does,0,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:229,reliability,fail,fail,229,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:16,safety,test,test,16,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:261,safety,detect,detected,261,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:261,security,detect,detected,261,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:16,testability,test,test,16,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:428,usability,perform,performance,428,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:577,usability,close,close,577,"Does RDF have a test for this scenario? I thought about that and I am not really sure if that'd work. If the semantics of the Cache/Snapshot suppose resolution of missing entities while running the produced code then it'd indeed fail. I can imagine this can be detected at the string generation time and we could explicitly load the relevant library beforehand. This can reduce the implicitness of how things happen and improve performance for the 'regular' code (assuming your example is exotic). Either way, if that's not the intended semantics I would be totally fine if we close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:86,safety,review,review,86,Let's close this PR for now. I do not have the bandwidth to construct a case from the review comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:86,testability,review,review,86,Let's close this PR for now. I do not have the bandwidth to construct a case from the review comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:6,usability,close,close,6,Let's close this PR for now. I do not have the bandwidth to construct a case from the review comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3767:273,security,sign,signature,273,"The new way to find the library for a class is:. 1) (as before) check the raw class name found from the name of the html file documenting a given class (this covers 95% of the cases). 2) (this is new) in the case of a templated class, look in the *.rootmap files the right signature of the class and find the corresponding library. This fixes the Rvec case mentioned in the Jira report. 3) (this is new) if nevertheless the library is not found the graph is not displayed. Previously a wrong graph was displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3767
https://github.com/root-project/root/pull/3767:126,usability,document,documenting,126,"The new way to find the library for a class is:. 1) (as before) check the raw class name found from the name of the html file documenting a given class (this covers 95% of the cases). 2) (this is new) in the case of a templated class, look in the *.rootmap files the right signature of the class and find the corresponding library. This fixes the Rvec case mentioned in the Jira report. 3) (this is new) if nevertheless the library is not found the graph is not displayed. Previously a wrong graph was displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3767
https://github.com/root-project/root/pull/3768:11,deployability,build,build,11,@phsft-bot build please now that the test has been fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3768
https://github.com/root-project/root/pull/3768:37,safety,test,test,37,@phsft-bot build please now that the test has been fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3768
https://github.com/root-project/root/pull/3768:37,testability,test,test,37,@phsft-bot build please now that the test has been fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3768
https://github.com/root-project/root/pull/3768:36,deployability,releas,release,36,"@dpiparo can we mention this in the release notes? IIRC we have a dedicated ""tutorials"" section.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3768
https://github.com/root-project/root/pull/3769:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:102,deployability,log,log,102,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:84,modifiability,exten,extend,84,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:102,safety,log,log,102,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:102,security,log,log,102,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:102,testability,log,log,102,> [tcling] Use the autoload raii autoload object in RegisterModule. NFC . Could you extend the commit log to explain why the change is NFC (despite some of the call being 'conditional' in the old code and not in the new code).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:11,availability,failur,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:98,availability,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:165,availability,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:216,availability,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:317,availability,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:402,availability,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:530,availability,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:591,availability,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:707,availability,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:789,availability,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:967,availability,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1053,availability,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:11,deployability,fail,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:36,deployability,infrastructur,infrastructure,36,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:255,deployability,build,build,255,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:475,deployability,build,build,475,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:640,deployability,build,build,640,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:859,deployability,build,build,859,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:279,energy efficiency,core,core,279,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:499,energy efficiency,core,core,499,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:664,energy efficiency,core,core,664,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:77,integrability,filter,filter,77,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:11,performance,failur,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:98,performance,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:165,performance,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:216,performance,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:317,performance,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:402,performance,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:530,performance,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:591,performance,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:707,performance,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:789,performance,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:967,performance,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1053,performance,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:11,reliability,fail,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:391,reliability,diagno,diagnostic-error,391,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:580,reliability,diagno,diagnostic-error,580,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:778,reliability,diagno,diagnostic-error,778,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1042,reliability,diagno,diagnostic-error,1042,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:98,safety,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:165,safety,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:216,safety,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:317,safety,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:402,safety,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:530,safety,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:591,safety,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:707,safety,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:789,safety,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:967,safety,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1053,safety,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:391,testability,diagno,diagnostic-error,391,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:580,testability,diagno,diagnostic-error,580,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:778,testability,diagno,diagnostic-error,778,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1042,testability,diagno,diagnostic-error,1042,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:98,usability,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:165,usability,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:216,usability,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:317,usability,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:402,usability,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:530,usability,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:591,usability,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:707,usability,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:789,usability,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:904,usability,tool,tools,904,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:967,usability,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:1053,usability,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:18,interoperability,format,format,18,Most of the clang-format recommendation should be followed (only visible mistake from clang-format part is the alignment of the method name in the header file -- it looks like this PR does not have any such change).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:92,interoperability,format,format,92,Most of the clang-format recommendation should be followed (only visible mistake from clang-format part is the alignment of the method name in the header file -- it looks like this PR does not have any such change).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:184,reliability,doe,does,184,Most of the clang-format recommendation should be followed (only visible mistake from clang-format part is the alignment of the method name in the header file -- it looks like this PR does not have any such change).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3770:22,availability,failur,failures,22,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:22,deployability,fail,failures,22,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:54,integrability,messag,messages,54,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:170,integrability,messag,message,170,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:54,interoperability,messag,messages,54,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:170,interoperability,messag,message,170,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:204,interoperability,prox,proxy,204,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:22,performance,failur,failures,22,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:22,reliability,fail,failures,22,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:237,reliability,doe,does,237,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3770:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3770
https://github.com/root-project/root/pull/3771:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3771
https://github.com/root-project/root/pull/3772:223,availability,state,state,223,"Hi Axel,. I right now merged RFitPanel and RFitPanel6 together - now RFitPanel should be able to work with both kind of histograms (ROOT7 part is still dummy). I need few hours to submit latest code - at least it will be a state with classes names we expect in release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:261,deployability,releas,release,261,"Hi Axel,. I right now merged RFitPanel and RFitPanel6 together - now RFitPanel should be able to work with both kind of histograms (ROOT7 part is still dummy). I need few hours to submit latest code - at least it will be a state with classes names we expect in release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:180,integrability,sub,submit,180,"Hi Axel,. I right now merged RFitPanel and RFitPanel6 together - now RFitPanel should be able to work with both kind of histograms (ROOT7 part is still dummy). I need few hours to submit latest code - at least it will be a state with classes names we expect in release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:223,integrability,state,state,223,"Hi Axel,. I right now merged RFitPanel and RFitPanel6 together - now RFitPanel should be able to work with both kind of histograms (ROOT7 part is still dummy). I need few hours to submit latest code - at least it will be a state with classes names we expect in release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:76,deployability,continu,continue,76,@Axel-Naumann . Once all checks are through - you can merge this PR. I will continue in other branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3773:131,deployability,contain,contain,131,fantastic. Maybe we can go for a subcategory or add Keras in the names? If not the name will not be clear about what the tutorials contain perhaps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3773:33,integrability,sub,subcategory,33,fantastic. Maybe we can go for a subcategory or add Keras in the names? If not the name will not be clear about what the tutorials contain perhaps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3773:100,usability,clear,clear,100,fantastic. Maybe we can go for a subcategory or add Keras in the names? If not the name will not be clear about what the tutorials contain perhaps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3773:0,usability,Confirm,Confirmed,0,Confirmed to be working locally. Merge away.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3774:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,availability,failur,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:98,availability,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:165,availability,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:216,availability,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:317,availability,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:402,availability,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:530,availability,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:591,availability,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:707,availability,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:789,availability,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:967,availability,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1053,availability,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,deployability,fail,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:36,deployability,infrastructur,infrastructure,36,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:255,deployability,build,build,255,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:475,deployability,build,build,475,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:640,deployability,build,build,640,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:859,deployability,build,build,859,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:279,energy efficiency,core,core,279,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:499,energy efficiency,core,core,499,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:664,energy efficiency,core,core,664,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:77,integrability,filter,filter,77,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,performance,failur,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:98,performance,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:165,performance,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:216,performance,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:317,performance,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:402,performance,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:530,performance,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:591,performance,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:707,performance,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:789,performance,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:967,performance,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1053,performance,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:11,reliability,fail,failure,11,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:391,reliability,diagno,diagnostic-error,391,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:580,reliability,diagno,diagnostic-error,580,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:778,reliability,diagno,diagnostic-error,778,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1042,reliability,diagno,diagnostic-error,1042,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:98,safety,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:165,safety,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:216,safety,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:317,safety,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:402,safety,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:530,safety,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:591,safety,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:707,safety,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:789,safety,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:967,safety,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1053,safety,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:391,testability,diagno,diagnostic-error,391,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:580,testability,diagno,diagnostic-error,580,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:778,testability,diagno,diagnostic-error,778,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1042,testability,diagno,diagnostic-error,1042,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:98,usability,error,errors,98,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:165,usability,error,errors,165,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:216,usability,error,error,216,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:317,usability,error,error,317,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:402,usability,error,error,402,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:530,usability,error,error,530,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:591,usability,error,error,591,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:707,usability,error,error,707,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:789,usability,error,error,789,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:904,usability,tool,tools,904,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:967,usability,error,error,967,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:1053,usability,error,error,1053,"the travis failure are pre-existing infrastructure issues;. ```. Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. Found compiler error(s). +RESULT_OUTPUT='/home/travis/build/root-project/root/core/base/src/TApplication.cxx:47:10: error: '\''TApplicationCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""TApplicationCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/core/base/src/TROOT.cxx:73:10: error: '\''RGitCommit.h'\'' file not found [clang-diagnostic-error]. #include ""RGitCommit.h"". ^. /home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:18:10: error: '\''rootclingCommandLineOptionsHelp.h'\'' file not found [clang-diagnostic-error]. #include ""rootclingCommandLineOptionsHelp.h"". ^. /home/travis/build/root-project/root/interpreter/llvm/src/tools/clang/include/clang/Basic/AttrSubjectMatchRules.h:22:10: error: '\''clang/Basic/AttrSubMatchRulesList.inc'\'' file not found [clang-diagnostic-error]. #include ""clang/Basic/AttrSubMatchRulesList.inc"". ^'. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:18,interoperability,format,format,18,Most of the clang-format recommendation should be followed (only visible mistake from clang-format part is the alignment of the method name in the header file).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:92,interoperability,format,format,92,Most of the clang-format recommendation should be followed (only visible mistake from clang-format part is the alignment of the method name in the header file).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3775:132,deployability,version,versions,132,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:218,deployability,build,build,218,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:132,integrability,version,versions,132,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:132,modifiability,version,versions,132,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:99,reliability,pra,pragmas,99,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:260,safety,test,test,260,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:375,safety,test,test,375,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:380,safety,test,testRooChebychev,380,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:469,safety,test,tested,469,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:260,testability,test,test,260,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:375,testability,test,test,375,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:380,testability,test,testRooChebychev,380,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:469,testability,test,tested,469,"Hey @manuelschiller,. that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. You might have tested locally, so including that would also be a good option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:140,deployability,version,versions,140,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:226,deployability,build,build,226,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:671,energy efficiency,model,model,671,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:140,integrability,version,versions,140,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:580,integrability,messag,message,580,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:580,interoperability,messag,message,580,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:140,modifiability,version,versions,140,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:107,reliability,pra,pragmas,107,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:716,reliability,doe,does,716,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:854,reliability,pra,pragmas,854,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:1007,reliability,pra,pragmas,1007,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:274,safety,test,test,274,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:389,safety,test,test,389,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:394,safety,test,testRooChebychev,394,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:485,safety,test,tested,485,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:602,safety,test,tested,602,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:671,security,model,model,671,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:274,testability,test,test,274,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:389,testability,test,test,389,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:394,testability,test,testRooChebychev,394,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:485,testability,test,tested,485,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:602,testability,test,tested,602,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:872,usability,help,help,872,"> Hey @manuelschiller,. > . > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it. > . > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other. > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:125,energy efficiency,model,model,125,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:34,integrability,messag,message,34,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:34,interoperability,messag,message,34,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:170,reliability,doe,does,170,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:56,safety,test,tested,56,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:125,security,model,model,125,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:56,testability,test,tested,56,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough? I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:179,deployability,build,build,179,"> I took the liberty to get the member names in line with the RooFit conventions. I also added tags to typeset the formulas as latex. > . > Currently, there are problems with the build system, so we will have to wait a bit for the final test. Thanks - and my apologies about the member names - I should have done that from the start, but it's hard to act against one's reflexes. Please let me know if there's anything else I should be doing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:140,energy efficiency,Current,Currently,140,"> I took the liberty to get the member names in line with the RooFit conventions. I also added tags to typeset the formulas as latex. > . > Currently, there are problems with the build system, so we will have to wait a bit for the final test. Thanks - and my apologies about the member names - I should have done that from the start, but it's hard to act against one's reflexes. Please let me know if there's anything else I should be doing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:237,safety,test,test,237,"> I took the liberty to get the member names in line with the RooFit conventions. I also added tags to typeset the formulas as latex. > . > Currently, there are problems with the build system, so we will have to wait a bit for the final test. Thanks - and my apologies about the member names - I should have done that from the start, but it's hard to act against one's reflexes. Please let me know if there's anything else I should be doing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:237,testability,test,test,237,"> I took the liberty to get the member names in line with the RooFit conventions. I also added tags to typeset the formulas as latex. > . > Currently, there are problems with the build system, so we will have to wait a bit for the final test. Thanks - and my apologies about the member names - I should have done that from the start, but it's hard to act against one's reflexes. Please let me know if there's anything else I should be doing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:39,integrability,messag,message,39,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:39,interoperability,messag,message,39,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:377,interoperability,architectur,architecture,377,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:75,modifiability,Exten,Extend,75,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:176,modifiability,scal,scalable,176,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:176,performance,scalab,scalable,176,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:279,performance,time,time,279,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:349,usability,support,supported,349,"Suggest to squash on merge. The commit message could look like:. ```. [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation. based on the recursive definition of the polynomials is used. The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler. Otherwise, the code falls back to normal floating point arithmetic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3776:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:80,deployability,fail,fails,80,"@manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:80,reliability,fail,fails,80,"@manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:82,deployability,fail,fails,82,"> @manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks! @bellenot Sorry for the inconvenience - I did not realised I had to fork roottest, too. It's done now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:82,reliability,fail,fails,82,"> @manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks! @bellenot Sorry for the inconvenience - I did not realised I had to fork roottest, too. It's done now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:84,deployability,fail,fails,84,"> > @manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks! > . > @bellenot Sorry for the inconvenience - I did not realised I had to fork roottest, too. It's done now. @manuelschiller No problem, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:84,reliability,fail,fails,84,"> > @manuelschiller please fork also roottest in your github repo, otherwise the PR fails on Windows (it got stuck). Thanks! > . > @bellenot Sorry for the inconvenience - I did not realised I had to fork roottest, too. It's done now. @manuelschiller No problem, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3778:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3778
https://github.com/root-project/root/pull/3779:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3779
https://github.com/root-project/root/pull/3779:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3779
https://github.com/root-project/root/pull/3780:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3780
https://github.com/root-project/root/pull/3781:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3781:107,safety,test,test,107,"@agheata : Is this a new feature? If yes, is it urgent for 6.18? Also: wouldn't it be nicer to also have a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3781:107,testability,test,test,107,"@agheata : Is this a new feature? If yes, is it urgent for 6.18? Also: wouldn't it be nicer to also have a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3783:119,energy efficiency,current,current,119,"HI @stwunsch yes, I would have a PyROOT section that includes everything that has been done on the PyROOT side for the current and experimental PyROOT (also the RDF-related stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3783
https://github.com/root-project/root/pull/3784:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3784
https://github.com/root-project/root/pull/3785:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3788:16,testability,regress,regression,16,it looks like a regression has been introduced.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:4,availability,failur,failure,4,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:135,availability,error,error,135,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:4,deployability,fail,failure,4,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:45,deployability,build,build,45,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:79,deployability,build,build,79,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:249,deployability,build,build,249,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:283,deployability,build,build,283,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:289,deployability,build,build,289,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:235,interoperability,specif,specified,235,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:4,performance,failur,failure,4,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:135,performance,error,error,135,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:4,reliability,fail,failure,4,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:105,safety,test,test,105,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:135,safety,error,error,135,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:310,safety,test,test,310,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:105,testability,test,test,105,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:310,testability,test,test,310,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:135,usability,error,error,135,The failure is not related. ```. 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:42,integrability,messag,message,42,"When reverting, please enhance the commit message with the reason for the reversions. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3788:42,interoperability,messag,message,42,"When reverting, please enhance the commit message with the reason for the reversions. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3789:13,usability,support,support,13,"@bluehood, I support all of your comments. And hey, :tada: it works!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3795:0,availability,Failur,Failure,0,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:0,deployability,Fail,Failure,0,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:34,deployability,patch,patch,34,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:0,performance,Failur,Failure,0,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:0,reliability,Fail,Failure,0,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:34,safety,patch,patch,34,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:72,safety,test,test,72,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:34,security,patch,patch,34,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:72,testability,test,test,72,Failure has nothing todo with the patch - qt5web part never compiled on test machines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3798:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3801:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3802:28,interoperability,format,format,28,Thanks! Could you apply the format fixes from https://travis-ci.org/root-project/root/jobs/531490164 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3803:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3803
https://github.com/root-project/root/pull/3807:64,deployability,configurat,configuration,64,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:105,deployability,fail,fails,105,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:190,deployability,version,versions,190,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:208,deployability,instal,installed,208,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:276,deployability,build,build,276,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:287,deployability,fail,fails,287,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:300,deployability,API,API,300,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:334,deployability,patch,patches,334,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:379,deployability,log,log,379,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:64,integrability,configur,configuration,64,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:190,integrability,version,versions,190,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:300,integrability,API,API,300,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:300,interoperability,API,API,300,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:304,interoperability,incompatib,incompatibilities,304,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:64,modifiability,configur,configuration,64,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:190,modifiability,version,versions,190,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:179,performance,concurren,concurrent,179,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:105,reliability,fail,fails,105,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:287,reliability,fail,fails,287,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:24,safety,test,tested,24,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:334,safety,patch,patches,334,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:379,safety,log,log,379,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:64,security,configur,configuration,64,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:334,security,patch,patches,334,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:379,security,log,log,379,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:24,testability,test,tested,24,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:379,testability,log,log,379,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3811:13,safety,test,test,13,Can we get a test in cling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:13,testability,test,test,13,Can we get a test in cling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3814:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3814
https://github.com/root-project/root/pull/3814:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3814
https://github.com/root-project/root/pull/3814:24,deployability,infrastructur,infrastructure,24,The windows issue is an infrastructure problem. The cxx17 problem is solved by https://github.com/root-project/root/pull/3861,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3814
https://github.com/root-project/root/pull/3815:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:42,deployability,version,version,42,"@vepadulano can you increase the ClassDef version? This is necessary since you added two data members. In addition, I would initialise fMin and fMax with `std::numeric_limits<double>::max()` and `std::numeric_limits<int>::min()` respectively.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:42,integrability,version,version,42,"@vepadulano can you increase the ClassDef version? This is necessary since you added two data members. In addition, I would initialise fMin and fMax with `std::numeric_limits<double>::max()` and `std::numeric_limits<int>::min()` respectively.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:42,modifiability,version,version,42,"@vepadulano can you increase the ClassDef version? This is necessary since you added two data members. In addition, I would initialise fMin and fMax with `std::numeric_limits<double>::max()` and `std::numeric_limits<int>::min()` respectively.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:55,availability,operat,operations,55,"@Axel-Naumann this pr makes for a nice addition to the operations supported by distributed RDataFrame, but it's not urgent.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:79,interoperability,distribut,distributed,79,"@Axel-Naumann this pr makes for a nice addition to the operations supported by distributed RDataFrame, but it's not urgent.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:66,usability,support,supported,66,"@Axel-Naumann this pr makes for a nice addition to the operations supported by distributed RDataFrame, but it's not urgent.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3821:49,reliability,doe,does,49,"> That seems strange. RForest has no headers? It does, but they are all in `v7/inc`. Now they moved the `LinkDef.h` file into `inc/`, which works around the issue, but we still need to fix this. I think it should be possible to have headers in `include/` rather than `inc/`, or just in `v7/inc/`, like it was the case for `RForest`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:174,modifiability,pac,package,174,"> have headers in include/ rather than inc/. I don't understand the rationale for `include/`. For `inc/` the rationale is ""that's where ROOT has its headers"". But what if my package has them in `myPackage/`? And given that, why would `ROOT_STANDARD_PACKAGE` then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:390,modifiability,pac,package,390,"> have headers in include/ rather than inc/. I don't understand the rationale for `include/`. For `inc/` the rationale is ""that's where ROOT has its headers"". But what if my package has them in `myPackage/`? And given that, why would `ROOT_STANDARD_PACKAGE` then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:369,reliability,doe,doesn,369,"> have headers in include/ rather than inc/. I don't understand the rationale for `include/`. For `inc/` the rationale is ""that's where ROOT has its headers"". But what if my package has them in `myPackage/`? And given that, why would `ROOT_STANDARD_PACKAGE` then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:53,testability,understand,understand,53,"> have headers in include/ rather than inc/. I don't understand the rationale for `include/`. For `inc/` the rationale is ""that's where ROOT has its headers"". But what if my package has them in `myPackage/`? And given that, why would `ROOT_STANDARD_PACKAGE` then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:214,modifiability,pac,package,214,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:530,modifiability,pac,package,530,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:509,reliability,doe,doesn,509,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:789,reliability,pra,practice,789,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:10,testability,understand,understand,10,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:69,usability,user,users,69,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:675,usability,user,users,675,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:766,usability,user,users,766,"> I don't understand the rationale for include/. That's for external users calling `ROOT_GENERATE_DICTIONARY()`, for example, or `ROOT_INSTALL_HEADERS()`, or something that calls one of these two. > But what if my package has them in myPackage/? Then you have to pass `myPackage/` when calling the macros (e.g. `ROOT_INSTALL_HEADERS(myPackage/)`). > And given that, why would ROOT_STANDARD_PACKAGE then be the right function to use? Shouldn't that be tailored just for ROOT, and work only for ROOT, and if it doesn't work for ""my package"" then people should use the function that generates dictionary and use plain CMake for the rest? The reality is that we exported this to users, and they can and do use it. Ideally we should keep macros for ROOT and for external users separate, but in practice now it's too late.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:40,modifiability,concern,concerns,40,I don't see how your reply addresses my concerns.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:40,testability,concern,concerns,40,I don't see how your reply addresses my concerns.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:85,usability,user,users,85,"...most of which is ROOT itself. OK, so even if we assume that this macro is used by users, why would we want to also search `include/` if we didn't do it before? Why not leave it untouched if it works for ROOT - and seemingly also for those users that decided to use it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:242,usability,user,users,242,"...most of which is ROOT itself. OK, so even if we assume that this macro is used by users, why would we want to also search `include/` if we didn't do it before? Why not leave it untouched if it works for ROOT - and seemingly also for those users that decided to use it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:630,deployability,fail,fails,630,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:716,energy efficiency,core,core,716,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:750,energy efficiency,core,core,750,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:766,energy efficiency,core,core,766,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:630,reliability,fail,fails,630,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:185,usability,user,users,185,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:299,usability,user,users,299,"> ...most of which is ROOT itself. most ≠ all. If you click through the next pages, you'll see many examples that are not in ROOT itself. > even if we assume that this macro is used by users, why would we want to also search include/ if we didn't do it before? We do not assume, it *is* used by our users. I didn't change it to search in `include/`, just to not add `inc/` and `v7/inc` if they don't exist. However, if headers are only in `include/`, checking for headers only in `inc/` and `v7/inc/` will come up empty, therefore we cannot check that the list is not empty. That's why I removed the check in the other commit. It fails even in ROOT without that, because `ROOT_GENERATE_DICTIONARY()` is called from `core/CMakeLists.txt` and neither `core/inc/` nor `core/v7/inc/` exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:41,availability,down,down,41,"Asking to build again, since Jenkins was down during last build and got stuck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:10,deployability,build,build,10,"Asking to build again, since Jenkins was down during last build and got stuck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:58,deployability,build,build,58,"Asking to build again, since Jenkins was down during last build and got stuck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:0,availability,Error,Errors,0,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:212,deployability,build,build,212,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:316,deployability,build,build,316,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:254,modifiability,pac,package,254,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:358,modifiability,pac,package,358,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:0,performance,Error,Errors,0,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:0,safety,Error,Errors,0,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:125,safety,test,testing,125,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:224,safety,test,testReport,224,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:328,safety,test,testReport,328,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:125,testability,test,testing,125,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:224,testability,test,testReport,224,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:328,testability,test,testReport,328,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:0,usability,Error,Errors,0,"Errors are about `std::auto_ptr`, so not a problem of this PR. Please merge when you are ready. Note that after this, we are testing creation of the tarballs:. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59420/testReport/(root)/projectroot/package/. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59419/testReport/(root)/projectroot/package/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3821:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3821
https://github.com/root-project/root/pull/3826:12,availability,failur,failures,12,I think the failures are unrelated... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3826:12,deployability,fail,failures,12,I think the failures are unrelated... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3826:12,performance,failur,failures,12,I think the failures are unrelated... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3826:12,reliability,fail,failures,12,I think the failures are unrelated... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3827:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3829:78,availability,sli,slicing,78,"Since the derived class did not have data member, what was the 'problem' with slicing (or did mean a form of type erasure)? As is the new code is 'type-unsafe' as there is no way for the user to even record the type in the RFieldValue ... or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:78,reliability,sli,slicing,78,"Since the derived class did not have data member, what was the 'problem' with slicing (or did mean a form of type erasure)? As is the new code is 'type-unsafe' as there is no way for the user to even record the type in the RFieldValue ... or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:152,safety,unsaf,unsafe,152,"Since the derived class did not have data member, what was the 'problem' with slicing (or did mean a form of type erasure)? As is the new code is 'type-unsafe' as there is no way for the user to even record the type in the RFieldValue ... or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:187,usability,user,user,187,"Since the derived class did not have data member, what was the 'problem' with slicing (or did mean a form of type erasure)? As is the new code is 'type-unsafe' as there is no way for the user to even record the type in the RFieldValue ... or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:73,energy efficiency,current,currently,73,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:170,integrability,abstract,abstraction,170,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:170,modifiability,abstract,abstraction,170,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:88,safety,unsaf,unsafe,88,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:191,safety,safe,safety,191,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:31,usability,user,user,31,it 'was' in the sense that the user 'got' a typed object (maybe via some currently type-unsafe method) and could from then on only use it for a single type. With the new abstraction the type-safety check now needs to be executed for every single call to RFieldValue::Get rather than 'just' for the 'grab the RFieldValue<type>',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:29,security,expos,exposed,29,"The ""typed object"" was never exposed to users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:40,usability,user,users,40,"The ""typed object"" was never exposed to users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3830:13,availability,failur,failure,13,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:13,deployability,fail,failure,13,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:13,performance,failur,failure,13,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:13,reliability,fail,failure,13,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:8,safety,test,test,8,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:8,testability,test,test,8,Are the test failure pre-existing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:27,deployability,build,builds,27,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:49,integrability,configur,configured,49,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:82,integrability,configur,configured,82,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:49,modifiability,configur,configured,49,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:82,modifiability,configur,configured,82,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:49,security,configur,configured,49,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3830:82,security,configur,configured,82,Yes but invisible (because builds intended to be configured with C++17 didn't get configured as C++17...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3830
https://github.com/root-project/root/pull/3831:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -DCMAKE_CXX_STANDARD=14.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:69,safety,test,testing,69,"I hope, after https://github.com/root-project/roottest/pull/325 also testing with c++17 will work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:69,testability,test,testing,69,"I hope, after https://github.com/root-project/roottest/pull/325 also testing with c++17 will work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:59,deployability,build,build,59,Not all nodes support C++14 and 17... (some use GCC 4.8 to build).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:14,usability,support,support,14,Not all nodes support C++14 and 17... (some use GCC 4.8 to build).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:81,deployability,fail,fails,81,"@amadio Seems to be, when nothing else specified, mac nodes try to use c++17 and fails with several roottest (deprecated auto_ptr)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:39,interoperability,specif,specified,39,"@amadio Seems to be, when nothing else specified, mac nodes try to use c++17 and fails with several roottest (deprecated auto_ptr)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:81,reliability,fail,fails,81,"@amadio Seems to be, when nothing else specified, mac nodes try to use c++17 and fails with several roottest (deprecated auto_ptr)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:71,availability,avail,available,71,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:36,deployability,build,build,36,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:85,interoperability,standard,standard,85,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:164,interoperability,platform,platforms,164,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:71,reliability,availab,available,71,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:71,safety,avail,available,71,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:231,safety,test,test,231,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:71,security,availab,available,71,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:137,testability,simpl,simply,137,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:231,testability,test,test,231,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:137,usability,simpl,simply,137,@amadio . As idea: . Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? . Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3831:29,interoperability,conflict,conflict,29,"@linev could you resolve the conflict, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3831
https://github.com/root-project/root/pull/3832:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:14,availability,failur,failures,14,mac1014/cxx17 failures are fixed by root-project/roottest#325,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:14,deployability,fail,failures,14,mac1014/cxx17 failures are fixed by root-project/roottest#325,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:14,performance,failur,failures,14,mac1014/cxx17 failures are fixed by root-project/roottest#325,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:14,reliability,fail,failures,14,mac1014/cxx17 failures are fixed by root-project/roottest#325,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3835:42,integrability,messag,messages,42,massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3835:42,interoperability,messag,messages,42,massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3835:44,integrability,messag,messages,44,"> massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English? Sure, I should have just modified them. . I'm sorry, I didn't expect the previous commits to be visible in the PR, that's why some of them were written in Italian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3835:44,interoperability,messag,messages,44,"> massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English? Sure, I should have just modified them. . I'm sorry, I didn't expect the previous commits to be visible in the PR, that's why some of them were written in Italian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3835:141,security,modif,modified,141,"> massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English? Sure, I should have just modified them. . I'm sorry, I didn't expect the previous commits to be visible in the PR, that's why some of them were written in Italian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3836:21,deployability,updat,update,21,Thanks for this nice update :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3836
https://github.com/root-project/root/pull/3836:21,safety,updat,update,21,Thanks for this nice update :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3836
https://github.com/root-project/root/pull/3836:21,security,updat,update,21,Thanks for this nice update :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3836
https://github.com/root-project/root/pull/3837:162,modifiability,deco,decoding,162,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:141,performance,perform,performed,141,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:101,reliability,doe,does,101,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:29,safety,test,testing,29,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:29,testability,test,testing,29,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:141,usability,perform,performed,141,@pcanal . I will add special testing into `roottest` once PR merged into master. Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3838:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:0,safety,Test,Tests,0,"Tests have been fixed, let's try again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:0,testability,Test,Tests,0,"Tests have been fixed, let's try again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:34,deployability,patch,patches,34,@amadio do you want this in v6.18-patches before we branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:34,safety,patch,patches,34,@amadio do you want this in v6.18-patches before we branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:34,security,patch,patches,34,@amadio do you want this in v6.18-patches before we branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:125,deployability,modul,module,125,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:221,deployability,build,build,221,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:31,modifiability,variab,variables,31,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:125,modifiability,modul,module,125,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:125,safety,modul,module,125,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:146,usability,prefer,prefer,146,"No, looking at the change, the variables `LZMA_*` need to be renamed to `LIBLZMA_*`, which are the ones defined by the CMake module. I would also prefer using the imported target if we are going to touch this part of the build system, as `FindLZMA.cmake` provides one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3839:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3839
https://github.com/root-project/root/pull/3840:100,availability,failur,failures,100,"- stressIOPlugins_xroot, gtest_tree_treeplayer_test_treeprocessormt are EOS hickup. - mac1014/cxx17 failures are fixed by https://github.com/root-project/roottest/pull/325.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3840
https://github.com/root-project/root/pull/3840:100,deployability,fail,failures,100,"- stressIOPlugins_xroot, gtest_tree_treeplayer_test_treeprocessormt are EOS hickup. - mac1014/cxx17 failures are fixed by https://github.com/root-project/roottest/pull/325.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3840
https://github.com/root-project/root/pull/3840:100,performance,failur,failures,100,"- stressIOPlugins_xroot, gtest_tree_treeplayer_test_treeprocessormt are EOS hickup. - mac1014/cxx17 failures are fixed by https://github.com/root-project/roottest/pull/325.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3840
https://github.com/root-project/root/pull/3840:100,reliability,fail,failures,100,"- stressIOPlugins_xroot, gtest_tree_treeplayer_test_treeprocessormt are EOS hickup. - mac1014/cxx17 failures are fixed by https://github.com/root-project/roottest/pull/325.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3840
https://github.com/root-project/root/pull/3842:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3842
https://github.com/root-project/root/pull/3843:0,availability,Failur,Failures,0,"Failures are unrelated, please feel free to merge, @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:0,deployability,Fail,Failures,0,"Failures are unrelated, please feel free to merge, @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:0,performance,Failur,Failures,0,"Failures are unrelated, please feel free to merge, @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:0,reliability,Fail,Failures,0,"Failures are unrelated, please feel free to merge, @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:56,deployability,build,build,56,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:175,deployability,updat,update,175,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:189,deployability,updat,update,189,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:466,deployability,build,build,466,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:561,deployability,instal,install,561,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:594,deployability,version,versions,594,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:637,deployability,instal,installation,637,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:594,integrability,version,versions,594,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:94,interoperability,bind,bindings,94,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:94,modifiability,bind,bindings,94,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:594,modifiability,version,versions,594,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:167,reliability,doe,doesn,167,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:175,safety,updat,update,175,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:189,safety,updat,update,189,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:175,security,updat,update,175,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:189,security,updat,update,189,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:381,usability,custom,custom,381,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:29,deployability,instal,install,29,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:62,deployability,version,versions,62,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:105,deployability,instal,installation,105,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:204,deployability,version,version,204,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:230,deployability,version,versions,230,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:62,integrability,version,versions,62,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:204,integrability,version,version,204,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:230,integrability,version,versions,230,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:62,modifiability,version,versions,62,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:204,modifiability,version,version,204,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:230,modifiability,version,versions,230,> This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter. Would it also make it easy to have one python version with several ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:40,deployability,version,version,40,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:63,deployability,version,version,63,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:137,deployability,version,versions,137,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:170,deployability,version,version,170,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:250,deployability,version,versions,250,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:280,deployability,version,versions,280,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:534,deployability,instal,installing,534,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:554,deployability,version,versions,554,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:40,integrability,version,version,40,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:63,integrability,version,version,63,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:137,integrability,version,versions,137,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:170,integrability,version,version,170,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:250,integrability,version,versions,250,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:280,integrability,version,versions,280,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:554,integrability,version,versions,554,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:40,modifiability,version,version,40,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:63,modifiability,version,version,63,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:137,modifiability,version,versions,137,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:170,modifiability,version,version,170,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:250,modifiability,version,versions,250,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:280,modifiability,version,versions,280,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:554,modifiability,version,versions,554,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:574,modifiability,pac,package,574,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:416,usability,user,users,416,"If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. If we use setup.py, then we can have multiple versions of Python with the same version of ROOT. However, I do not know of a way in which you can have multiple versions of ROOT and multiple versions of Python without requiring some sort of virtualenv or a setup script to set PYTHONPATH, which is a no go for me, or requiring users to `import ROOT-6.16` or similar in Python code, which is also a no go. Maybe someone with more knowlegde about installing multiple versions of a given package in Python can give some clues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:42,deployability,version,version,42,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:65,deployability,version,version,65,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:144,deployability,version,versions,144,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:42,integrability,version,version,42,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:65,integrability,version,version,65,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:144,integrability,version,versions,144,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:42,modifiability,version,version,42,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:65,modifiability,version,version,65,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:144,modifiability,version,versions,144,"> If we rely on PYTHONPATH, only one ROOT version and one Python version will work properly. Can I not redefine `PYTHONPATH` to handle multiple versions of python or ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,deployability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:166,deployability,version,versions,166,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:190,deployability,version,versions,190,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:284,deployability,instal,install,284,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:352,deployability,instal,installing,352,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:390,deployability,version,versions,390,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:424,deployability,version,versions,424,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:549,deployability,version,versions,549,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,integrability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:166,integrability,version,versions,166,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:190,integrability,version,versions,190,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:390,integrability,version,versions,390,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:424,integrability,version,versions,424,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:508,integrability,configur,configures,508,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:549,integrability,version,versions,549,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,modifiability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:139,modifiability,variab,variables,139,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:166,modifiability,version,versions,166,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:190,modifiability,version,versions,190,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:326,modifiability,pac,package,326,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:390,modifiability,version,versions,390,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:424,modifiability,version,versions,424,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:508,modifiability,configur,configures,508,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:530,modifiability,pac,packages,530,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:549,modifiability,version,versions,549,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:508,security,configur,configures,508,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:503,usability,user,user,503,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? Yes, we could handle everything just relying on environment variables (multiple python versions, multiple ROOT versions). I believe the point of @amadio is to move away from the `$PYTHONPATH` strategy and install PyROOT just like any other Python package. That would solve installing PyROOT for multiple Python versions. Regarding multiple ROOT versions, we could rely on systems like Conda to create environments where the user configures the set of packages and their versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:35,deployability,version,versions,35,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:101,deployability,continu,continue,101,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:141,deployability,version,versions,141,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:230,deployability,instal,installation,230,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:250,deployability,instal,install,250,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:269,deployability,instal,install,269,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:401,deployability,version,version,401,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:536,energy efficiency,load,load,536,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:35,integrability,version,versions,35,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:141,integrability,version,versions,141,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:401,integrability,version,version,401,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:35,modifiability,version,versions,35,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:141,modifiability,version,versions,141,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:261,modifiability,pac,package,261,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:401,modifiability,version,version,401,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:536,performance,load,load,536,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:487,safety,detect,detect,487,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:487,security,detect,detect,487,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:68,usability,user,users,68,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:113,usability,support,support,113,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:416,usability,help,helpful,416,"As discussed, having multiple ROOT versions is super common for our users. This means:. - we need to continue to support using multiple ROOT versions with python, also outside conda. - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts. - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices. It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,deployability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:162,deployability,fail,fail,162,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:239,deployability,version,version,239,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:271,deployability,continu,continue,271,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:311,deployability,version,versions,311,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:475,deployability,instal,install,475,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:812,deployability,instal,installation,812,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:881,deployability,instal,installation,881,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1027,deployability,instal,installation,1027,"o handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1057,deployability,instal,install,1057,"f python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the scri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1478,deployability,version,version,1478,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1728,deployability,instal,installed,1728,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:2301,deployability,build,builds,2301,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1158,energy efficiency,load,load,1158,"l fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,integrability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:239,integrability,version,version,239,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:311,integrability,version,versions,311,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1478,integrability,version,version,1478,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:565,interoperability,distribut,distributions,565,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:51,modifiability,version,versions,51,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:239,modifiability,version,version,239,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:311,modifiability,version,versions,311,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:951,modifiability,pac,package,951,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1478,modifiability,version,version,1478,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1158,performance,load,load,1158,"l fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1347,performance,time,time,1347,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:162,reliability,fail,fail,162,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1111,safety,detect,detect,1111,"3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Pl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:1111,security,detect,detect,1111,"3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Pl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:283,usability,support,support,283,"> Can I not redefine PYTHONPATH to handle multiple versions of python or ROOT? If you set `PYTHONPATH` for Python 3.x, and say `python2 -c 'import ROOT'` it will fail. That's what I mean when I say that by relying on `PYTHONPATH` only one version will work. > we need to continue to support using multiple ROOT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:2042,usability,stop,stop,2042,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:2137,usability,close,close,2137,"OT versions with python, also outside conda. That is always possible, but it requires setup scripts. I'm usually talking here about the situation in which you do `yum install root`, and it should work out of the box, without any extra setup. Same for other distributions. This is already the case in Fedora, but they have to go through hoops to make it work, like using alternatives for `libPyROOT.so` in `/etc/alternatives`. That's what I'd like to address. > we must not run setup.py as part of a ROOT installation. This makes it much harder to do the right thing during installation in order for things to work properly. PyROOT is a python package afterall, so what's the problem in using Python's native methods of installation as part of `make install`? > It would be great if import ROOT can auto-detect which libPython (python2 or python3) to load; that would take care of the multi-python case after source thisroot.sh. At the moment, `libPyROOT.so` can only work with either Python 2.x or 3.x, not both. We need to change compile-time checks into runtime checks to make the same library work with both Python 2.x and 3.x (there are many `#ifdef`s on the Python version, for example). Finally, `thisroot.sh` is totally evil and should be deprecated. It messes up the environment when sourcing it, by potentially removing things from the path that should not be removed. It also assumes things about how ROOT was installed, so if ROOT's libraries are not in `$ROOTSYS/lib` (e.g., if they are in `$ROOTSYS/lib64`, or `$ROOTSYS/root/lib` with `gnuinstall=ON`) the script won't work. It also uses a colon for separator in `CMAKE_PREFIX_PATH`, which is separated by semicolons, among other problems. My advice to people is to just stop using the script. Anyway, this is all a digression from this PR. Please merge it so I can close [ROOT-5998](https://sft.its.cern.ch/jira/browse/ROOT-5998), as after this, globbing is only used in places that do not matter for the purposes of incremental builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:261,deployability,continu,continue,261,"This is indeed going waaay out of the scope of this PR :-) Maybe we discuss this outside this PR? To summarize here, there are many assumptions, expectations and assertions in your reply that I do not share, so that cannot yet be the final answer. Again, let's continue outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:201,interoperability,share,share,201,"This is indeed going waaay out of the scope of this PR :-) Maybe we discuss this outside this PR? To summarize here, there are many assumptions, expectations and assertions in your reply that I do not share, so that cannot yet be the final answer. Again, let's continue outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:162,testability,assert,assertions,162,"This is indeed going waaay out of the scope of this PR :-) Maybe we discuss this outside this PR? To summarize here, there are many assumptions, expectations and assertions in your reply that I do not share, so that cannot yet be the final answer. Again, let's continue outside this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:293,deployability,releas,release,293,"Yes, perhaps having something in Jira for this is useful. I didn't find anything on a quick search. I know that the opinions on the topic diverge, so indeed it's best to discuss this in the appropriate channels. That said, can we merge this? It passed the checks, and is safe to merge for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:132,integrability,topic,topic,132,"Yes, perhaps having something in Jira for this is useful. I didn't find anything on a quick search. I know that the opinions on the topic diverge, so indeed it's best to discuss this in the appropriate channels. That said, can we merge this? It passed the checks, and is safe to merge for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:271,safety,safe,safe,271,"Yes, perhaps having something in Jira for this is useful. I didn't find anything on a quick search. I know that the opinions on the topic diverge, so indeed it's best to discuss this in the appropriate channels. That said, can we merge this? It passed the checks, and is safe to merge for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3844:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:36,interoperability,compatib,compatibility,36,Does this keep backward and forward compatibility of `TFormula`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:0,reliability,Doe,Does,0,Does this keep backward and forward compatibility of `TFormula`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:72,availability,sli,slight,72,"Yes, it actually does not change the on-file format for TFormula (but a slight file increase because of the 3 extra characters in the TFormula's StreamerInfo).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:45,interoperability,format,format,45,"Yes, it actually does not change the on-file format for TFormula (but a slight file increase because of the 3 extra characters in the TFormula's StreamerInfo).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:17,reliability,doe,does,17,"Yes, it actually does not change the on-file format for TFormula (but a slight file increase because of the 3 extra characters in the TFormula's StreamerInfo).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:72,reliability,sli,slight,72,"Yes, it actually does not change the on-file format for TFormula (but a slight file increase because of the 3 extra characters in the TFormula's StreamerInfo).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3845:89,energy efficiency,optim,optimizations,89,"@dpiparo I wouldn't discard the idea of SBO in general, we can reintroduce it (with full optimizations) as soon as the crash in ROOT-10079 is resolved. Or we can fix that crash rather than revert but as far as I understood that was not happening for 6.18.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:89,performance,optimiz,optimizations,89,"@dpiparo I wouldn't discard the idea of SBO in general, we can reintroduce it (with full optimizations) as soon as the crash in ROOT-10079 is resolved. Or we can fix that crash rather than revert but as far as I understood that was not happening for 6.18.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:16,usability,efficien,efficient,16,"yes. As long as efficient resizing and IO are supported, I am fine with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:46,usability,support,supported,46,"yes. As long as efficient resizing and IO are supported, I am fine with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3847:29,availability,error,errors,29,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:48,deployability,continu,continuous-integration,48,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,integrability,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,interoperability,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,modifiability,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:29,performance,error,errors,29,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,reliability,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:29,safety,error,errors,29,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,security,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:59,testability,integr,integration,59,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:29,usability,error,errors,29,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:26,deployability,patch,patches,26,Also merged into v6-18-00-patches as 9c9262bc434278cb8e46af0b66bbffce39815cff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:26,safety,patch,patches,26,Also merged into v6-18-00-patches as 9c9262bc434278cb8e46af0b66bbffce39815cff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:26,security,patch,patches,26,Also merged into v6-18-00-patches as 9c9262bc434278cb8e46af0b66bbffce39815cff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3849:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3849
https://github.com/root-project/root/pull/3850:11,deployability,build,build,11,"@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On. @Axel-Naumann could you take a look, I’d like to land it soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3854:11,deployability,build,build,11,@phsft-bot build with flags -Dpyroot_experimental=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:39,availability,failur,failures,39,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:39,deployability,fail,failures,39,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:39,performance,failur,failures,39,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:39,reliability,fail,failures,39,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:34,safety,test,test,34,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:34,testability,test,test,34,"Addressed the comment of @amadio, test failures in PyROOT experimental are unrelated. This is ready to be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3855:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3855
https://github.com/root-project/root/pull/3855:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3855
https://github.com/root-project/root/pull/3856:88,deployability,updat,updated,88,These once should be all for TMVA! @lmoneta and me had a closer look to the classes and updated the PR accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3856:88,safety,updat,updated,88,These once should be all for TMVA! @lmoneta and me had a closer look to the classes and updated the PR accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3856:88,security,updat,updated,88,These once should be all for TMVA! @lmoneta and me had a closer look to the classes and updated the PR accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3856:57,usability,close,closer,57,These once should be all for TMVA! @lmoneta and me had a closer look to the classes and updated the PR accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3857:92,availability,error,error,92,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:11,deployability,log,log,11,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:57,deployability,log,logs,57,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:92,performance,error,error,92,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:11,safety,log,log,11,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:57,safety,log,logs,57,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:92,safety,error,error,92,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:11,security,log,log,11,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:57,security,log,logs,57,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:11,testability,log,log,11,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:57,testability,log,logs,57,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3857:92,usability,error,error,92,"Funny, the log parser gets confused by one of the commit logs and believes to have found an error :-) This seems to be good to go; I'll merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3857
https://github.com/root-project/root/pull/3858:27,availability,error,errors,27,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:181,deployability,updat,updated,181,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:27,performance,error,errors,27,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:27,safety,error,errors,27,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:181,safety,updat,updated,181,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:181,security,updat,updated,181,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:171,testability,simpl,simply,171,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:27,usability,error,errors,27,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:171,usability,simpl,simply,171,roottest.python are actual errors (now). roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python. roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3859:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3859
https://github.com/root-project/root/pull/3861:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3861
https://github.com/root-project/root/pull/3863:73,testability,simpl,simplified,73,"after some changes, this should be fine. I also added a new tutorial and simplified `double32.C`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3863
https://github.com/root-project/root/pull/3863:73,usability,simpl,simplified,73,"after some changes, this should be fine. I also added a new tutorial and simplified `double32.C`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3863
https://github.com/root-project/root/pull/3863:11,deployability,build,build,11,@phsft-bot build please to see what happens with Win,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3863
https://github.com/root-project/root/pull/3863:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3863
https://github.com/root-project/root/pull/3864:26,deployability,patch,patches,26,Also merged into v6-16-00-patches as b9126f965f611194bd1afb9835bd76c7728fc7ff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:26,safety,patch,patches,26,Also merged into v6-16-00-patches as b9126f965f611194bd1afb9835bd76c7728fc7ff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:26,security,patch,patches,26,Also merged into v6-16-00-patches as b9126f965f611194bd1afb9835bd76c7728fc7ff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3865:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3866:75,integrability,messag,message,75,"I would like to suggest to drop the ""From Guilherme:"" part from the commit message (I don't like my name in it like that), and add a [`Suggested-by: `](https://git.wiki.kernel.org/index.php/CommitMessageConventions) tag instead, or just drop it entirely, it's just a minor change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:75,interoperability,messag,message,75,"I would like to suggest to drop the ""From Guilherme:"" part from the commit message (I don't like my name in it like that), and add a [`Suggested-by: `](https://git.wiki.kernel.org/index.php/CommitMessageConventions) tag instead, or just drop it entirely, it's just a minor change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:19,deployability,build,builds,19,"BTW, do any of the builds in Jenkins actually use the builtin xrootd? I guess yes, but just to make sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:54,deployability,patch,patch,54,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:54,safety,patch,patch,54,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:54,security,patch,patch,54,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:61,usability,Learn,Learned,61,"E.g. ubu16 uses it. I like to attribute who wrote the patch. Learned that from llvm, still like it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:216,integrability,messag,message,216,"You can attribute things without putting the name on the first line. I don't like my name being put like that, so please don't do it again. Let me write the commit, or put my name after the second line of the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:216,interoperability,messag,message,216,"You can attribute things without putting the name on the first line. I don't like my name being put like that, so please don't do it again. Let me write the commit, or put my name after the second line of the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3867:71,energy efficiency,green,green,71,"@Axel-Naumann I discussed the changes with @lmoneta . If the tests are green, this PR is ready to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3867:61,safety,test,tests,61,"@Axel-Naumann I discussed the changes with @lmoneta . If the tests are green, this PR is ready to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3867:61,testability,test,tests,61,"@Axel-Naumann I discussed the changes with @lmoneta . If the tests are green, this PR is ready to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3867:83,deployability,patch,patches,83,"Yes please v6.18. As it's multiple commits, could you create a PR against v6-18-00-patches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3867:83,safety,patch,patches,83,"Yes please v6.18. As it's multiple commits, could you create a PR against v6-18-00-patches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3867:83,security,patch,patches,83,"Yes please v6.18. As it's multiple commits, could you create a PR against v6-18-00-patches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3867
https://github.com/root-project/root/pull/3868:46,deployability,instal,installed,46,Looks like it worked for me due to the system-installed XRootD...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,deployability,version,version,25,I guess I will leave the version bump for later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,integrability,version,version,25,I guess I will leave the version bump for later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,modifiability,version,version,25,I guess I will leave the version bump for later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:11,deployability,build,building,11,Looks like building only the client is the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3869:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:123,reliability,doe,does,123,"We can either inspect the output or ask someone that knows (probably @lmoneta). Otherwise, silencing the warnings at least does not change behavior as you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:139,usability,behavi,behavior,139,"We can either inspect the output or ask someone that knows (probably @lmoneta). Otherwise, silencing the warnings at least does not change behavior as you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:80,integrability,buffer,buffer,80,@couet What is your opinion? Should we go through the `HistPainter` and fix the buffer sizes of the string formatting?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:107,interoperability,format,formatting,107,@couet What is your opinion? Should we go through the `HistPainter` and fix the buffer sizes of the string formatting?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:19,safety,test,tests,19,"Since there are no tests, it's quite risky ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:37,safety,risk,risky,37,"Since there are no tests, it's quite risky ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:37,security,risk,risky,37,"Since there are no tests, it's quite risky ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:19,testability,test,tests,19,"Since there are no tests, it's quite risky ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:30,integrability,buffer,buffers,30,@couet Do you plan to fix the buffers or shall we go with the suppression of the warnings via the compiler flag?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:14,testability,plan,plan,14,@couet Do you plan to fix the buffers or shall we go with the suppression of the warnings via the compiler flag?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:17,usability,close,closed,17,"Yes, this can be closed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3872:11,deployability,build,build,11,@phsft-bot build just on fedora30/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:11,deployability,build,build,11,@phsft-bot build just on fedora30,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:11,deployability,build,build,11,@phsft-bot build just on fedora30/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:0,deployability,Build,Building,0,"Building on fedora30 resulted in 50 warnings, but none were in roofit. Previously, a full CI build also passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:93,deployability,build,build,93,"Building on fedora30 resulted in 50 warnings, but none were in roofit. Previously, a full CI build also passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:115,safety,test,tests,115,"Building on fedora30 resulted in 50 warnings, but none were in roofit. Previously, a full CI build also passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:115,testability,test,tests,115,"Building on fedora30 resulted in 50 warnings, but none were in roofit. Previously, a full CI build also passed all tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:26,deployability,patch,patches,26,Also merged into v6-18-00-patches as b6fec4f440a6bb7b3b6cadc226da0e4bed0ae19b and 58c755f078ef36588a14629072d45d8ae8822ece,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:26,safety,patch,patches,26,Also merged into v6-18-00-patches as b6fec4f440a6bb7b3b6cadc226da0e4bed0ae19b and 58c755f078ef36588a14629072d45d8ae8822ece,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:26,security,patch,patches,26,Also merged into v6-18-00-patches as b6fec4f440a6bb7b3b6cadc226da0e4bed0ae19b and 58c755f078ef36588a14629072d45d8ae8822ece,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3873:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:10,availability,failur,failure,10,"Humm that failure is reproducible and AFAIK only exists in this PR. Could you have a look, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:10,deployability,fail,failure,10,"Humm that failure is reproducible and AFAIK only exists in this PR. Could you have a look, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:10,performance,failur,failure,10,"Humm that failure is reproducible and AFAIK only exists in this PR. Could you have a look, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:10,reliability,fail,failure,10,"Humm that failure is reproducible and AFAIK only exists in this PR. Could you have a look, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:12,usability,close,closed,12,Can this be closed now that https://github.com/root-project/root/pull/3889 is in?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:45,deployability,Depend,Depends,45,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:45,integrability,Depend,Depends,45,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:45,modifiability,Depend,Depends,45,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:45,safety,Depend,Depends,45,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:45,testability,Depend,Depends,45,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3876:63,deployability,Updat,Updating,63,"@linev great, thanks! Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:63,safety,Updat,Updating,63,"@linev great, thanks! Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:63,security,Updat,Updating,63,"@linev great, thanks! Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:43,deployability,Updat,Updating,43,"> Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it. PR is already submitted. It is https://github.com/root-project/roottest/pull/329",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:168,integrability,sub,submitted,168,"> Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it. PR is already submitted. It is https://github.com/root-project/roottest/pull/329",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:43,safety,Updat,Updating,43,"> Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it. PR is already submitted. It is https://github.com/root-project/roottest/pull/329",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3876:43,security,Updat,Updating,43,"> Could you add a PR for roottest, please? Updating the ref file should be enough. If you don't know how to do that (quickly) let me know and I'll do it. PR is already submitted. It is https://github.com/root-project/roottest/pull/329",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3876
https://github.com/root-project/root/pull/3878:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3878
https://github.com/root-project/root/pull/3880:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3880
https://github.com/root-project/root/pull/3881:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3881
https://github.com/root-project/root/pull/3882:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:26,deployability,patch,patches,26,Also merged into v6-18-00-patches as 49bc97ee21827b262352b43ff08f92d99e0e9e14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:26,safety,patch,patches,26,Also merged into v6-18-00-patches as 49bc97ee21827b262352b43ff08f92d99e0e9e14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:26,security,patch,patches,26,Also merged into v6-18-00-patches as 49bc97ee21827b262352b43ff08f92d99e0e9e14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3883:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3883
https://github.com/root-project/root/pull/3886:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3887:202,availability,operat,operators,202,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3887:194,deployability,log,logical,194,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3887:60,reliability,Doe,Does,60,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3887:194,safety,log,logical,194,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3887:194,security,log,logical,194,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3887:194,testability,log,logical,194,> The only thing is that stressGraphics has been changed. > Does it run properly after this change ? Yes it still works. All changes in stressGraphics and stressHistograms. were about mixing in logical operators bool and int types.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3887
https://github.com/root-project/root/pull/3889:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3889
https://github.com/root-project/root/pull/3890:4,availability,error,error,4,The error above is due to a problem in rootspi which I just fixed. Trying again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3890
https://github.com/root-project/root/pull/3890:4,performance,error,error,4,The error above is due to a problem in rootspi which I just fixed. Trying again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3890
https://github.com/root-project/root/pull/3890:4,safety,error,error,4,The error above is due to a problem in rootspi which I just fixed. Trying again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3890
https://github.com/root-project/root/pull/3890:4,usability,error,error,4,The error above is due to a problem in rootspi which I just fixed. Trying again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3890
https://github.com/root-project/root/pull/3890:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3890
https://github.com/root-project/root/pull/3891:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:107,availability,error,errors,107,Can you look at the result of clang-tidy and clang-tidy-modernize? On the surface they 'might' be relevant errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:107,performance,error,errors,107,Can you look at the result of clang-tidy and clang-tidy-modernize? On the surface they 'might' be relevant errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:107,safety,error,errors,107,Can you look at the result of clang-tidy and clang-tidy-modernize? On the surface they 'might' be relevant errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:107,usability,error,errors,107,Can you look at the result of clang-tidy and clang-tidy-modernize? On the surface they 'might' be relevant errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:13,availability,error,errors,13,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:92,availability,error,error,92,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:13,performance,error,errors,13,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:92,performance,error,error,92,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:13,safety,error,errors,13,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:92,safety,error,error,92,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:117,safety,valid,valid,117,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:13,usability,error,errors,13,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:92,usability,error,error,92,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:253,usability,person,person,253,"@pcanal, the errors from clang-tidy-modernize are in the source code of gtest. However, the error from clang-tidy is valid: it is from existing code which I moved and did not touch. I do not know how to fix it, I suspect @Axel-Naumann would be a better person to address this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:945,availability,Down,Downloading,945,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3044,availability,error,error,3044," -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3145,availability,error,errors,3145,"rming Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3364,availability,error,error,3364,"est found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3457,availability,error,errors,3457,"torials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3694,availability,error,error,3694,"ng done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3803,availability,error,errors,3803,"mance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4531,availability,error,error,4531,"nce-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4640,availability,error,errors,4640,"nce-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalDa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5208,availability,error,error,5208,"ctor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5329,availability,error,errors,5329,"REAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8036,availability,error,error,8036,"ize != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8157,availability,error,errors,8157,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10875,availability,error,errors,10875,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10942,availability,error,errors,10942,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:11000,availability,error,errors,11000,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:380,deployability,version,version,380,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:397,deployability,version,version,397,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:532,deployability,Build,Build,532,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:869,deployability,Build,Building,869,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:961,deployability,build,building,961,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:974,deployability,version,version,974,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1529,deployability,Build,Building,1529,uild Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1722,deployability,version,version,1722,"g for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1747,deployability,version,version,1747,"g for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1761,deployability,VERSION,VERSION,1761," Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2089,deployability,Fail,Failed,2089," builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function shoul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2184,deployability,Fail,Failed,2184,"tin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2263,deployability,Fail,Failed,2263,"t runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2344,deployability,Fail,Failed,2344,"is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2439,deployability,Fail,Failed,2439," x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2729,deployability,Build,Build,2729,".0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3161,deployability,releas,release,3161,"stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10550,deployability,continu,continues,10550,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5291,energy efficiency,core,core,5291,"called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8119,energy efficiency,core,core,8119,"te: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the conditio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:380,integrability,version,version,380,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:397,integrability,version,version,397,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:974,integrability,version,version,974,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1722,integrability,version,version,1722,"g for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1747,integrability,version,version,1747,"g for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1761,integrability,VERSION,VERSION,1761," Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2657,integrability,sub,subdirectories,2657,"/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2688,integrability,Configur,Configuring,2688," -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3154,integrability,buffer,buffer,3154,"t found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10854,integrability,filter,filter,10854,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:475,interoperability,Platform,Platform,475,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:500,interoperability,Architectur,Architecture,500,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1287,interoperability,share,shared,1287,"rmance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1334,interoperability,architectur,architecture,1334,"on algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1403,interoperability,bind,bindings,1403, -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2631,interoperability,architectur,architecture,2631," rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:380,modifiability,version,version,380,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:397,modifiability,version,version,397,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:974,modifiability,version,version,974,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1403,modifiability,bind,bindings,1403, -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1722,modifiability,version,version,1722,"g for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1747,modifiability,version,version,1747,"g for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1761,modifiability,VERSION,VERSION,1761," Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2688,modifiability,Configur,Configuring,2688," -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5265,modifiability,paramet,parameter,5265,"the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7903,modifiability,paramet,parameter,7903,"Buffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8093,modifiability,paramet,parameter,8093,"c/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10737,modifiability,paramet,parameter,10737,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:285,performance,perform,performance-test,285,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2011,performance,Performing Test,Performing Test,2011,"d support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2051,performance,Performing Test,Performing Test,2051,"n_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2100,performance,Performing Test,Performing Test,2100,"ltin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2143,performance,Performing Test,Performing Test,2143,"in_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2195,performance,Performing Test,Performing Test,2195,"exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2230,performance,Performing Test,Performing Test,2230,"mt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2274,performance,Performing Test,Performing Test,2274,"ules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2310,performance,Performing Test,Performing Test,2310,"- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2355,performance,Performing Test,Performing Test,2355,"ds disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2398,performance,Performing Test,Performing Test,2398,"dings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never rea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2769,performance,perform,performance-test,2769,"OOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2800,performance,perform,performance-test,2800," for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2986,performance,perform,performance-test,2986,"revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3044,performance,error,error,3044," -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3145,performance,error,errors,3145,"rming Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3182,performance,perform,performance-test,3182,". -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3305,performance,perform,performance-test,3305,"forming Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3364,performance,error,error,3364,"est found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3457,performance,error,errors,3457,"torials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3526,performance,perform,performance-test,3526,"r roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3635,performance,perform,performance-test,3635,". -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3694,performance,error,error,3694,"ng done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3803,performance,error,errors,3803,"mance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3866,performance,perform,performance-test,3866,"alyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3989,performance,perform,performance-test,3989,"-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4134,performance,perform,performance-test,4134,"as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4355,performance,perform,performance-test,4355," error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4472,performance,perform,performance-test,4472," EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4531,performance,error,error,4531,"nce-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4640,performance,error,errors,4640,"nce-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalDa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4695,performance,perform,performance-test,4695,"ll to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4819,performance,perform,performance-test,4819,"th, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5032,performance,perform,performance-test,5032,"188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+le",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5149,performance,perform,performance-test,5149,"ster/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false bran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5208,performance,error,error,5208,"ctor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5329,performance,error,errors,5329,"REAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5401,performance,perform,performance-test,5401,":12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5543,performance,perform,performance-test,5543,"al function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5659,performance,perform,performance-test,5659," O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5797,performance,perform,performance-test,5797,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5923,performance,perform,performance-test,5923,"' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6076,performance,perform,performance-test,6076,"98:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6216,performance,perform,performance-test,6216,"ter passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6349,performance,perform,performance-test,6349,"fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6470,performance,perform,performance-test,6470,"mFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6621,performance,perform,performance-test,6621,"f (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6766,performance,perform,performance-test,6766,"ffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6938,performance,perform,performance-test,6938,"ster/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7062,performance,perform,performance-test,7062,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7174,performance,perform,performance-test,7174,"<= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSee",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7326,performance,perform,performance-test,7326,"t) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWrite",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7484,performance,perform,performance-test,7484,"aster/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7630,performance,perform,performance-test,7630,"src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7788,performance,perform,performance-test,7788,"/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7977,performance,perform,performance-test,7977,"cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8036,performance,error,error,8036,"ize != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8157,performance,error,errors,8157,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8220,performance,perform,performance-test,8220,"16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8362,performance,perform,performance-test,8362,"le.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8478,performance,perform,performance-test,8478,"rformance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8616,performance,perform,performance-test,8616,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8742,performance,perform,performance-test,8742,"left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8895,performance,perform,performance-test,8895,"parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9035,performance,perform,performance-test,9035,"Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9168,performance,perform,performance-test,9168,"ockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9289,performance,perform,performance-test,9289,"mFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9440,performance,perform,performance-test,9440,"f (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /hom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9585,performance,perform,performance-test,9585,"ffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9757,performance,perform,performance-test,9757,"ster/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9881,performance,perform,performance-test,9881,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9993,performance,perform,performance-test,9993,"<= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10145,performance,perform,performance-test,10145,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10303,performance,perform,performance-test,10303,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10450,performance,perform,performance-test,10450,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10622,performance,perform,performance-test,10622,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10875,performance,error,errors,10875,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10942,performance,error,errors,10942,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:11000,performance,error,errors,11000,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2089,reliability,Fail,Failed,2089," builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function shoul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2184,reliability,Fail,Failed,2184,"tin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2263,reliability,Fail,Failed,2263,"t runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2344,reliability,Fail,Failed,2344,"is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2439,reliability,Fail,Failed,2439," x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:297,safety,test,test,297,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1203,safety,except,exceptions,1203,"n"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1607,safety,detect,detection,1607,"noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2022,safety,Test,Test,2022,"port for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2062,safety,Test,Test,2062,"ng builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2111,safety,Test,Test,2111,"llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2154,safety,Test,Test,2154,"re builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2206,safety,Test,Test,2206,"tions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_maste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2241,safety,Test,Test,2241,"thmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2285,safety,Test,Test,2285,"shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2321,safety,Test,Test,2321,"ive target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2366,safety,Test,Test,2366,"sabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2409,safety,Test,Test,2409," disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2676,safety,test,tests,2676,"ux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2781,safety,test,test,2781,"6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.Virtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2812,safety,test,test,2812,"++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2998,safety,test,test,2998,"on now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3044,safety,error,error,3044," -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3145,safety,error,errors,3145,"rming Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3194,safety,test,test,3194,"erforming Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3317,safety,test,test,3317,"g Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3364,safety,error,error,3364,"est found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3457,safety,error,errors,3457,"torials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3538,safety,test,test,3538,"test.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3647,safety,test,test,3647,"canning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3694,safety,error,error,3694,"ng done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3803,safety,error,errors,3803,"mance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3878,safety,test,test,3878,"-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4001,safety,test,test,4001,"src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4146,safety,test,test,4146,"ors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4367,safety,test,test,4367,": Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4484,safety,test,test,4484,"::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4531,safety,error,error,4531,"nce-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4640,safety,error,errors,4640,"nce-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalDa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4707,safety,test,test,4707,"virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4831,safety,test,test,4831,"RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5044,safety,test,test,5044," note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5161,safety,test,test,5161,"o/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5208,safety,error,error,5208,"ctor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5329,safety,error,errors,5329,"REAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5413,safety,test,test,5413,"ote: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5555,safety,test,test,5555,"ction during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::Cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5671,safety,test,test,5671,"NLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5809,safety,test,test,5809,". /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5935,safety,test,test,5935,"not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6088,safety,test,test,6088," note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6228,safety,test,test,6228,"ssed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6361,safety,test,test,6361,"r, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6482,safety,test,test,6482,":SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6633,safety,test,test,6633,"ternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6778,safety,test,test,6778,"= 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6950,safety,test,test,6950,"o/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBloc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7074,safety,test,test,7074,"performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argumen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7186,safety,test,test,7186,"ockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7338,safety,test,test,7338,"^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7496,safety,test,test,7496,"io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7642,safety,test,test,7642,"ster/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7800,safety,test,test,7800,"c/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7989,safety,test,test,7989,":8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8036,safety,error,error,8036,"ize != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8157,safety,error,errors,8157,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8232,safety,test,test,8232,"te: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8374,safety,test,test,8374,":637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::Cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8490,safety,test,test,8490,"nce-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8628,safety,test,test,8628,"performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8754,safety,test,test,8754," fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8907,safety,test,test,8907,"ter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9047,safety,test,test,9047,"ointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9180,safety,test,test,9180,"k->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9301,safety,test,test,9301,":SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9452,safety,test,test,9452,"ternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9597,safety,test,test,9597,"= 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9769,safety,test,test,9769,"o/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9893,safety,test,test,9893,"performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10005,safety,test,test,10005,"ockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10157,safety,test,test,10157,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10315,safety,test,test,10315,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10462,safety,test,test,10462,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10634,safety,test,test,10634,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10875,safety,error,errors,10875,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10942,safety,error,errors,10942,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:11000,safety,error,errors,11000,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1294,security,ssl,ssl,1294,"-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1607,security,detect,detection,1607,"noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2688,security,Configur,Configuring,2688," -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:297,testability,test,test,297,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2022,testability,Test,Test,2022,"port for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2062,testability,Test,Test,2062,"ng builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2111,testability,Test,Test,2111,"llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2154,testability,Test,Test,2154,"re builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2206,testability,Test,Test,2206,"tions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_maste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2241,testability,Test,Test,2241,"thmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2285,testability,Test,Test,2285,"shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2321,testability,Test,Test,2321,"ive target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2366,testability,Test,Test,2366,"sabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2409,testability,Test,Test,2409," disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2676,testability,test,tests,2676,"ux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2781,testability,test,test,2781,"6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.Virtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2812,testability,test,test,2812,"++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2998,testability,test,test,2998,"on now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3194,testability,test,test,3194,"erforming Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: not",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3317,testability,test,test,3317,"g Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3538,testability,test,test,3538,"test.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3647,testability,test,test,3647,"canning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3878,testability,test,test,3878,"-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4001,testability,test,test,4001,"src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4146,testability,test,test,4146,"ors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4367,testability,test,test,4367,": Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4484,testability,test,test,4484,"::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4707,testability,test,test,4707,"virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4831,testability,test,test,4831,"RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5044,testability,test,test,5044," note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5161,testability,test,test,5161,"o/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5413,testability,test,test,5413,"ote: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5555,testability,test,test,5555,"ction during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::Cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5671,testability,test,test,5671,"NLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5809,testability,test,test,5809,". /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5935,testability,test,test,5935,"not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6088,testability,test,test,6088," note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6228,testability,test,test,6228,"ssed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6361,testability,test,test,6361,"r, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6482,testability,test,test,6482,":SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6633,testability,test,test,6633,"ternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6778,testability,test,test,6778,"= 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6950,testability,test,test,6950,"o/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBloc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7074,testability,test,test,7074,"performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argumen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7186,testability,test,test,7186,"ockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7338,testability,test,test,7338,"^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7496,testability,test,test,7496,"io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7642,testability,test,test,7642,"ster/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7800,testability,test,test,7800,"c/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7989,testability,test,test,7989,":8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8232,testability,test,test,8232,"te: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8374,testability,test,test,8374,":637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::Cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8490,testability,test,test,8490,"nce-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8628,testability,test,test,8628,"performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8754,testability,test,test,8754," fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8907,testability,test,test,8907,"ter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9047,testability,test,test,9047,"ointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9180,testability,test,test,9180,"k->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9301,testability,test,test,9301,":SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9452,testability,test,test,9452,"ternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9597,testability,test,test,9597,"= 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9769,testability,test,test,9769,"o/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9893,testability,test,test,9893,"performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10005,testability,test,test,10005,"ockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10157,testability,test,test,10157,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10315,testability,test,test,10315,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10462,testability,test,test,10462,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10634,testability,test,test,10634,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:285,usability,perform,performance-test,285,"A proof that the problem exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revisi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:1021,usability,support,support,1021,"exists before this PR is:. ```. cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master . -- ROOT default compression algorithm: zlib. -- Found GCC. Major version 7, minor version 4. -- Found a 64bit system. -- Found GNU compiler collection. -- ROOT Platform: linux. -- ROOT Architecture: linuxx8664gcc. -- Build Type: Debug. -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread . -- Looking for ZLib. -- Looking for Freetype. -- Looking for LZMA. -- Found LZMA includes at /usr/include. -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Downloading and building GSL version 2.1. -- Looking for python. -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2011,usability,Perform,Performing,2011,"bled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2051,usability,Perform,Performing,2051,"ltin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2100,usability,Perform,Performing,2100,"builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2143,usability,Perform,Performing,2143,"iltin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2195,usability,Perform,Performing,2195,"ad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2230,usability,Perform,Performing,2230,"p imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2274,usability,Perform,Performing,2274,"modules shared ssl tmva spectrum vdt. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2310,usability,Perform,Performing,2310,". -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performanc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2355,usability,Perform,Performing,2355,"reads disabled. -- Doxygen disabled. -- Go bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2398,usability,Perform,Performing,2398,"bindings disabled. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so. -- Targeting X86. -- Clang version: 5.0.0. -- Cling version (from VERSION file): ROOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2769,usability,perform,performance-test,2769,"OOT_0.6~dev. -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2800,usability,perform,performance-test,2800," for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime. -- And then fallback to: 'x86_64-linux-gnu-g++-7'. Recording the git revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:2986,usability,perform,performance-test,2986,"revision now. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/perfo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3044,usability,error,error,3044," -- Performing Test found_stdstringview - Failed. -- Performing Test found_stdexpstringview. -- Performing Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3145,usability,error,errors,3145,"rming Test found_stdexpstringview - Failed. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3182,usability,perform,performance-test,3182,". -- Performing Test found_stdapply. -- Performing Test found_stdapply - Failed. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3305,usability,perform,performance-test,3305,"forming Test found_stdinvoke - Failed. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3364,usability,error,error,3364,"est found_stdindexsequence. -- Performing Test found_stdindexsequence - Failed. -- 315/786 tutorials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3457,usability,error,errors,3457,"torials have been vetoed for various reasons. -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3526,usability,perform,performance-test,3526,"r roottest.git is under deprecation, please add ROOT in PATH. -- Check for bitness: Found 64 bit architecture. -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3635,usability,perform,performance-test,3635,". -- Scanning subdirectories for tests... -- Configuring done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3694,usability,error,error,3694,"ng done. -- Generating done. -- Build files have been written to: /home/performance-test/build_master. performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/pe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3803,usability,error,errors,3803,"mance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3866,usability,perform,performance-test,3866,"alyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx . 103 warnings generated. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:3989,usability,perform,performance-test,3989,"-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4134,usability,perform,performance-test,4134,"as-errors]. buffer.release();. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4355,usability,perform,performance-test,4355," error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4472,usability,perform,performance-test,4472," EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4531,usability,error,error,4531,"nce-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4640,usability,error,errors,4640,"nce-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalDa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4695,usability,perform,performance-test,4695,"ll to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:4819,usability,perform,performance-test,4819,"th, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5032,usability,perform,performance-test,5032,"188:7: note: Taking false branch. if (optmode == EMode::kRecreate) mode |= O_TRUNC;. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+le",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5149,usability,perform,performance-test,5149,"ster/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false bran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5208,usability,error,error,5208,"ctor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDWR | O_CREAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5329,usability,error,errors,5329,"REAT, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
