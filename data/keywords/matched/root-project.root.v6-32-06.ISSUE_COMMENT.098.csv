id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/16232:17558,testability,test,tests,17558,"ointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #43 0x0000150891e949e5 in TBuildRealData::Inspect (this=0x7ffeced6ec70, cl=0x23c03b0, pname=0xb215680 """", mname=0x7ffeced6e8a0 ""obj"", add=0x8, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:886. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=...,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:17564,testability,test,testBuildDir,17564,"0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #43 0x0000150891e949e5 in TBuildRealData::Inspect (this=0x7ffeced6ec70, cl=0x23c03b0, pname=0xb215680 """", mname=0x7ffeced6e8a0 ""obj"", add=0x8, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:886. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:17833,testability,test,tests,17833,"ec70, cl=0x23c03b0, pname=0xb215680 """", mname=0x7ffeced6e8a0 ""obj"", add=0x8, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:886. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=...,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:17839,testability,test,testBuildDir,17839,"0x23c03b0, pname=0xb215680 """", mname=0x7ffeced6e8a0 ""obj"", add=0x8, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:886. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18094,testability,test,tests,18094,"ss.cxx:886. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18100,testability,test,testBuildDir,18100,"6. #44 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0x23c03b0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18355,testability,test,tests,18355,"90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18361,testability,test,testBuildDir,18361,".33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18631,testability,test,tests,18631,"87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18637,testability,test,testBuildDir,18637,"7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18991,testability,test,tests,18991,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18997,testability,test,testBuildDir,18997,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19270,testability,test,tests,19270,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19276,testability,test,testBuildDir,19276,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19551,testability,test,tests,19551,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19557,testability,test,testBuildDir,19557,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19803,testability,test,tests,19803,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:19809,testability,test,testBuildDir,19809,"core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963. #52 0x0000150892f556bc in ROOT_rootcling_Driver (argc=56, argv=0x7ffeced72a78, config=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252. #53 0x0000000000401259 in main (argc=56, argv=0x7ffeced72a78) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6161,usability,Support,Support,6161,"cc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:3668. #5 0x0000150891f15fca in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:410. #6 0x0000150891f1e09d in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:3639. #7 <signal handler called>. #8 0x0000150892f6d3c9 in llvm::ValueIsPresent<llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*>, void>::isPresent (t=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:623. #9 0x0000150892f67c61 in llvm::detail::isPresent<llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (t=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:631. #10 0x0000150892f60abf in llvm::dyn_cast_if_present<clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*, llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (Val=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:741. #11 0x0000150892f60afc in llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6555,usability,Support,Support,6555,"g=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/unix/src/TUnixSystem.cxx:3639. #7 <signal handler called>. #8 0x0000150892f6d3c9 in llvm::ValueIsPresent<llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*>, void>::isPresent (t=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:623. #9 0x0000150892f67c61 in llvm::detail::isPresent<llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (t=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:631. #10 0x0000150892f60abf in llvm::dyn_cast_if_present<clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*, llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (Val=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:741. #11 0x0000150892f60afc in llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*>::dyn_cast<clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> (this=0x98) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/ADT/PointerUnion.h:163. #12 0x0000150897f028e6 in clang::ClassTemplateSp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:7029,usability,Support,Support,7029,"BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:623. #9 0x0000150892f67c61 in llvm::detail::isPresent<llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (t=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:631. #10 0x0000150892f60abf in llvm::dyn_cast_if_present<clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*, llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> > (Val=...) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:741. #11 0x0000150892f60afc in llvm::PointerUnion<clang::ClassTemplateDecl*, clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*>::dyn_cast<clang::ClassTemplateSpecializationDecl::SpecializedPartialSpecialization*> (this=0x98) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/include/llvm/ADT/PointerUnion.h:163. #12 0x0000150897f028e6 in clang::ClassTemplateSpecializationDecl::getSpecializedTemplate (this=0x0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/clang/lib/AST/DeclTemplate.cpp:1035. #13 0x00001508934f3d9f in cling::utils::CreateNestedNameSpecifierForScopeOf (Ctx=..., decl=0x7e9a298, FullyQualified=true, Spec=0x0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:18259,usability,Close,CloseStreamerInfoROOTFile,18259,"sts/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957. #45 0x0000150891e9baef in TClass::CallShowMembers (this=0x23c03b0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225. #46 0x0000150891e9afe7 in TClass::BuildRealData (this=0x23c03b0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080. #47 0x0000150891ed90a6 in TProtoClass::TProtoClass (this=0xb2a3fd0, cl=0x23c03b0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TProtoClass.cxx:110. #48 0x000015089ffeb40a in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/io/rootpcm/src/rootclingIO.cxx:224. #49 0x0000150892f40bf8 in FinalizeStreamerInfoWriting (interp=..., writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2645. #50 0x0000150892f41641 in GenerateFullDict (dictStream=..., interp=..., scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, isSelXML=true, writeEmptyRootPCM=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2804. #51 0x0000150892f4f740 in RootClingMain (argc=56, argv=0x7ffeced72a78, isGenreflex=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:95,deployability,build,build,95,That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:157,deployability,infrastructur,infrastructure,157,That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:72,availability,failur,failure,72,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:51,deployability,fail,fails,51,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:72,deployability,fail,failure,72,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:157,deployability,BUILD,BUILD,157,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:514,deployability,fail,failed,514,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:656,deployability,BUILD,BUILD,656,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:926,deployability,BUILD,BUILD,926,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1190,deployability,BUILD,BUILD,1190,"01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1438,deployability,BUILD,BUILD,1438,"pecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/je",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2124,deployability,BUILD,BUILD,2124,"() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2486,deployability,BUILD,BUILD,2486,"73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2835,deployability,BUILD,BUILD,2835,"39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3195,deployability,BUILD,BUILD,3195,"ot-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/j",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3630,deployability,BUILD,BUILD,3630,"f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4244,deployability,BUILD,BUILD,4244,"3bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4772,deployability,BUILD,BUILD,4772,"2ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5188,deployability,BUILD,BUILD,5188,"msbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5434,deployability,BUILD,BUILD,5434,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5669,deployability,BUILD,BUILD,5669,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5887,deployability,BUILD,BUILD,5887,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3454,energy efficiency,alloc,allocator,3454,"-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3715,energy efficiency,core,core,3715,"xt const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3902,energy efficiency,alloc,allocator,3902,"root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4021,energy efficiency,alloc,allocator,4021,"iedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4045,energy efficiency,alloc,allocator,4045,"::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4127,energy efficiency,alloc,allocator,4127,"*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4329,energy efficiency,core,core,4329,"000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x0000152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4650,energy efficiency,alloc,allocator,4650,"/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4857,energy efficiency,core,core,4857,"_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5049,energy efficiency,alloc,allocator,5049,"<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5273,energy efficiency,core,core,5273,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5519,energy efficiency,core,core,5519,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5754,energy efficiency,core,core,5754,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:72,performance,failur,failure,72,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:51,reliability,fail,fails,51,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:72,reliability,fail,failure,72,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:514,reliability,fail,failed,514,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:138,safety,test,tests,138,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,safety,test,testBuildDir,144,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:637,safety,test,tests,637,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:643,safety,test,testBuildDir,643,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:907,safety,test,tests,907,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:913,safety,test,testBuildDir,913,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1171,safety,test,tests,1171,"cc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1177,safety,test,testBuildDir,1177,"root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1419,safety,test,tests,1419,"ang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1425,safety,test,testBuildDir,1425,"sTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2105,safety,test,tests,2105,"::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2111,safety,test,testBuildDir,2111,"alHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2467,safety,test,tests,2467,".33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2473,safety,test,testBuildDir,2473,"fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2816,safety,test,tests,2816,"b64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2822,safety,test,testBuildDir,2822,"so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3176,safety,test,tests,3176,"3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3182,safety,test,testBuildDir,3182,"ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3611,safety,test,tests,3611,". #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3617,safety,test,testBuildDir,3617,"00015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4225,safety,test,tests,4225,"33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4231,safety,test,testBuildDir,4231,"d78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4753,safety,test,tests,4753,"163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4759,safety,test,testBuildDir,4759,"0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5169,safety,test,tests,5169,"maType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5175,safety,test,testBuildDir,5175,"&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5415,safety,test,tests,5415,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5421,safety,test,testBuildDir,5421,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5650,safety,test,tests,5650,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5656,safety,test,testBuildDir,5656,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5868,safety,test,tests,5868,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5874,safety,test,testBuildDir,5874,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6143,safety,test,tests,6143,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6149,safety,test,testBuildDir,6149,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:788,security,Sign,Signals,788,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1058,security,Sign,Signals,1058,"assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1317,security,Sign,Signals,1317,"ils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForSc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1359,security,Sign,SignalHandler,1359,"t clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1570,security,Sign,Signals,1570,"m::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:62,testability,assert,assertion,62,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:138,testability,test,tests,138,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,testability,test,testBuildDir,144,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:462,testability,Assert,Assertion,462,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:637,testability,test,tests,637,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:643,testability,test,testBuildDir,643,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:907,testability,test,tests,907,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:913,testability,test,testBuildDir,913,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1171,testability,test,tests,1171,"cc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1177,testability,test,testBuildDir,1177,"root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1419,testability,test,tests,1419,"ang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1425,testability,test,testBuildDir,1425,"sTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2105,testability,test,tests,2105,"::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2111,testability,test,testBuildDir,2111,"alHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2467,testability,test,tests,2467,".33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2473,testability,test,testBuildDir,2473,"fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2816,testability,test,tests,2816,"b64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:2822,testability,test,testBuildDir,2822,"so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3176,testability,test,tests,3176,"3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3182,testability,test,testBuildDir,3182,"ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1621:79. #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3611,testability,test,tests,3611,". #11 0x000015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:3617,testability,test,testBuildDir,3617,"00015292f2f4573 cling::utils::TypeName::GetFullyQualifiedType(clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1760:51. #12 0x000015292f2f478e cling::utils::TypeName::GetFullyQualifiedName[abi:cxx11](clang::QualType, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4225,testability,test,tests,4225,"33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4231,testability,test,testBuildDir,4231,"d78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1805:42. #13 0x000015292ec25603 ROOT::TMetaUtils::GetFullyQualifiedTypeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&, clang::QualType const&, clang::ASTContext const&, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:3499:163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4753,testability,test,tests,4753,"163. #14 0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:4759,testability,test,testBuildDir,4759,"0x000015292ec1c1ef CreateNameTypeMap(clang::CXXRecordDecl const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, ROOT::Internal::TSchemaType, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, ROOT::Internal::TSchemaType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5169,testability,test,tests,5169,"maType>>>&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5175,testability,test,testBuildDir,5175,"&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5415,testability,test,tests,5415,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5421,testability,test,testBuildDir,5421,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5650,testability,test,tests,5650,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5656,testability,test,testBuildDir,5656,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5868,testability,test,tests,5868,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:5874,testability,test,testBuildDir,5874,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6143,testability,test,tests,6143,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:6149,testability,test,testBuildDir,6149,"d64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1503:103. #15 0x000015292ec1d7a2 ROOT::TMetaUtils::WriteClassInit(std::ostream&, ROOT::TMetaUtils::AnnotatedRecordDecl const&, clang::CXXRecordDecl const*, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool&) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/clingutils/src/TClingUtils.cxx:1823:40. #16 0x000015292ed411c9 GenerateFullDict(std::ostream&, cling::Interpreter&, RScanner&, std::__cxx11::list<ROOT::TMetaUtils::RConstructorType, std::allocator<ROOT::TMetaUtils::RConstructorType>> const&, bool, bool, bool, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:2729:48. #17 0x000015292ed4f740 RootClingMain(int, char**, bool) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:4963:43. #18 0x000015292ed556bc ROOT_rootcling_Driver /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/dictgen/src/rootcling_impl.cxx:6252:29. #19 0x0000000000401259 main /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/main/src/rootcling.cxx:43:51. #20 0x000015292cce27e5 __libc_start_main (/lib64/libc.so.6+0x3a7e5). #21 0x000000000040110e _start (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/bin/rootcling+0x40110e). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:775,usability,Support,Support,775,"The `DataFormats/Histograms` dictionary generation fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1045,usability,Support,Support,1045,"n fails with assertion failure. ```. rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1309,usability,Support,Support,1309,"ling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed. #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecif",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1557,usability,Support,Support,1557,"tackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22. #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1. #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20. #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1. #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20). #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f). #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65). #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39). #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86). #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Decl const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1568:65. #10 0x000015292f2f3f03 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::Type const*, bool, clang::ClassTemplateSpecializationDecl const*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:97,deployability,build,build,97,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:159,deployability,infrastructur,infrastructure,159,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:271,deployability,instal,installs,271,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:285,deployability,fail,failed,285,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:299,deployability,build,build,299,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:351,deployability,fail,failing,351,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:285,reliability,fail,failed,285,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:351,reliability,fail,failing,351,> That looks like a bug in llvm... I wonder on what code it happens. I see there is a debug llvm build already. What's the way nowadays to debug it on the cms infrastructure? @vgvassilev https://github.com/cms-sw/root/pull/208#issuecomment-2330307793 shows a script that installs the (failed) CMSSW build where you can e.g. run the `rootcling` on the failing setup (with debug symbols in ROOT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:119,availability,failur,failure,119,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:113,deployability,build,build,113,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:119,deployability,fail,failure,119,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:135,deployability,Log,Login,135,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:171,deployability,contain,container,171,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:372,deployability,instal,install,372,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:437,deployability,Build,Build,437,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:119,performance,failur,failure,119,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:119,reliability,fail,failure,119,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:135,safety,Log,Login,135,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:135,security,Log,Login,135,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:184,security,ssh,ssh,184,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:135,testability,Log,Login,135,"@vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure . ```. #Login to lxplus and start cmssw-el8 container. > ssh lxplus. > cd cd /tmp/$(whoami). > source /cvmfs/cms.cern.ch/cmsset_default.sh. > cmssw-el8. # Create CMSSW area using PR artefacts. > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > cmsenv. #Build root dict. > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:29,availability,failur,failure,29,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:29,deployability,fail,failure,29,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:227,interoperability,xml,xml,227,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:29,performance,failur,failure,29,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:29,reliability,fail,failure,29,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:121,availability,failur,failure,121,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:653,availability,servic,service,653,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,availability,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1123,availability,servic,service,1123,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:115,deployability,build,build,115,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:121,deployability,fail,failure,121,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,deployability,Log,Login,144,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:180,deployability,contain,container,180,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:393,deployability,instal,install,393,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:464,deployability,Build,Build,464,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:653,deployability,servic,service,653,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,deployability,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1016,deployability,resourc,resources,1016,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1123,deployability,servic,service,1123,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,energy efficiency,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:679,energy efficiency,CPU,CPU,679,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:836,energy efficiency,current,currently,836,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1016,energy efficiency,resourc,resources,1016,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1050,energy efficiency,cpu,cpu,1050,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:653,integrability,servic,service,653,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1123,integrability,servic,service,1123,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:653,modifiability,servic,service,653,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1123,modifiability,servic,service,1123,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:121,performance,failur,failure,121,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:679,performance,CPU,CPU,679,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:687,performance,Memor,Memory,687,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1005,performance,time,time,1005,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1016,performance,resourc,resources,1016,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1050,performance,cpu,cpu,1050,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1085,performance,memor,memory,1085,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:121,reliability,fail,failure,121,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,reliability,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,safety,Log,Login,144,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,safety,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1016,safety,resourc,resources,1016,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,security,Log,Login,144,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:195,security,ssh,ssh,195,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:784,security,ident,identified,784,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:144,testability,Log,Login,144,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:668,testability,monitor,monitoring,668,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1016,testability,resourc,resources,1016,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1054,testability,context,context,1054,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:687,usability,Memor,Memory,687,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1085,usability,memor,memory,1085,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:1110,usability,user,users,1110,"> @vgvassilev , as @makortel mentioned above , you can do something like the following on lxplus to reproduce this build failure. > . > ```. > #Login to lxplus and start cmssw-el8 container. > > ssh lxplus. > > cd cd /tmp/$(whoami). > > source /cvmfs/cms.cern.ch/cmsset_default.sh. > > cmssw-el8. > # Create CMSSW area using PR artefacts. > > /cvmfs/cms-ci.cern.ch/week1/cms-sw/root/208/41293/install.sh. > > cd CMSSW_14_2_ROOT6_X_2024-09-03-2300/. > > cmsenv. > #Build root dict. > > scram b -v -j 10 tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc. > ```. I just got autowarned:. ```. The LxPlus service is now monitoring CPU and Memory Pressure Stall. Informaton (PSI) on each node. The LxPlus node lxplus974.cern.ch has been identified as under io pressure. Your processes are currently the highest contributor to that pressure. In particular, the some_avg300 value for io is 57.04% which. is over the threshold of 50%. This is the percentage of time that. resources are being wasted due to cpu context switching or thrashing memory. This impacts all users of the service, including yourself, as your. own processes fight with one another. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:59,safety,test,testing,59,"@vgvassilev , you can use `cmsdev40 to cmsdev45` nodes for testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16232:59,testability,test,testing,59,"@vgvassilev , you can use `cmsdev40 to cmsdev45` nodes for testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16232
https://github.com/root-project/root/pull/16234:16,deployability,observ,observation,16,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,deployability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,integrability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,interoperability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,modifiability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,reliability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:177,safety,except,except,177,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,security,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:16,testability,observ,observation,16,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:150,testability,integr,integrate,150,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:79,deployability,version,version,79,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:222,deployability,version,version,222,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:152,energy efficiency,current,currently,152,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:79,integrability,version,version,79,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:222,integrability,version,version,222,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:79,modifiability,version,version,79,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:222,modifiability,version,version,222,"Note that gl2ps is an external code provided by C.Geuzaine. In its more recent version, the `vsprintf`calls are handled in a different way than the one currently in the ROOT code. See: https://www.geuz.org/gl2ps/ . In the version we have in ROOT we made some [tiny fixes](https://github.com/root-project/root/commits/master/graf3d/gl/src/gl2ps.cxx), so it diverged from Geuzaine's one. We started from 1.3.3 15 years ago and the last one (from 2020) is 1.4.2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/pull/16234:123,usability,support,support,123,"Thanks for the heads-up @couet. I believe that, as @dpiparo said, we're not targeting any compiler that has no `vsnprintf` support (several other places in ROOT don't check for it too), so I'd merge it and, if some edge cases arise, we can tackle it when needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16234
https://github.com/root-project/root/issues/16236:147,energy efficiency,model,model,147,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:210,energy efficiency,model,model,210,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:235,energy efficiency,model,model,235,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:291,energy efficiency,model,model,291,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:370,energy efficiency,model,models,370,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:80,security,modif,modifying,80,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:147,security,model,model,147,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:210,security,model,model,210,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:235,security,model,model,235,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:291,security,model,model,291,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:370,security,model,models,370,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:68,usability,behavi,behavior,68,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16236:176,usability,user,user,176,"Thinking about this a bit more, we should be able to get the wanted behavior by modifying `RNTupleModel::Clone` to copy the `fModelId` in case the model is frozen. In case the user again `Unfreeze`s the cloned model, it will get a new model id that point. edit: It's not as easy because the model id is also used for `REntry`s, which must not be mixed even among cloned models...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16236
https://github.com/root-project/root/issues/16242:108,availability,echo,echo,108,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:199,availability,down,down,199,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:15,deployability,log,log,15,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:268,deployability,Fail,Failed,268,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:323,deployability,Fail,Failed,323,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:380,deployability,Fail,Failed,380,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:435,deployability,Fail,Failed,435,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:485,deployability,Fail,Failed,485,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:552,deployability,Fail,Failed,552,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:615,deployability,Fail,Failed,615,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:658,deployability,Fail,Failed,658,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:720,deployability,Fail,Failed,720,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:786,deployability,Fail,Failed,786,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:850,deployability,Fail,Failed,850,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:913,deployability,Fail,Failed,913,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:972,deployability,Fail,Failed,972,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1031,deployability,Fail,Failed,1031,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:268,reliability,Fail,Failed,268,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:323,reliability,Fail,Failed,323,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:380,reliability,Fail,Failed,380,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:435,reliability,Fail,Failed,435,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:485,reliability,Fail,Failed,485,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:552,reliability,Fail,Failed,552,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:615,reliability,Fail,Failed,615,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:640,reliability,rca,rcanvas-,640,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:658,reliability,Fail,Failed,658,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:720,reliability,Fail,Failed,720,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:786,reliability,Fail,Failed,786,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:850,reliability,Fail,Failed,850,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:913,reliability,Fail,Failed,913,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:972,reliability,Fail,Failed,972,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1031,reliability,Fail,Failed,1031,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:15,safety,log,log,15,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:177,safety,test,test,177,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:15,security,log,log,15,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:15,testability,log,log,15,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:177,testability,test,test,177,"Looking at the log, I found:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi. ```. Adding this to the VM, more test passes, I am now down to:. ```. 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed). 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed). 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed). 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed). 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed). 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:102,deployability,fail,fails,102,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:186,deployability,Fail,Failed,186,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:249,deployability,Fail,Failed,249,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:292,deployability,Fail,Failed,292,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:354,deployability,Fail,Failed,354,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:420,deployability,Fail,Failed,420,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:484,deployability,Fail,Failed,484,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:547,deployability,Fail,Failed,547,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:606,deployability,Fail,Failed,606,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:665,deployability,Fail,Failed,665,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:102,reliability,fail,fails,102,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:186,reliability,Fail,Failed,186,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:249,reliability,Fail,Failed,249,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:274,reliability,rca,rcanvas-,274,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:292,reliability,Fail,Failed,292,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:354,reliability,Fail,Failed,354,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:420,reliability,Fail,Failed,420,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:484,reliability,Fail,Failed,484,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:547,reliability,Fail,Failed,547,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:606,reliability,Fail,Failed,606,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:665,reliability,Fail,Failed,665,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:91,safety,test,tests,91,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:91,testability,test,tests,91,"After rerunning `cmake` and rebuilding so that the new path is taken in consideration, the tests that fails are now only:. ```. 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed). 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed). 1261 - tutorial-rcanvas-df104-py (Failed). 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). 1664 - roottest-python-distrdf-backends-test_all (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:50,availability,failur,failure,50,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:195,availability,down,down,195,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:320,availability,error,error,320,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:36,deployability,Fail,Failed,36,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:50,deployability,fail,failure,50,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:265,deployability,fail,fails,265,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:343,deployability,contain,contains,343,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:600,deployability,contain,contains,600,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:679,deployability,build,build,679,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:727,deployability,modul,module,727,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:122,energy efficiency,core,cores,122,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:166,energy efficiency,reduc,reducing,166,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:189,energy efficiency,core,cores,189,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:206,energy efficiency,core,cores,206,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:301,energy efficiency,core,cores,301,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:984,energy efficiency,core,cores,984,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:376,integrability,event,event,376,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:421,integrability,event,event,421,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:466,integrability,event,event,466,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:511,integrability,event,event,511,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:556,integrability,event,event,556,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:727,modifiability,modul,module,727,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:50,performance,failur,failure,50,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:80,performance,memor,memory,80,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:289,performance,time,time,289,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:320,performance,error,error,320,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:18,reliability,rca,rcanvas-,18,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:36,reliability,Fail,Failed,36,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:50,reliability,fail,failure,50,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:265,reliability,fail,fails,265,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:695,reliability,rca,rcanvas,695,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:221,safety,test,test,221,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:246,safety,compl,complete,246,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:320,safety,error,error,320,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:727,safety,modul,module,727,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:246,security,compl,complete,246,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:221,testability,test,test,221,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:616,testability,Trace,Traceback,616,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:80,usability,memor,memory,80,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:320,usability,error,error,320,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails. It works all the time for 32 cores or less. The error output sometimes contains:. ```. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. RDataFrame::Run: event loop was interrupted. ```. and always contains:. ```. Traceback (most recent call last):. File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>. ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]). cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>. bad_alloc: std::bad_alloc. ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**. This is opened as its own issue: https://github.com/root-project/root/issues/16252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:65,availability,ERROR,ERROR,65,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:26,deployability,fail,fails,26,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:96,deployability,fail,failed,96,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:838,deployability,Fail,Failed,838,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:904,deployability,Fail,Failed,904,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:968,deployability,Fail,Failed,968,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1031,deployability,Fail,Failed,1031,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1090,deployability,Fail,Failed,1090,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:467,integrability,messag,message,467,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:725,integrability,configur,configured,725,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:467,interoperability,messag,message,467,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:541,modifiability,variab,variable,541,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:619,modifiability,variab,variable,619,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:725,modifiability,configur,configured,725,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:65,performance,ERROR,ERROR,65,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:26,reliability,fail,fails,26,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:96,reliability,fail,failed,96,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:838,reliability,Fail,Failed,838,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:904,reliability,Fail,Failed,904,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:968,reliability,Fail,Failed,968,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1031,reliability,Fail,Failed,1031,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1090,reliability,Fail,Failed,1090,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:21,safety,test,test,21,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:65,safety,ERROR,ERROR,65,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:73,safety,Permiss,Permissions,73,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:773,safety,test,test,773,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:107,security,secur,secure,107,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:725,security,configur,configured,725,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:21,testability,test,test,21,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:773,testability,test,test,773,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:65,usability,ERROR,ERROR,65,"The jupyter notebook test fails because of:. ```. [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'. ```. This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:. ```. JUPYTER_ALLOW_INSECURE_WRITES=true. ```. at the price of seeing this message:. ```. WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'. ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:. ```. 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed). 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed). 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed). 1568 - roottest-python-JupyROOT-tpython_notebook (Failed). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1471,availability,uptim,uptime,1471,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1729,availability,failur,failure,1729,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:281,deployability,artifact,artifacts,281,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:331,deployability,build,build-artifacts,331,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:502,deployability,artifact,artifacts,502,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,deployability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,deployability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1356,deployability,version,version,1356,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1390,deployability,version,version,1390,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1437,deployability,releas,release,1437,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1566,deployability,build,build,1566,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1594,deployability,build,build,1594,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1622,deployability,build,build,1622,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1703,deployability,build,build,1703,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1729,deployability,fail,failure,1729,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,integrability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,integrability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1356,integrability,version,version,1356,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1390,integrability,version,version,1390,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,interoperability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,interoperability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1778,interoperability,xml,xml,1778,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,modifiability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,modifiability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1356,modifiability,version,version,1356,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1390,modifiability,version,version,1390,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1657,performance,parallel,parallel,1657,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1729,performance,failur,failure,1729,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1739,performance,parallel,parallel,1739,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,reliability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,reliability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1471,reliability,uptim,uptime,1471,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1729,reliability,fail,failure,1729,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:20,safety,compl,complete,20,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1766,safety,Test,TestResults,1766,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:20,security,compl,complete,20,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,security,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,security,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:856,testability,Integr,Integration,856,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1267,testability,Integr,Integration,1267,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1766,testability,Test,TestResults,1766,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:788,usability,user,user,788,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:830,usability,user,user,830,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1199,usability,user,user,1199,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:1241,usability,user,user,1241,"Consequently a more complete instruction would read:. ```. if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi. export JUPYTER_ALLOW_INSECURE_WRITES=true. (. rm -rf /github/home/ROOT-CI. mkdir -p /github/home/ROOT-CI. ). (. curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz. ). (. cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz. ). (. cd '/github/home/ROOT-CI/src'. git checkout master. git fetch. git reset --hard @{u}. ). (. cd '/github/home/ROOT-CI/src'. git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c. ). (. cd '/github/home/ROOT-CI/src'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733. git checkout fix-15733. git rebase 531620f59e898e5ec809043135583d15b0d151a6. ). (. git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest"". ). (. cd '/github/home/ROOT-CI/roottest'. . git config user.email ""rootci@root.cern"". git config user.name 'ROOT Continous Integration'. . git fetch . git checkout . git rebase master. ). (. which cmake. cmake --version. which c++ || true. c++ --version || true. uname -a || true. cat /etc/os-release || true. sw_vers || true. uptime || true. df || true. ). (. cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L. ). (. cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'. ). (. cd '/github/home/ROOT-CI/build'. ctest --output-on-failure --parallel 16 --output-junit TestResults.xml. ). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:262,deployability,log,log,262,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:310,deployability,contain,container,310,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:331,deployability,log,log,331,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:126,energy efficiency,Current,Currently,126,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:262,safety,log,log,262,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:331,safety,log,log,331,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:262,security,log,log,262,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:331,security,log,log,331,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:262,testability,log,log,262,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/issues/16242:331,testability,log,log,331,"I think what is missing is how to:. 1. Checkout the image. 2. Setup the python virtual environment. I proposed a PR for that. Currently some of the steps are run by the steering script and others by steps in the action itself, by construction, and it is hard to log everything which has been done to setup the container inside the log printed by the Python script. I believe that very generic instructions are enough to reproduce the environment (please see the PR opened above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16242
https://github.com/root-project/root/pull/16243:55,deployability,build,build,55,A test known to be problematic hit us. I restarted the build since I believe it's unrelated to the nice changes proposed in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:2,safety,test,test,2,A test known to be problematic hit us. I restarted the build since I believe it's unrelated to the nice changes proposed in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/pull/16243:2,testability,test,test,2,A test known to be problematic hit us. I restarted the build since I believe it's unrelated to the nice changes proposed in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16243
https://github.com/root-project/root/issues/16244:15,usability,feedback,feedback,15,Thanks for the feedback @will-cern ! The expert is now in the loop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16244
https://github.com/root-project/root/issues/16244:44,safety,test,testing,44,I add provided TProfile2D example to JSROOT testing: https://jsroot.gsi.de/dev/examples.htm?more#tprofile2d_neg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16244
https://github.com/root-project/root/issues/16244:44,testability,test,testing,44,I add provided TProfile2D example to JSROOT testing: https://jsroot.gsi.de/dev/examples.htm?more#tprofile2d_neg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16244
https://github.com/root-project/root/issues/16249:106,safety,test,tests,106,"Thanks, that's indeed correct, and that is why for example there is no trace of this in RDataFrame usages/tests. We'll figure this out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16249
https://github.com/root-project/root/issues/16249:71,testability,trace,trace,71,"Thanks, that's indeed correct, and that is why for example there is no trace of this in RDataFrame usages/tests. We'll figure this out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16249
https://github.com/root-project/root/issues/16249:106,testability,test,tests,106,"Thanks, that's indeed correct, and that is why for example there is no trace of this in RDataFrame usages/tests. We'll figure this out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16249
https://github.com/root-project/root/issues/16250:70,testability,regress,regression,70,"Not sure if this should be assigned to @couet or @bellenot. This is a regression caused recently by #15812, so @alja and @osschar should better address this I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:749,availability,error,error,749,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:45,deployability,depend,dependency,45,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:284,deployability,depend,dependency,284,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:638,deployability,fail,fails,638,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:729,deployability,depend,dependency,729,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:158,energy efficiency,load,load,158,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:45,integrability,depend,dependency,45,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:284,integrability,depend,dependency,284,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:319,integrability,configur,configure,319,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:696,integrability,interfac,interface,696,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:729,integrability,depend,dependency,729,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:554,interoperability,format,formats,554,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:696,interoperability,interfac,interface,696,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:45,modifiability,depend,dependency,45,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:284,modifiability,depend,dependency,284,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:319,modifiability,configur,configure,319,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:696,modifiability,interfac,interface,696,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:729,modifiability,depend,dependency,729,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:158,performance,load,load,158,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:724,performance,time,time,724,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:749,performance,error,error,749,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:567,reliability,doe,does,567,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:638,reliability,fail,fails,638,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:45,safety,depend,dependency,45,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:284,safety,depend,dependency,284,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:729,safety,depend,dependency,729,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:749,safety,error,error,749,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:319,security,configur,configure,319,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:45,testability,depend,dependency,45,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:284,testability,depend,dependency,284,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:729,testability,depend,dependency,729,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16250:749,usability,error,error,749,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run? Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16250
https://github.com/root-project/root/issues/16252:0,reliability,doe,does,0,does the reproducer requires the new graphics?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:22,energy efficiency,profil,profiling,22,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:69,energy efficiency,profil,profiled,69,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:342,energy efficiency,reduc,reduced,342,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:398,energy efficiency,profil,profiling,398,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:537,energy efficiency,core,cores,537,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:582,energy efficiency,reduc,reduce,582,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:653,energy efficiency,core,cores,653,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:22,performance,profil,profiling,22,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:69,performance,profil,profiled,69,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:139,performance,memor,memory,139,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:398,performance,profil,profiling,398,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:573,reliability,doe,does,573,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:139,usability,memor,memory,139,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:252,usability,user,user-attachments,252,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:714,usability,user,user-attachments,714,"@pcanal , I made some profiling. The new graphics is not to blame. I profiled the process with memray on a machine with 12 workers and the memory peaks at about 5.5 GB total heap size. 12 workers:. <img width=""1087"" alt=""image"" src=""https://github.com/user-attachments/assets/57248b93-60a2-4531-880e-316e5d319200"">. This could be probably be reduced, but it looks very reasonable. . Have you tried profiling the run to see how we reach the 16 GB limit? If this is something we cannot workaround, we could limit the size of the pool to 8 cores, which is very reasonable and does not reduce at all the value of the tutorial. What do you think (see PR)? 8 cores. <img width=""1098"" alt=""image"" src=""https://github.com/user-attachments/assets/eac5c587-7ba1-486f-97a7-34957c293b8b"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:84,deployability,scale,scale,84,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:84,energy efficiency,scale,scale,84,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:115,energy efficiency,core,core,115,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:150,energy efficiency,core,cores,150,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:84,modifiability,scal,scale,84,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:21,performance,memor,memory,21,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:84,performance,scale,scale,84,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/issues/16252:21,usability,memor,memory,21,> 12 workers and the memory peaks at about 5.5 GB total heap size. This is the same scale as what I see. .5 GB per core. I see the 16Gb once I use 32 cores or more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16252
https://github.com/root-project/root/pull/16257:29,deployability,updat,updated,29,"all comments addressed, code updated, tests restarted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16257
https://github.com/root-project/root/pull/16257:29,safety,updat,updated,29,"all comments addressed, code updated, tests restarted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16257
https://github.com/root-project/root/pull/16257:38,safety,test,tests,38,"all comments addressed, code updated, tests restarted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16257
https://github.com/root-project/root/pull/16257:29,security,updat,updated,29,"all comments addressed, code updated, tests restarted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16257
https://github.com/root-project/root/pull/16257:38,testability,test,tests,38,"all comments addressed, code updated, tests restarted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16257
https://github.com/root-project/root/pull/16258:35,safety,test,test,35,@vgvassilev What as the purpose of test/CodeUnloading/RunAgainstClangTestSuite ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:35,testability,test,test,35,@vgvassilev What as the purpose of test/CodeUnloading/RunAgainstClangTestSuite ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:215,deployability,fail,fail,215,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:270,deployability,fail,fails,270,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:198,interoperability,platform,platform,198,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:207,reliability,doe,does,207,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:215,reliability,fail,fail,215,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:270,reliability,fail,fails,270,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:9,safety,test,test,9,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:441,safety,test,test,441,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:9,testability,test,test,9,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:441,testability,test,test,441,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:295,usability,user,user,295,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:390,usability,user,user,390,"> Delete test/Prompt/ValuePrinter/FileSystemPath.C. > Unfortunately the std::filesystem symbols are provided by the static. > library libstdc++fs.a, which might be stripped out by the linker. Which platform does it fail on? From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:10,safety,test,test,10,"> Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > It uses ln -r, which is not implemented on macOS. Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:191,safety,test,test,191,"> Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > It uses ln -r, which is not implemented on macOS. Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:10,testability,test,test,10,"> Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > It uses ln -r, which is not implemented on macOS. Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:191,testability,test,test,191,"> Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > It uses ln -r, which is not implemented on macOS. Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:124,integrability,sub,subset,124,> [cling] Disable many DynamicLibraryManager test on macOS . Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:45,safety,test,test,45,> [cling] Disable many DynamicLibraryManager test on macOS . Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:112,safety,test,tests,112,> [cling] Disable many DynamicLibraryManager test on macOS . Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:45,testability,test,test,45,> [cling] Disable many DynamicLibraryManager test on macOS . Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:112,testability,test,tests,112,> [cling] Disable many DynamicLibraryManager test on macOS . Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:227,deployability,fail,fail,227,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:531,deployability,fail,fails,531,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:867,deployability,instal,install,867,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1407,integrability,sub,subset,1407,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:210,interoperability,platform,platform,210,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:278,interoperability,platform,platform,278,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1765,modifiability,scenario,scenarios,1765,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:219,reliability,doe,does,219,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:227,reliability,fail,fail,227,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:531,reliability,fail,fails,531,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:11,safety,test,test,11,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:702,safety,test,test,702,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:998,safety,test,test,998,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1187,safety,test,test,1187,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1237,safety,Test,Tests,1237,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1323,safety,test,test,1323,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1395,safety,test,tests,1395,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1486,safety,test,tests,1486,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1689,safety,test,tests,1689,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1757,safety,compl,complex,1757,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1757,security,compl,complex,1757,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:11,testability,test,test,11,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:702,testability,test,test,702,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:998,testability,test,test,998,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1187,testability,test,test,1187,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1237,testability,Test,Tests,1237,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1323,testability,test,test,1323,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1395,testability,test,tests,1395,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1486,testability,test,tests,1486,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1689,testability,test,tests,1689,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:556,usability,user,user,556,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:651,usability,user,user,651,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:1467,usability,help,help,1467,"> > Delete test/Prompt/ValuePrinter/FileSystemPath.C. > > Unfortunately the std::filesystem symbols are provided by the static. > > library libstdc++fs.a, which might be stripped out by the linker. > . > Which platform does it fail on? In principle this affects any `libstdc++` platform that has the symbols in a static archive. I locally see it on Alma and Jenkins also reports it on Debian. It seems to luckily work on Ubuntu, which is why we weren't aware of the issue initially. > From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? Possible. Note that this has the same underlying cause as https://github.com/root-project/root/issues/11601 and the note on`devtoolset`s in https://root.cern/install/build_from_source/#caveats - problems with symbols in static archives are basically well known and understood. > > Disable test/DynamicLibraryManager/cached_realpath.C on macOS. > > It uses ln -r, which is not implemented on macOS. > . > Would it be possible (and thus better) to only disable the 2 lines of the test that uses `ln -r`? No, this is not possible. Tests can only be disabled as a whole. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? I'm not sure this would actually help. AFAICT these tests never worked on macOS since they were introduced, and I'm already pointing this out since at least two years. Note that the feature itself works fine on macOS, it's only a problem with the way the tests are written (and that they try really hard to create the most complex scenarios).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:48,deployability,fail,fails,48,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:408,integrability,sub,subset,408,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:48,reliability,fail,fails,48,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:219,safety,test,test,219,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:324,safety,test,test,324,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:396,safety,test,tests,396,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:219,testability,test,test,219,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:324,testability,test,test,324,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:396,testability,test,tests,396,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:73,usability,user,user,73,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:168,usability,user,user,168,> From the wording it sounds like it would also fails on the prompt if a user is attempting to use `std::filesystem`. Shouldn't we open a related issue to re-allow the user to use `std::filesystem` (and reintroduce the test)? https://github.com/root-project/root/issues/16269. > > [cling] Disable many DynamicLibraryManager test on macOS. > . > Should we open an issue to port (and/or fix) those tests (or a subset at least) to MacOS? https://github.com/root-project/root/issues/16270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:31,availability,state,state,31,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:208,availability,state,state,208,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:60,deployability,fail,failed,60,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:23,energy efficiency,current,current,23,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:200,energy efficiency,current,current,200,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:31,integrability,state,state,31,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:208,integrability,state,state,208,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:60,reliability,fail,failed,60,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:46,safety,test,tests,46,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:46,testability,test,tests,46,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:186,usability,document,documents,186,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:226,deployability,unload,unload,226,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:403,deployability,unload,unloads,403,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:221,energy efficiency,load,load,221,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:376,energy efficiency,load,loads,376,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:221,performance,load,load,221,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:376,performance,load,loads,376,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:9,safety,test,test,9,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:67,safety,test,test,67,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:122,safety,test,test,122,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:174,safety,test,test,174,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:250,safety,test,test,250,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:267,safety,compl,complete,267,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:366,safety,test,test,366,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:394,safety,test,test,394,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:425,safety,test,test,425,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:267,security,compl,complete,267,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:9,testability,test,test,9,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:67,testability,test,test,67,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:122,testability,test,test,122,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:174,testability,test,test,174,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:250,testability,test,test,250,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:282,testability,coverag,coverage,282,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:366,testability,test,test,366,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:394,testability,test,test,394,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:425,testability,test,test,425,"> Remove test/CodeUnloading/RunAgainstClangTestSuite. > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply. the load/unload to all the clang test to have as ""complete"" of a coverage as. possible:. ```. commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. Add a test that loads every clang test and unloads it. ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:94,deployability,unload,unload,94,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:280,deployability,unload,unloads,280,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:89,energy efficiency,load,load,89,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:253,energy efficiency,load,loads,253,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:89,performance,load,load,89,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:253,performance,load,loads,253,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:43,safety,test,test,43,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:118,safety,test,test,118,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:135,safety,compl,complete,135,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:243,safety,test,test,243,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:271,safety,test,test,271,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:371,safety,accid,accident,371,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:452,safety,test,test,452,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:135,security,compl,complete,135,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:43,testability,test,test,43,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:118,testability,test,test,118,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:150,testability,coverag,coverage,150,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:243,testability,test,test,243,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:271,testability,test,test,271,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:452,testability,test,test,452,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:. > . > ```. > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac. > Add a test that loads every clang test and unloads it. > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:118,safety,accid,accident,118,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:243,safety,test,test,243,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:312,safety,accid,accident,312,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:338,safety,test,test,338,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:243,testability,test,test,243,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16258:338,testability,test,test,338,"> That would be commit https://github.com/root-project/root/commit/2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit https://github.com/root-project/root/commit/180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"". No explanation, so I would also assume by accident. Conclusion: the test was never ""properly"" ported to CMake, Yikes :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16258
https://github.com/root-project/root/pull/16263:34,availability,failur,failures,34,All comments above addressed. The failures are a glitch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16263:34,deployability,fail,failures,34,All comments above addressed. The failures are a glitch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16263:34,performance,failur,failures,34,All comments above addressed. The failures are a glitch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16263:34,reliability,fail,failures,34,All comments above addressed. The failures are a glitch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16263:2,safety,test,tested,2,I tested ubuntu24 on lxplus and everything works out of the box with the new instructions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16263:2,testability,test,tested,2,I tested ubuntu24 on lxplus and everything works out of the box with the new instructions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16263
https://github.com/root-project/root/pull/16271:11,deployability,build,build,11,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:29,deployability,build,build,29,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:47,deployability,build,build,47,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:65,deployability,build,build,65,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:87,deployability,build,build,87,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:207,testability,simpl,simply,207,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:207,usability,simpl,simply,207,@bellenot `build/win/cl.sh			build/win/f77.sh		build/win/ld.sh			build/win/makelib.sh		build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:13,deployability,build,build,13,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:29,deployability,build,build,29,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:46,deployability,build,build,46,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:62,deployability,build,build,62,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:83,deployability,build,build,83,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:203,testability,simpl,simply,203,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16271:203,usability,simpl,simply,203,"> @bellenot `build/win/cl.sh build/win/f77.sh build/win/ld.sh build/win/makelib.sh build/win/makeresource.sh` seems to have only been using in the `Makefile` and seem no longer used. Would we be able to simply removed them? Well, they can still be used by people using cygwin (if any...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16271
https://github.com/root-project/root/pull/16272:30,deployability,patch,patch,30,Thanks @linev . Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16272
https://github.com/root-project/root/pull/16272:30,safety,patch,patch,30,Thanks @linev . Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16272
https://github.com/root-project/root/pull/16272:53,safety,test,tests,53,Thanks @linev . Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16272
https://github.com/root-project/root/pull/16272:30,security,patch,patch,30,Thanks @linev . Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16272
https://github.com/root-project/root/pull/16272:53,testability,test,tests,53,Thanks @linev . Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16272
https://github.com/root-project/root/pull/16274:0,energy efficiency,Cool,Cool,0,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:114,safety,avoid,avoid,114,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:93,testability,simpl,simplest,93,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:93,usability,simpl,simplest,93,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16274:156,usability,close,close,156,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16274
https://github.com/root-project/root/pull/16278:45,availability,state,state,45,Merging to get the nightlies back in a green state ASAP.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16278
https://github.com/root-project/root/pull/16278:39,energy efficiency,green,green,39,Merging to get the nightlies back in a green state ASAP.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16278
https://github.com/root-project/root/pull/16278:45,integrability,state,state,45,Merging to get the nightlies back in a green state ASAP.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16278
https://github.com/root-project/root/pull/16279:409,availability,error,error,409,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:592,availability,error,error,592,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:86,deployability,build,build,86,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:334,deployability,build,build,334,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:348,integrability,configur,configured,348,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:415,integrability,messag,messages,415,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:415,interoperability,messag,messages,415,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:348,modifiability,configur,configured,348,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:409,performance,error,error,409,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:592,performance,error,error,592,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:51,reliability,doe,doesn,51,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:98,safety,test,testing,98,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:226,safety,test,testing,226,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:260,safety,Test,TestSupport,260,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:302,safety,test,test,302,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:387,safety,test,test,387,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:409,safety,error,error,409,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:533,safety,Test,TestSupport,533,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:592,safety,error,error,592,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:348,security,configur,configured,348,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:98,testability,test,testing,98,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:226,testability,test,testing,226,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:260,testability,Test,TestSupport,260,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:302,testability,test,test,302,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:387,testability,test,test,387,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:533,testability,Test,TestSupport,533,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:409,usability,error,error,409,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16279:592,usability,error,error,592,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:. > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16279
https://github.com/root-project/root/pull/16284:185,integrability,pub,public,185,"I'm surprised it works with the `extern template` after it has been used :sweat_smile: maybe move the `extern template class RSimpleField<bool>` line before `class RField<bool> final : public RSimpleField<bool>`, just to be sure it stays that way. For the commit message, can you please use my `jonas.hahnfeld@cern.ch` email address? Thanks for adding me :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16284:263,integrability,messag,message,263,"I'm surprised it works with the `extern template` after it has been used :sweat_smile: maybe move the `extern template class RSimpleField<bool>` line before `class RField<bool> final : public RSimpleField<bool>`, just to be sure it stays that way. For the commit message, can you please use my `jonas.hahnfeld@cern.ch` email address? Thanks for adding me :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16284:263,interoperability,messag,message,263,"I'm surprised it works with the `extern template` after it has been used :sweat_smile: maybe move the `extern template class RSimpleField<bool>` line before `class RField<bool> final : public RSimpleField<bool>`, just to be sure it stays that way. For the commit message, can you please use my `jonas.hahnfeld@cern.ch` email address? Thanks for adding me :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16284
https://github.com/root-project/root/pull/16285:33,availability,failur,failures,33,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:14,deployability,fail,failing,14,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:33,deployability,fail,failures,33,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:33,performance,failur,failures,33,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:14,reliability,fail,failing,14,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:33,reliability,fail,failures,33,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:22,safety,test,tests,22,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:22,testability,test,tests,22,restarted the failing tests. The failures seemed unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:19,availability,failur,failure,19,"Unfortunately, the failure on mac13 is not unrelated :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:19,deployability,fail,failure,19,"Unfortunately, the failure on mac13 is not unrelated :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:19,performance,failur,failure,19,"Unfortunately, the failure on mac13 is not unrelated :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16285:19,reliability,fail,failure,19,"Unfortunately, the failure on mac13 is not unrelated :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16285
https://github.com/root-project/root/pull/16289:15,energy efficiency,current,currently,15,"So, neither is currently used. Thanks a lot for these changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16289
https://github.com/root-project/root/pull/16289:121,energy efficiency,current,currently,121,"> -> Are makereleasenotes.sh and pandoc-jira.sh still used or have they been replaced by the new CI? > <- So, neither is currently used. Thanks a lot for these changes. Can we please remove them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16289
https://github.com/root-project/root/pull/16291:19,deployability,observ,observed,19,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:56,deployability,version,version,56,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:140,deployability,resourc,resources,140,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:253,deployability,resourc,resources,253,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:370,deployability,resourc,resources,370,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:140,energy efficiency,resourc,resources,140,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:253,energy efficiency,resourc,resources,253,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:370,energy efficiency,resourc,resources,370,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:56,integrability,version,version,56,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:127,interoperability,distribut,distribution,127,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:240,interoperability,distribut,distribution,240,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:357,interoperability,distribut,distribution,357,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:56,modifiability,version,version,56,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:140,performance,resourc,resources,140,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:253,performance,resourc,resources,253,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:370,performance,resourc,resources,370,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:140,safety,resourc,resources,140,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:253,safety,resourc,resources,253,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:370,safety,resourc,resources,370,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:19,testability,observ,observed,19,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:140,testability,resourc,resources,140,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:253,testability,resourc,resources,253,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:370,testability,resourc,resources,370,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:154,usability,ui,ui,154,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:267,usability,ui,ui,267,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16291:384,usability,ui,ui,384,A similar issue is observed with the zero-length files (version 6.32.04):. ```. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/unified/themes/base/img-RTL/create.txt. WARNING: zero length file opt/ROOT-6.32.04/ui5/distribution/resources/sap/ui/layout/themes/base/img/create.txt. WARNING: zero length file opt/ROOT-6.32.04/tutorials/doc/v602/index.md. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16291
https://github.com/root-project/root/pull/16294:111,reliability,doe,does,111,Suggestion: propose change also upstream https://www.desy.de/~sschmitt/tunfold.html. So that future copy paste does not overwrite this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16294
https://github.com/root-project/root/pull/16296:24,availability,down,download,24,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:36,deployability,configurat,configuration,36,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:36,integrability,configur,configuration,36,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:36,modifiability,configur,configuration,36,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:50,performance,time,time,50,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:36,security,configur,configuration,36,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/pull/16296:84,deployability,releas,release,84,"Note that we need to land https://github.com/compiler-research/CppInterOp/pull/318, release and then merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16296
https://github.com/root-project/root/issues/16298:890,interoperability,convers,conversion,890,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:1061,interoperability,compatib,compatible,1061,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:211,safety,input,input,211,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:233,safety,input,input,233,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:296,safety,test,test,296,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:660,safety,test,tests,660,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:296,testability,test,test,296,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:660,testability,test,tests,660,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:211,usability,input,input,211,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:233,usability,input,input,233,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/issues/16298:747,usability,clear,clearer,747,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:. ```Python. import ROOT. import cppyy. cppyy.cppdef("""""". void foo(std::string_view input) { std::cout << input << std::endl; }. """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string). ```. You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:. https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:. ```python. for col in cols:. print(col). print( tmprdf.GetColumnType(str(col) )). ```. This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16298
https://github.com/root-project/root/pull/16309:1215,availability,state,statements,1215,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:87,deployability,API,API,87,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:274,energy efficiency,Load,LoadSharedLibs,274,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:87,integrability,API,API,87,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:1215,integrability,state,statements,1215,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:87,interoperability,API,API,87,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:237,interoperability,share,shared,237,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:379,interoperability,distribut,distributed,379,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:438,interoperability,Distribut,Distribute,438,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:606,interoperability,Distribut,Distribute,606,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:1038,interoperability,distribut,distributed,1038,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:1066,interoperability,Distribut,Distributed,1066,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:1078,interoperability,Distribut,DistributeCode,1078,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:274,performance,Load,LoadSharedLibs,274,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:75,usability,user,user-facing,75,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:338,usability,hint,hint,338,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:370,usability,tool,tool,370,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:473,usability,clear,clear,473,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:574,usability,Person,Personally,574,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:665,usability,person,person,665,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:855,usability,help,help,855,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/pull/16309:860,usability,guid,guide,860,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example. > . > ```python. > # If you do this in your local RDataFrame script. > ROOT.gInterpreter.Declare(""my_code""). > df.Define(...). > . > # Do this in distributed RDF. > ROOT.RDF.Distributed.DistributeCode(""my_code""). > df.Define(...). > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16309
https://github.com/root-project/root/issues/16312:82,deployability,stack,stacktrace,82,"Can you give us a bit more information? What would be useful, if possible:. - The stacktrace from the segfault. - A description on how to set up the corresponding ALICE environment so that we can look at the dictionaries and headers. - The ROOT file that caused the crash. Is it confirmed that the same data serialized on ARM does not cause a crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:326,reliability,doe,does,326,"Can you give us a bit more information? What would be useful, if possible:. - The stacktrace from the segfault. - A description on how to set up the corresponding ALICE environment so that we can look at the dictionaries and headers. - The ROOT file that caused the crash. Is it confirmed that the same data serialized on ARM does not cause a crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:279,usability,confirm,confirmed,279,"Can you give us a bit more information? What would be useful, if possible:. - The stacktrace from the segfault. - A description on how to set up the corresponding ALICE environment so that we can look at the dictionaries and headers. - The ROOT file that caused the crash. Is it confirmed that the same data serialized on ARM does not cause a crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:114,reliability,doe,does,114,For the file:. https://cernbox.cern.ch/s/MXkLwJLm61rckhj. I **cannot** confirm if the same data serialised on ARM does not cause a crash.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:71,usability,confirm,confirm,71,For the file:. https://cernbox.cern.ch/s/MXkLwJLm61rckhj. I **cannot** confirm if the same data serialised on ARM does not cause a crash.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3792,availability,Servic,ServiceRegistryRef,3792,"r const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4072,availability,Servic,ServiceRegistryRef,4072,"plate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4642,availability,State,State,4642,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4667,availability,State,State,4667,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4735,availability,State,State,4735,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4885,availability,State,State,4885,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4990,availability,State,State,4990,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5067,availability,State,State,5067,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5101,availability,operat,operator,5101,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5122,availability,State,State,5122,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3792,deployability,Servic,ServiceRegistryRef,3792,"r const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4072,deployability,Servic,ServiceRegistryRef,4072,"plate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5149,deployability,stack,stacktraces,5149,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2920,energy efficiency,gpu,gpu,2920,":ApplySequence(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2925,energy efficiency,GPU,GPURecoWorkflowSpec,2925,"e(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [106494",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2969,energy efficiency,gpu,gpu,2969,"nce const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2974,energy efficiency,GPU,GPUCalibObjectsTemplate,2974,"d*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3002,energy efficiency,gpu,gpu,3002,"tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Fram",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3058,energy efficiency,gpu,gpu,3058,"-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3063,energy efficiency,GPU,GPUCalibObjectsTemplate,3063,"o.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::Ser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3091,energy efficiency,gpu,gpu,3091,"e::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3112,energy efficiency,gpu,gpu,3112,"lass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3117,energy efficiency,GPU,GPURecoWorkflowSpec,3117,"void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3251,energy efficiency,gpu,gpu,3251,"bjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3256,energy efficiency,GPU,GPURecoWorkflowSpec,3256,"ss const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3331,energy efficiency,gpu,gpu,3331,"6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3336,energy efficiency,GPU,GPURecoWorkflowSpec,3336,"1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3470,energy efficiency,gpu,gpu,3470,"_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3475,energy efficiency,GPU,GPURecoWorkflowSpec,3475,"ev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3871,energy efficiency,alloc,allocator,3871,"ev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3792,integrability,Servic,ServiceRegistryRef,3792,"r const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4072,integrability,Servic,ServiceRegistryRef,4072,"plate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4642,integrability,State,State,4642,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4667,integrability,State,State,4667,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4735,integrability,State,State,4735,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4885,integrability,State,State,4885,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4990,integrability,State,State,4990,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5067,integrability,State,State,5067,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5122,integrability,State,State,5122,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2547,modifiability,deco,decodeCCDB,2547,"oot/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: int TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3792,modifiability,Servic,ServiceRegistryRef,3792,"r const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4072,modifiability,Servic,ServiceRegistryRef,4072,"plate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2920,performance,gpu,gpu,2920,":ApplySequence(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2925,performance,GPU,GPURecoWorkflowSpec,2925,"e(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [106494",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2969,performance,gpu,gpu,2969,"nce const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2974,performance,GPU,GPUCalibObjectsTemplate,2974,"d*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3002,performance,gpu,gpu,3002,"tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Fram",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3058,performance,gpu,gpu,3058,"-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3063,performance,GPU,GPUCalibObjectsTemplate,3063,"o.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::Ser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3091,performance,gpu,gpu,3091,"e::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3112,performance,gpu,gpu,3112,"lass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3117,performance,GPU,GPURecoWorkflowSpec,3117,"void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3251,performance,gpu,gpu,3251,"bjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3256,performance,GPU,GPURecoWorkflowSpec,3256,"ss const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3331,performance,gpu,gpu,3331,"6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3336,performance,GPU,GPURecoWorkflowSpec,3336,"1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3470,performance,gpu,gpu,3470,"_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3475,performance,GPU,GPURecoWorkflowSpec,3475,"ev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5224,performance,memor,memory,5224,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2731,safety,Input,InputRecord,2731,"ectWiseFastArray>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2731,usability,Input,InputRecord,2731,"ectWiseFastArray>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TKey::ReadObjectAny(TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TDirectoryFile::GetObjectChecked(char const*, TClass const*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataRefUtils::decodeCCDB(o2::framework::DataRef const&, std::type_info const&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: decltype(auto) o2::framework::InputRecord::get<o2::tpc::CalDet<o2::tpc::PadFlags>*, char const*>(char const*, int) const. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: bool o2::gpu::GPURecoWorkflowSpec::fetchCalibsCCDBTPC<o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr> >(o2::framework::ProcessingContext&, o2::gpu::GPUCalibObjectsTemplate<o2::gpu::ConstPtr>&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5224,usability,memor,memory,5224,"u::GPURecoWorkflowSpec::doCalibUpdates(o2::framework::ProcessingContext&, o2::gpu::GPURecoWorkflowSpec::calibObjectStruct&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2GPUWorkflow.so: o2::gpu::GPURecoWorkflowSpec::run(o2::framework::ProcessingContext&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: ?? ??:0. [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::tryDispatchComputation(o2::framework::ServiceRegistryRef, std::vector<o2::framework::DataRelayer::RecordAction, std::allocator<o2::framework::DataRelayer::RecordAction> >&). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::doRun(o2::framework::ServiceRegistryRef). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::run_callback(uv_work_s*). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2Framework.so: o2::framework::DataProcessingDevice::Run(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: fair::mq::Device::RunWrapper(). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State). [1064949:tpc-tracker]: /root/src/sw/slc9_aarch64/FairMQ/v1.8.4-2/lib/libfairmq.so.1.8.4: boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State). ```. is one of the stacktraces. It actually dies in different ways, most likely there is some memory corruption going on...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:79,usability,custom,custom,79,"For the ALICE environment, the easiest is probably sitting together. It's on a custom machine in my private area.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:26,reliability,doe,does,26,(Side note: `MakeProject` does not reconstruct the enums with the correct underlying type),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:8,deployability,stack,stacktrace,8,"Another stacktrace which seems to be related to this is:. ```. [1500611:internal-dpl-ccdb-backend]: Executable is /root/src/sw/slc9_aarch64/O2/dev-local1/bin/o2-tpc-reco-workflow. [1500611:internal-dpl-ccdb-backend]: linux-vdso.so.1: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: [0xfff3cae9b014]: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: [0xfff3cae9d7f0]: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParseImplRecurse(char const*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2530,deployability,Build,BuildCheck,2530,"Cling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3169,deployability,contain,container,3169,"td::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5351,deployability,contain,container,5351,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1837,energy efficiency,alloc,allocator,1837,"cdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParseImplRecurse(char const*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1925,energy efficiency,alloc,allocator,1925," [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParseImplRecurse(char const*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2153,energy efficiency,alloc,allocator,2153,"00611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParseImplRecurse(char const*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3127,energy efficiency,load,loadFileToMemory,3127,"its<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3281,energy efficiency,alloc,allocator,3281,"rch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3378,energy efficiency,alloc,allocator,3378,"ned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3461,energy efficiency,alloc,allocator,3461,"rch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3552,energy efficiency,alloc,allocator,3552,"1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3578,energy efficiency,alloc,allocator,3578,"backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, bo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3662,energy efficiency,alloc,allocator,3662,"::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3749,energy efficiency,alloc,allocator,3749,"OT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:intern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3982,energy efficiency,alloc,allocator,3982," const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4085,energy efficiency,alloc,allocator,4085,"lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4166,energy efficiency,alloc,allocator,4166,"ntainer::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::Req",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4258,energy efficiency,alloc,allocator,4258,"raits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4284,energy efficiency,alloc,allocator,4284,"r<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4366,energy efficiency,alloc,allocator,4366,", std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::poly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4455,energy efficiency,alloc,allocator,4455,":allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4543,energy efficiency,alloc,allocator,4543,"td::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4706,energy efficiency,alloc,allocator,4706,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5137,energy efficiency,alloc,allocat,5137,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5309,energy efficiency,load,loadFileToMemory,5309,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5463,energy efficiency,alloc,allocator,5463,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5560,energy efficiency,alloc,allocator,5560,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3127,performance,load,loadFileToMemory,3127,"its<char>, std:. :allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCore.so.6.32: TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TStreamerInfo::BuildCheck(TFile*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::ReadStreamerInfo(). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TFile::Init(bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libRIO.so.6.32: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basi. c_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5309,performance,load,loadFileToMemory,5309,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:170,usability,workflow,workflow,170,"Another stacktrace which seems to be related to this is:. ```. [1500611:internal-dpl-ccdb-backend]: Executable is /root/src/sw/slc9_aarch64/O2/dev-local1/bin/o2-tpc-reco-workflow. [1500611:internal-dpl-ccdb-backend]: linux-vdso.so.1: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: [0xfff3cae9b014]: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: [0xfff3cae9d7f0]: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ?? ??:0. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParseImplRecurse(char const*, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TCling::AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: TClingLookupHelper__AutoParse(char const*). [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/ROOT/v6-32-02-alice1-1/lib/libCling.so: ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::. basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool). [1500611:internal-dpl-ccdb-backend]: /root/src/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:4853,usability,navigat,navigateSourcesAndLoadFile,4853,"__cxx11::basic_s. tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::. allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,. std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con. st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con. tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*). const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat. or<o2::ccdb::CcdbApi::RequestContext> >&) const. [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char. > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1932,deployability,Build,BuildCheck,1932,"<cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2245,deployability,contain,container,2245,"(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3580,deployability,contain,container,3580,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1035,energy efficiency,alloc,allocator,1035,"eturned by backtrace can be decoded by GDB to:. ```. $4 = {0xffffac196fb0 <handle_crash(int)+48>, 0xffffb2f727f0 <__kernel_rt_sigreturn>, 0xfff3ea6f5014, 0xfff3ea6f77f0,. 0xffff9e97b198 <(anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&)+2392>,. 0xffff9d4b0de0 <cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&)+272>, 0xffff9d435f78 <cling::Interpreter::executeTransaction(cling::Transaction&)+40>,. 0xffff9d4c0e30 <cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool)+768>,. 0xffff9d4c398c <cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&)+108>,. 0xffff9d433d80 <cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1495,energy efficiency,alloc,allocator,1495,"0xffff9d4c0e30 <cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool)+768>,. 0xffff9d4c398c <cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&)+108>,. 0xffff9d433d80 <cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1583,energy efficiency,alloc,allocator,1583,"Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool)+768>,. 0xffff9d4c398c <cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&)+108>,. 0xffff9d433d80 <cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1724,energy efficiency,alloc,allocator,1724,"ransaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool)+768>,. 0xffff9d4c398c <cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&)+108>,. 0xffff9d433d80 <cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2203,energy efficiency,load,loadFileToMemory,2203,"400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2355,energy efficiency,alloc,allocator,2355,"etaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2452,energy efficiency,alloc,allocator,2452,"ng<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2533,energy efficiency,alloc,allocator,2533,"ic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2624,energy efficiency,alloc,allocator,2624,". <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2650,energy efficiency,alloc,allocator,2650,"edName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2732,energy efficiency,alloc,allocator,2732,"r> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2819,energy efficiency,alloc,allocator,2819,"lass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2977,energy efficiency,alloc,allocator,2977,"le::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3080,energy efficiency,alloc,allocator,3080,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3161,energy efficiency,alloc,allocator,3161,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3252,energy efficiency,alloc,allocator,3252,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3278,energy efficiency,alloc,allocator,3278,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3360,energy efficiency,alloc,allocator,3360,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3447,energy efficiency,alloc,allocator,3447,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3535,energy efficiency,alloc,allocator,3535,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3696,energy efficiency,alloc,allocator,3696,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3980,energy efficiency,alloc,allocator,3980,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:68,modifiability,deco,decoded,68,"Interestingly enough, the actual array returned by backtrace can be decoded by GDB to:. ```. $4 = {0xffffac196fb0 <handle_crash(int)+48>, 0xffffb2f727f0 <__kernel_rt_sigreturn>, 0xfff3ea6f5014, 0xfff3ea6f77f0,. 0xffff9e97b198 <(anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&)+2392>,. 0xffff9d4b0de0 <cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&)+272>, 0xffff9d435f78 <cling::Interpreter::executeTransaction(cling::Transaction&)+40>,. 0xffff9d4c0e30 <cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool)+768>,. 0xffff9d4c398c <cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&)+108>,. 0xffff9d433d80 <cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+176>, 0xffff9d36b5f8. <ExecAutoParse(char const*, Bool_t, cling::Interpreter*)+568>, 0xffff9d36cf48 <TCling::AutoParseImplRecurse(char const*, bool)+1400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:2203,performance,load,loadFileToMemory,2203,"400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,. 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44. <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c. <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58. <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,. 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:3770,usability,navigat,navigateSourcesAndLoadFile,3770,"+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4. <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,. 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const+936>,. 0xffffac452100 <o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*) const+192>,. 0xffffac4524d0 <o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocator<o2::ccdb::CcdbApi::RequestContext> >&) const+240>,. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:595,availability,error,error,595,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:321,deployability,contain,contains,321,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:514,deployability,stack,stacktrace,514,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:697,deployability,build,build,697,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:220,energy efficiency,optim,optimized,220,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:398,integrability,Sub,Subset,398,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:220,performance,optimiz,optimized,220,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:595,performance,error,error,595,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:237,reliability,doe,does,237,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:595,safety,error,error,595,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:41,security,session,session,41,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:254,usability,indicat,indicate,254,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:595,usability,error,error,595,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac. - The streamer info output. ```. [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. ```. does not seem to indicate a problem because the same list of streamer elements also contains the expected. ```. o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type. ```. - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries. - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:158,interoperability,prox,proxy,158,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:180,interoperability,prox,proxy,180,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:345,performance,memor,memory,345,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:388,performance,memor,memory,388,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:345,usability,memor,memory,345,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:388,usability,memor,memory,388,"Further debugging revealed a deeper issue that seem to only by chance surface on ARM/Linux:. Writing or reading a vector of enums goes through the collection proxy. The collection proxy will use `WriteFastArray` / `ReadFastArray` of `kInt_t`, neglecting the actual underlying type of the enum. At some point in the read/write chain, this causes memory reads/writes beyond the limits of a memory array.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:136,availability,down,down,136,"I think the cause is https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L404 (and similar lines further down), that hard-code the enum underlying type to int. When fixing, I think we need to take care of what happens to files already written out with the wrong enum width.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:5,testability,understand,understand,5,Do I understand correctly this affects only scoped enums within a vector? Can I simply fix it on my side by moving to `enum class Foo : int {}`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:80,testability,simpl,simply,80,Do I understand correctly this affects only scoped enums within a vector? Can I simply fix it on my side by moving to `enum class Foo : int {}`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:80,usability,simpl,simply,80,Do I understand correctly this affects only scoped enums within a vector? Can I simply fix it on my side by moving to `enum class Foo : int {}`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:155,safety,test,tested,155,"Although: I'm not exactly sure if already existing files that were serialized with a shorter enum correctly read back. I _think_ yes, but that needs to be tested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:155,testability,test,tested,155,"Although: I'm not exactly sure if already existing files that were serialized with a shorter enum correctly read back. I _think_ yes, but that needs to be tested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:157,safety,test,tested,157,"> Although: I'm not exactly sure if already existing files that were serialized with a shorter enum correctly read back. I _think_ yes, but that needs to be tested. This I can try on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:157,testability,test,tested,157,"> Although: I'm not exactly sure if already existing files that were serialized with a shorter enum correctly read back. I _think_ yes, but that needs to be tested. This I can try on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:322,deployability,patch,patch,322,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:733,deployability,patch,patch,733,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:951,deployability,patch,patch,951,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:807,performance,disk,disk,807,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:924,performance,disk,disk,924,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:160,safety,test,test,160,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:322,safety,patch,patch,322,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:733,safety,patch,patch,733,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:951,safety,patch,patch,951,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:322,security,patch,patch,322,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:733,security,patch,patch,733,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:951,security,patch,patch,951,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:160,testability,test,test,160,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:708,testability,emul,emulated,708,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:16,usability,minim,minimal,16,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:37,usability,minim,minimalTestVectorOfEnums,37,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:89,usability,user,user-attachments,89,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:121,usability,minim,minimalTestVectorOfEnums,121,"I'm attaching a minimal reproducer. [minimalTestVectorOfEnums.tar.gz](https://github.com/user-attachments/files/16814218/minimalTestVectorOfEnums.tar.gz). This test returns (wrongly). ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 4. 0 0 23824 0. ```. With a patch to [`TGenCollectionProxy::Value`](https://github.com/jblomer/root/commit/d38fae6413abccfd7f384a98ac2a8853750ceae3), the result is correct:. ```. Size of PadFlags: 2. Enum underlying type: 12. mFlags size before writing: 2. mFlags size after reading: 2. 0 0. ```. I think the next steps should be discussed with @pcanal. In particular:. - What about the cases when we only have an emulated enum? With this patch in place, we cannot just assume anymore that this will be an int on disk. - In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:34,performance,I/O,I/O,34,"AFAICT, neither TTree nor RNTuple I/O are affected by this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:81,energy efficiency,optim,optimized,81,"> [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. > as I would have expected it to be len=1. Can you explain me what is going on? If the next data member (which should not be listed right after it) is of the same type, `TStreamerInfo` will collate them (note the `optimized` part).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:307,energy efficiency,optim,optimized,307,"> [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. > as I would have expected it to be len=1. Can you explain me what is going on? If the next data member (which should not be listed right after it) is of the same type, `TStreamerInfo` will collate them (note the `optimized` part).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:81,performance,optimiz,optimized,81,"> [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. > as I would have expected it to be len=1. Can you explain me what is going on? If the next data member (which should not be listed right after it) is of the same type, `TStreamerInfo` will collate them (note the `optimized` part).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:307,performance,optimiz,optimized,307,"> [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]. > as I would have expected it to be len=1. Can you explain me what is going on? If the next data member (which should not be listed right after it) is of the same type, `TStreamerInfo` will collate them (note the `optimized` part).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:247,availability,avail,available,247,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:45,performance,I/O,I/O,45,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:247,reliability,availab,available,247,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:247,safety,avail,available,247,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:247,security,availab,available,247,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:116,usability,support,support,116,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:138,deployability,patch,patch,138,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:277,deployability,contain,containing,277,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:395,deployability,version,version,395,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:418,deployability,updat,updated,418,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:395,integrability,version,version,395,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:436,integrability,schema,schema,436,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:343,interoperability,convers,conversion,343,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:395,modifiability,version,version,395,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:111,performance,disk,disk,111,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:138,safety,patch,patch,138,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:418,safety,updat,updated,418,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:138,security,patch,patch,138,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:418,security,updat,updated,418,"> In general, how do we correctly handle vectors of enums with underlying types different than int that are on disk, before and after the patch? With dictionaries, it seems to work fine (for embedded vectors probably not for standalone vector) because the TStreamerInfo of the containing class records the underlying type and thus know when a conversion is needed (The corollary is that a class version number must be updated (to allow schema evolution) if one of the enums type it uses changes its underlying type).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:94,testability,simpl,simply,94,"For the record, as you might have seen in https://github.com/AliceO2Group/AliceO2/pull/13464, simply changing the types breaks reading back old files (i.e. two shorts are read in an int). Could you comment when do you expect to have a fix for this on your side which applies to 6.32.2 and if it will allow old code to still read new data (and viceversa new code / old data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:94,usability,simpl,simply,94,"For the record, as you might have seen in https://github.com/AliceO2Group/AliceO2/pull/13464, simply changing the types breaks reading back old files (i.e. two shorts are read in an int). Could you comment when do you expect to have a fix for this on your side which applies to 6.32.2 and if it will allow old code to still read new data (and viceversa new code / old data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:919,deployability,contain,container,919,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1008,deployability,contain,container,1008,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:375,energy efficiency,Load,LoadEnumCollection,375,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:759,energy efficiency,Load,LoadEnumCollection,759,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:645,integrability,Event,Event,645,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:690,integrability,Event,Event,690,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:375,performance,Load,LoadEnumCollection,375,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:759,performance,Load,LoadEnumCollection,759,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:620,reliability,pra,pragma,620,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:822,reliability,doe,does,822,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:652,security,checksum,checksums,652,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:255,usability,minim,minimal,255,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:884,usability,minim,minimal,884,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:. ```. template <typename E>. void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums). {. constexpr size_t delta = sizeof(int)/sizeof(E);. const size_t nvalues = onfile.size() / delta;. onfile.resize(nvalues);. std::swap(onfile, enums);. };. ```. ```. #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }"". ```. However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:1204,modifiability,paramet,parameters,1204,"The following custom Streamer works around the issue:. ```. template <typename Flags>. inline void CalArray<Flags>::Streamer(TBuffer &R__b). {. // Stream an object of class CalArray<PadFlags>. if (R__b.IsReading()) {. UInt_t R__s, R__c;. Version_t R__v = R__b.ReadVersion(&R__s, &R__c);. if (R__v <= 3) {. {. UInt_t start, count;. Version_t vers = R__b.ReadVersion(&start, &count);. std::vector<int> R__stl;. R__stl.clear();. int R__n;. R__b >> R__n;. R__stl.reserve(R__n);. for (int R__i = 0; R__i < R__n; R__i++) {. Int_t readtemp;. R__b >> readtemp;. R__stl.push_back(readtemp);. }. R__b.CheckByteCount(start, count, ""stl collection of enums"");. mFlags.clear();. auto data = reinterpret_cast<unsigned short*>(R__stl.data());. constexpr size_t delta = sizeof(int)/sizeof(Flags);. for(int i = 0; i < R__n; ++i). mFlags.push_back(static_cast<PadFlags>( data[i] ));. }. int tmp;. R__b >> tmp;. mPadSubset = static_cast<PadSubset>(tmp);. R__b.CheckByteCount(R__s, R__c, CalArray::IsA());. } else {. R__b.ReadClassBuffer(CalArray<Flags>::Class(),this, R__v, R__s, R__c);. }. } else {. R__b.WriteClassBuffer(CalArray<Flags>::Class(),this);. }. }. ```. [Call to `ReadClassBuffer` was corrected to add missing parameters]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:14,usability,custom,custom,14,"The following custom Streamer works around the issue:. ```. template <typename Flags>. inline void CalArray<Flags>::Streamer(TBuffer &R__b). {. // Stream an object of class CalArray<PadFlags>. if (R__b.IsReading()) {. UInt_t R__s, R__c;. Version_t R__v = R__b.ReadVersion(&R__s, &R__c);. if (R__v <= 3) {. {. UInt_t start, count;. Version_t vers = R__b.ReadVersion(&start, &count);. std::vector<int> R__stl;. R__stl.clear();. int R__n;. R__b >> R__n;. R__stl.reserve(R__n);. for (int R__i = 0; R__i < R__n; R__i++) {. Int_t readtemp;. R__b >> readtemp;. R__stl.push_back(readtemp);. }. R__b.CheckByteCount(start, count, ""stl collection of enums"");. mFlags.clear();. auto data = reinterpret_cast<unsigned short*>(R__stl.data());. constexpr size_t delta = sizeof(int)/sizeof(Flags);. for(int i = 0; i < R__n; ++i). mFlags.push_back(static_cast<PadFlags>( data[i] ));. }. int tmp;. R__b >> tmp;. mPadSubset = static_cast<PadSubset>(tmp);. R__b.CheckByteCount(R__s, R__c, CalArray::IsA());. } else {. R__b.ReadClassBuffer(CalArray<Flags>::Class(),this, R__v, R__s, R__c);. }. } else {. R__b.WriteClassBuffer(CalArray<Flags>::Class(),this);. }. }. ```. [Call to `ReadClassBuffer` was corrected to add missing parameters]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:416,usability,clear,clear,416,"The following custom Streamer works around the issue:. ```. template <typename Flags>. inline void CalArray<Flags>::Streamer(TBuffer &R__b). {. // Stream an object of class CalArray<PadFlags>. if (R__b.IsReading()) {. UInt_t R__s, R__c;. Version_t R__v = R__b.ReadVersion(&R__s, &R__c);. if (R__v <= 3) {. {. UInt_t start, count;. Version_t vers = R__b.ReadVersion(&start, &count);. std::vector<int> R__stl;. R__stl.clear();. int R__n;. R__b >> R__n;. R__stl.reserve(R__n);. for (int R__i = 0; R__i < R__n; R__i++) {. Int_t readtemp;. R__b >> readtemp;. R__stl.push_back(readtemp);. }. R__b.CheckByteCount(start, count, ""stl collection of enums"");. mFlags.clear();. auto data = reinterpret_cast<unsigned short*>(R__stl.data());. constexpr size_t delta = sizeof(int)/sizeof(Flags);. for(int i = 0; i < R__n; ++i). mFlags.push_back(static_cast<PadFlags>( data[i] ));. }. int tmp;. R__b >> tmp;. mPadSubset = static_cast<PadSubset>(tmp);. R__b.CheckByteCount(R__s, R__c, CalArray::IsA());. } else {. R__b.ReadClassBuffer(CalArray<Flags>::Class(),this, R__v, R__s, R__c);. }. } else {. R__b.WriteClassBuffer(CalArray<Flags>::Class(),this);. }. }. ```. [Call to `ReadClassBuffer` was corrected to add missing parameters]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:656,usability,clear,clear,656,"The following custom Streamer works around the issue:. ```. template <typename Flags>. inline void CalArray<Flags>::Streamer(TBuffer &R__b). {. // Stream an object of class CalArray<PadFlags>. if (R__b.IsReading()) {. UInt_t R__s, R__c;. Version_t R__v = R__b.ReadVersion(&R__s, &R__c);. if (R__v <= 3) {. {. UInt_t start, count;. Version_t vers = R__b.ReadVersion(&start, &count);. std::vector<int> R__stl;. R__stl.clear();. int R__n;. R__b >> R__n;. R__stl.reserve(R__n);. for (int R__i = 0; R__i < R__n; R__i++) {. Int_t readtemp;. R__b >> readtemp;. R__stl.push_back(readtemp);. }. R__b.CheckByteCount(start, count, ""stl collection of enums"");. mFlags.clear();. auto data = reinterpret_cast<unsigned short*>(R__stl.data());. constexpr size_t delta = sizeof(int)/sizeof(Flags);. for(int i = 0; i < R__n; ++i). mFlags.push_back(static_cast<PadFlags>( data[i] ));. }. int tmp;. R__b >> tmp;. mPadSubset = static_cast<PadSubset>(tmp);. R__b.CheckByteCount(R__s, R__c, CalArray::IsA());. } else {. R__b.ReadClassBuffer(CalArray<Flags>::Class(),this, R__v, R__s, R__c);. }. } else {. R__b.WriteClassBuffer(CalArray<Flags>::Class(),this);. }. }. ```. [Call to `ReadClassBuffer` was corrected to add missing parameters]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:65,safety,avoid,avoids,65,Any followup to the bug itself? Will we have a fix in ROOT which avoids a custom streamer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/issues/16312:74,usability,custom,custom,74,Any followup to the bug itself? Will we have a fix in ROOT which avoids a custom streamer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16312
https://github.com/root-project/root/pull/16319:85,integrability,event,eventually,85,@dpiparo @vgvassilev I'd need your opinions here if we want to backport to 6.30 (and eventually 6.28). The changes are more intrusive because we cannot store the `std::unique_ptr` in the lambda...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16319:124,security,intrus,intrusive,124,@dpiparo @vgvassilev I'd need your opinions here if we want to backport to 6.30 (and eventually 6.28). The changes are more intrusive because we cannot store the `std::unique_ptr` in the lambda...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16319
https://github.com/root-project/root/pull/16323:83,energy efficiency,model,models,83,"Thank you very much for this PR! Demonstrating fitting and plotting of HistFactory models in the tutorial in an awesome idea! Indeed, this should replace the fitting and plotting that is right now hardcoded in `MakeModelAndMeasurementFast`, which can then be deprecated:. https://github.com/root-project/root/pull/16336. Can you please make sure that everything done in the former `FitModelAndPlot` function is now demonstrated in the tutorial? Of course, instead of saving the plots to fine and the output to text, you can just show the canvases on the fly and print the text output to the console. That would also ensure that all the output is nicely rendered on the tutorial page. Thanks a lot! By the way, I presented this proposal to the other RooFit developers in the RooFit dev meeting today, and they endorsed it very much.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:83,security,model,models,83,"Thank you very much for this PR! Demonstrating fitting and plotting of HistFactory models in the tutorial in an awesome idea! Indeed, this should replace the fitting and plotting that is right now hardcoded in `MakeModelAndMeasurementFast`, which can then be deprecated:. https://github.com/root-project/root/pull/16336. Can you please make sure that everything done in the former `FitModelAndPlot` function is now demonstrated in the tutorial? Of course, instead of saving the plots to fine and the output to text, you can just show the canvases on the fly and print the text output to the console. That would also ensure that all the output is nicely rendered on the tutorial page. Thanks a lot! By the way, I presented this proposal to the other RooFit developers in the RooFit dev meeting today, and they endorsed it very much.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:197,security,hardcod,hardcoded,197,"Thank you very much for this PR! Demonstrating fitting and plotting of HistFactory models in the tutorial in an awesome idea! Indeed, this should replace the fitting and plotting that is right now hardcoded in `MakeModelAndMeasurementFast`, which can then be deprecated:. https://github.com/root-project/root/pull/16336. Can you please make sure that everything done in the former `FitModelAndPlot` function is now demonstrated in the tutorial? Of course, instead of saving the plots to fine and the output to text, you can just show the canvases on the fly and print the text output to the console. That would also ensure that all the output is nicely rendered on the tutorial page. Thanks a lot! By the way, I presented this proposal to the other RooFit developers in the RooFit dev meeting today, and they endorsed it very much.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:218,availability,redund,redundant,218,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:29,deployability,updat,update,29,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:218,deployability,redundan,redundant,218,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:360,interoperability,format,format,360,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:218,reliability,redundan,redundant,218,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:29,safety,updat,update,29,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:218,safety,redund,redundant,218,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/pull/16323:29,security,updat,update,29,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:. * add you to the list of contributors. * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file. * Code format. * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16323
https://github.com/root-project/root/issues/16327:40,interoperability,share,share,40,"Hi @vgvassilev could you please perhaps share a bit of the motivation you see behind this proposal, in other words the benefits for the project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:252,deployability,instal,installing,252,"Pretty much the same motivation of having new headers in ROOTSYS/include/ROOT. The upshot is that the third party codebase will become clearer of that `TList.h` is a ROOT thing; and more importantly we will define away a class of problems we have when installing ROOT. Right now on some systems we install everything in `/usr/include`, which is not a good practice unless one is libc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:298,deployability,instal,install,298,"Pretty much the same motivation of having new headers in ROOTSYS/include/ROOT. The upshot is that the third party codebase will become clearer of that `TList.h` is a ROOT thing; and more importantly we will define away a class of problems we have when installing ROOT. Right now on some systems we install everything in `/usr/include`, which is not a good practice unless one is libc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:356,reliability,pra,practice,356,"Pretty much the same motivation of having new headers in ROOTSYS/include/ROOT. The upshot is that the third party codebase will become clearer of that `TList.h` is a ROOT thing; and more importantly we will define away a class of problems we have when installing ROOT. Right now on some systems we install everything in `/usr/include`, which is not a good practice unless one is libc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:135,usability,clear,clearer,135,"Pretty much the same motivation of having new headers in ROOTSYS/include/ROOT. The upshot is that the third party codebase will become clearer of that `TList.h` is a ROOT thing; and more importantly we will define away a class of problems we have when installing ROOT. Right now on some systems we install everything in `/usr/include`, which is not a good practice unless one is libc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:108,deployability,modul,modules,108,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:108,modifiability,modul,modules,108,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:2,safety,reme,remember,2,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:108,safety,modul,modules,108,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:130,safety,reme,remember,130,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:32,usability,progress,progress,32,I remember @linev has made some progress in the past with this but then we were blocked by something wrt to modules that I do not remember...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:49,deployability,build,building,49,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:166,deployability,depend,dependencies,166,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:166,integrability,depend,dependencies,166,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:192,integrability,compon,components,192,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:192,interoperability,compon,components,192,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:166,modifiability,depend,dependencies,166,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:192,modifiability,compon,components,192,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:5,performance,time,time,5,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:166,safety,depend,dependencies,166,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:166,testability,depend,dependencies,166,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/issues/16327:208,usability,clear,clear,208,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16327
https://github.com/root-project/root/pull/16332:194,availability,down,down,194,"> Side remark: for the string locator, did we decide on how we can reintroduce it with support for deduplicating URL prefixes at a later point, after fixing the 1.0 spec? I don't think we wrote down anything. The way I imagine it is that the URL template information (base URL etc.) is stored in the yet-to-be-defined S3 anchor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16332
https://github.com/root-project/root/pull/16332:87,usability,support,support,87,"> Side remark: for the string locator, did we decide on how we can reintroduce it with support for deduplicating URL prefixes at a later point, after fixing the 1.0 spec? I don't think we wrote down anything. The way I imagine it is that the URL template information (base URL etc.) is stored in the yet-to-be-defined S3 anchor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16332
https://github.com/root-project/root/pull/16334:125,deployability,build,builds,125,Note that you don't need to use the `ROOFIT_BUILDS_ITSELF` macro here. This is only to avoid dprecation warnings when RooFit builds itself in case one deprecated function calls another deprecated function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:87,safety,avoid,avoid,87,Note that you don't need to use the `ROOFIT_BUILDS_ITSELF` macro here. This is only to avoid dprecation warnings when RooFit builds itself in case one deprecated function calls another deprecated function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:12,availability,failur,failure,12,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:12,deployability,fail,failure,12,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:12,performance,failur,failure,12,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16334:12,reliability,fail,failure,12,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16334
https://github.com/root-project/root/pull/16337:4,availability,failur,failure,4,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:4,deployability,fail,failure,4,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:103,deployability,fail,failing,103,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:111,deployability,build,build,111,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:4,performance,failur,failure,4,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:4,reliability,fail,failure,4,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:103,reliability,fail,failing,103,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:175,safety,review,review,175,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16337:175,testability,review,review,175,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16337
https://github.com/root-project/root/pull/16338:35,deployability,fail,failing,35,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,deployability,configurat,configuration,61,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:152,deployability,Fail,Failed,152,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:195,deployability,Fail,Failed,195,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:320,deployability,version,version,320,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,integrability,configur,configuration,61,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:320,integrability,version,version,320,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:403,integrability,sub,submit,403,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,modifiability,configur,configuration,61,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:320,modifiability,version,version,320,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:35,reliability,fail,failing,35,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:152,reliability,Fail,Failed,152,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:195,reliability,Fail,Failed,195,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:43,safety,test,tests,43,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,security,configur,configuration,61,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:43,testability,test,tests,43,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:336,usability,support,support,336,"Hi @guitargeek @aaronj0, I see two failing tests in my local configuration that I bisected to this change:. ```. 1578 - roottest-python-basic-datatype (Failed). 1670 - roottest-python-cpp-cpp11 (Failed). ```. Reverting the commit makes them pass again. I'm (intentionally) using Python 3.8 from Alma Linux 8, the oldest version that we support IIRC, that's why we maybe didn't see it in the CI. Shall I submit a PR to revert or do you want to investigate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:353,availability,error,error,353,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:86,deployability,fail,fails,86,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:219,deployability,patch,patch,219,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:289,deployability,version,versions,289,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,deployability,log,log,359,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:289,integrability,version,versions,289,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:289,modifiability,version,versions,289,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:353,performance,error,error,353,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:86,reliability,fail,fails,86,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:219,safety,patch,patch,219,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:353,safety,error,error,353,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,safety,log,log,359,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:219,security,patch,patch,219,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,security,log,log,359,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,testability,log,log,359,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:186,usability,user,user,186,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:314,usability,help,helpful,314,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:353,usability,error,error,353,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8... This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:38,availability,error,error,38,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:57,deployability,instal,install,57,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:163,deployability,version,version,163,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:256,deployability,version,version,256,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,deployability,version,versions,359,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:480,deployability,version,versions,480,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:513,deployability,releas,release,513,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:95,integrability,Repositor,Repository,95,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:163,integrability,version,version,163,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:256,integrability,version,version,256,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,integrability,version,versions,359,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:480,integrability,version,versions,480,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:95,interoperability,Repositor,Repository,95,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:163,modifiability,version,version,163,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:256,modifiability,version,version,256,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:359,modifiability,version,versions,359,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:480,modifiability,version,versions,480,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:38,performance,error,error,38,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:38,safety,error,error,38,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:38,usability,error,error,38,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:90,usability,User,User,90,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:185,usability,support,support,185,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:465,usability,support,support,465,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2618,deployability,Updat,UpdateListsOnUnloaded,2618,"timized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2991,deployability,unload,unload,2991,"99. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:389,energy efficiency,optim,optimized,389,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:413,energy efficiency,optim,optimized,413,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:809,energy efficiency,optim,optimized,809,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1053,energy efficiency,core,core,1053,"```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1248,energy efficiency,core,core,1248," #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1485,energy efficiency,core,core,1485,"er/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1627,energy efficiency,optim,optimized,1627,"/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1727,energy efficiency,core,core,1727,":Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:686",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1962,energy efficiency,core,core,1962,"::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2044,energy efficiency,Load,Load,2044,"OT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2098,energy efficiency,core,core,2098,"0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2286,energy efficiency,load,load,2286,"5. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2548,energy efficiency,core,core,2548,"rInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2696,energy efficiency,core,core,2696,". at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2823,energy efficiency,optim,optimized,2823,"tory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:4348,energy efficiency,Load,LoadText,4348,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:4659,energy efficiency,core,core,4659,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:5017,energy efficiency,core,core,5017,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:5202,interoperability,bind,bindings,5202,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:5202,modifiability,bind,bindings,5202,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:389,performance,optimiz,optimized,389,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:413,performance,optimiz,optimized,413,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:809,performance,optimiz,optimized,809,"Running `roottest-python-basic-datatype` under `gdb`:. ```. #0 0x00007ffff63ee52f in raise () from /lib64/libc.so.6. #1 0x00007ffff63c1e65 in abort () from /lib64/libc.so.6. #2 0x00007ffff63c1d39 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff63e6e86 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffeab9b265 in cling::Transaction::addNestedTransaction (this=<optimized out>, nested=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Transaction.cpp:98. #5 0x00007fffeaad2f23 in cling::IncrementalParser::beginTransaction (this=0x555555c3bee0, Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:1627,performance,optimiz,optimized,1627,"/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:496. #6 0x00007fffeaac4776 in cling::Interpreter::PushTransactionRAII::PushTransactionRAII (this=0x7fffffff7338, i=<optimized out>). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:105. #7 0x00007fffeaa5b252 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffff73d0, DC=0x555557208818, interp=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2044,performance,Load,Load,2044,"OT/src/core/metacling/src/TClingMemberIter.cxx:21. #8 0x00007fffeaa57951 in TClingMemberIter::TClingMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0) at /home/jhahnfel/ROOT/src/core/metacling/src/TClingMemberIter.h:145. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2286,performance,load,load,2286,"5. #9 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2765,performance,Multiplex,MultiplexInterpreterCallbacks,2765,"0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2823,performance,optimiz,optimized,2823,"tory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2908,performance,Multiplex,MultiplexInterpreterCallbacks,2908,"singDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:4348,performance,Load,LoadText,4348,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110. #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""). at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2618,safety,Updat,UpdateListsOnUnloaded,2618,"timized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:3404,safety,input,input,3404,".h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:3609,safety,input,input,3609,"ling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:4008,safety,input,input,4008,"5803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2618,security,Updat,UpdateListsOnUnloaded,2618,"timized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2313,usability,tool,toolset-,2313,"ClingDataMemberIter (this=0x7fffffff73b8, interp=0x555555803e60, DC=0x7fffffff6ff0, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.h:66. #10 TClingDataMemberInfo::TClingDataMemberInfo (this=0x55555b2f2b30, interp=0x555555803e60, ci=<optimized out>, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TClingDataMemberInfo.cxx:115. #11 0x00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls). at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599. #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469. #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:3211,usability,Clear,ClearDiagClient,3211," data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true). at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:3404,usability,input,input,3404,".h:837. #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928. #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:3609,usability,input,input,3609,"ling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866. #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109. #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<stri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:4008,usability,input,input,4008,"5803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543. #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true). at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609. #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849. #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369. #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,. input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin. g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001. #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,. text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\. n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513. #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,. code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n. ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:50,deployability,version,version,50,"Thanks! This actually does not work on any python version, since this code block enables the aggregate initializer list constructor for all classes even those in the `std` namespace that don't have them. Then the call to `Cppyy::Compile` does not work since it's invalid. We should do a scope check different from `name.compare(0, 5, ""std::"", 5) != 0` since ROOT drops the `std` namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:50,integrability,version,version,50,"Thanks! This actually does not work on any python version, since this code block enables the aggregate initializer list constructor for all classes even those in the `std` namespace that don't have them. Then the call to `Cppyy::Compile` does not work since it's invalid. We should do a scope check different from `name.compare(0, 5, ""std::"", 5) != 0` since ROOT drops the `std` namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:50,modifiability,version,version,50,"Thanks! This actually does not work on any python version, since this code block enables the aggregate initializer list constructor for all classes even those in the `std` namespace that don't have them. Then the call to `Cppyy::Compile` does not work since it's invalid. We should do a scope check different from `name.compare(0, 5, ""std::"", 5) != 0` since ROOT drops the `std` namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:22,reliability,doe,does,22,"Thanks! This actually does not work on any python version, since this code block enables the aggregate initializer list constructor for all classes even those in the `std` namespace that don't have them. Then the call to `Cppyy::Compile` does not work since it's invalid. We should do a scope check different from `name.compare(0, 5, ""std::"", 5) != 0` since ROOT drops the `std` namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:238,reliability,doe,does,238,"Thanks! This actually does not work on any python version, since this code block enables the aggregate initializer list constructor for all classes even those in the `std` namespace that don't have them. Then the call to `Cppyy::Compile` does not work since it's invalid. We should do a scope check different from `name.compare(0, 5, ""std::"", 5) != 0` since ROOT drops the `std` namespace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:378,availability,state,statement,378,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:34,deployability,fail,failing,34,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:378,integrability,state,statement,378,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:604,interoperability,bind,bindings,604,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:352,modifiability,exten,extending,352,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:604,modifiability,bind,bindings,604,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:34,reliability,fail,failing,34,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:319,reliability,Doe,Does,319,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:42,safety,test,tests,42,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:686,safety,test,test,686,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:42,testability,test,tests,42,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:686,testability,test,test,686,"I suspect that in the case of the failing tests it's more tricky than that. We're dealing with `std::tuple` there, which internally is represented by `TEmulatedTuple` for IO reasons. That's what is tripping up the Pythonization code, which suddenly thinks `std::tuple` is an aggregate just because `TEmulatedTuple` is. Does the crash go away if you're extending the relevant if statement like this? ```python. if (Cppyy::IsAggregate(((CPPClass*)pyclass)->fCppType). && name.compare(0, 6, ""tuple<"", 6) != 0. && name.compare(0, 5, ""std::"", 5) != 0) {. ```. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1723C9-L1723C59. Sorry, I can't test it myself because on my Python 3.8 there is no crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:28,usability,behavi,behavior,28,"Reproducer of the ROOT meta behavior, which rightfully confuses cppyy:. ```txt. root [0] TClass *cl = gROOT->GetClass(""tuple<int,float,string,double>"");. root [1] cl->ClassProperty() && kClassIsAggregate;. (bool) true. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,availability,state,statement,61,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:61,integrability,state,statement,61,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:35,modifiability,exten,extending,35,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:2,reliability,Doe,Does,2,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:106,safety,test,tests,106,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:152,safety,test,tests,152,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:106,testability,test,tests,106,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:152,testability,test,tests,152,"> Does the crash go away if you're extending the relevant if statement like this? Yes, this fixes the two tests on my end AFAICT :tada: I'll re-run all tests now to see if it has any other unintended effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:73,deployability,fail,failing,73,@aaronj0 @guitargeek can we do something about this? The tests are still failing for me :anguished:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:73,reliability,fail,failing,73,@aaronj0 @guitargeek can we do something about this? The tests are still failing for me :anguished:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:57,safety,test,tests,57,@aaronj0 @guitargeek can we do something about this? The tests are still failing for me :anguished:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16338:57,testability,test,tests,57,@aaronj0 @guitargeek can we do something about this? The tests are still failing for me :anguished:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16338
https://github.com/root-project/root/pull/16343:328,availability,cluster,clusters,328,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:435,availability,cluster,clusters,435,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:789,availability,cluster,clusters,789,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1448,availability,cluster,cluster,1448,"the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Threa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2652,availability,cluster,cluster,2652,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:12,deployability,updat,updated,12,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:20,deployability,version,version,20,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:177,deployability,version,version,177,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:321,deployability,stage,staged,321,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:328,deployability,cluster,clusters,328,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:428,deployability,stage,staged,428,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:435,deployability,cluster,clusters,435,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:534,deployability,Stage,StageCluster,534,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:649,deployability,API,API,649,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:782,deployability,stage,staged,782,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:789,deployability,cluster,clusters,789,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1047,deployability,Stage,StageCluster,1047,"scussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1441,deployability,stage,staged,1441,"part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #8999",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1448,deployability,cluster,cluster,1448,"the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Threa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2652,deployability,cluster,cluster,2652,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:20,integrability,version,version,20,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:177,integrability,version,version,177,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:233,integrability,event,eventually,233,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:649,integrability,API,API,649,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1488,integrability,event,events,1488,"e `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1547,integrability,event,events,1547,"CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #499",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1614,integrability,event,events,1614,"ode you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1681,integrability,event,events,1681," perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1775,integrability,event,events,1775,"the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1803,integrability,event,events,1803,"ly done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [6963",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1860,integrability,event,events,1860,"itCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1927,integrability,event,events,1927," gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1994,integrability,event,events,1994,"can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2061,integrability,event,events,2061,"nd `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compres",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2128,integrability,event,events,2128,"hand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2195,integrability,event,events,2195,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2262,integrability,event,events,2262,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2329,integrability,event,events,2329,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2396,integrability,event,events,2396,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2463,integrability,event,events,2463,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:2530,integrability,event,events,2530,"should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999. Thread #1 wrote events #35000 - #44999 as entries #70000 - #79999. Thread #0 wrote events #20000 - #24999 as entries #80000 - #84999. Thread #2 wrote events #70000 - #74999 as entries #85000 - #89999. Thread #3 wrote events #95000 - #99999 as entries #90000 - #94999. Thread #1 wrote events #45000 - #49999 as entries #95000 - #99999. ```. For the writing in blocks, the structure is nicely visible in the cluster ranges (excerpt):. ```. # 12 Entry range: [60000..69638] -- 9639. # Pages: 2. Size on storage: 32229 B. Compression: 2.39. # 13 Entry range: [69639..69999] -- 361. # Pages: 2. Size on storage: 1556 B. Compression: 1.86. # 14 Entry range: [70000..79640] -- 9641. # Pages: 2. Size on storage: 32291 B. Compression: 2.39. # 15 Entry range: [79641..79999] -- 359. # Pages: 2. Size on storage: 1552 B. Compression: 1.85. # 16 Entry range: [80000..84999] -- 5000. # Pages: 2. Size on storage: 16944 B. Compression: 2.36. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:649,interoperability,API,API,649,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:20,modifiability,version,version,20,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:177,modifiability,version,version,177,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:12,safety,updat,updated,12,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:214,safety,review,review,214,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:292,safety,test,test,292,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1141,safety,except,exception,1141,"es compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:12,security,updat,updated,12,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:214,testability,review,review,214,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:225,testability,plan,plan,225,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:292,testability,test,test,292,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:914,usability,user,user,914,"I pushed an updated version, addressing the recent discussions. The first commit is from https://github.com/root-project/root/pull/16391 and changes compared to the original PR version are separate commits to ease review - I plan to eventually squash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16343:1239,usability,efficien,efficiently,1239,"quash them before merging. > I think we should test suppressed columns with staged clusters. Done, and it was indeed broken... > I wonder if it wouldn't be better, after all, to make staged clusters part of the normal code path. We would then have `CommitCluster()` being a shorthand for `StageCluster(); CommitStagedClusters();`. As discussed, it would mean that in the code you have to use a different API of you want to use staging. But perhaps that's not such a big deal. After all, even now you have to add extra code to commit the staged clusters. Partially done:. * I propose to rename `RNTupleFillContext::CommitCluster()` to `FlushCluster()`. This conveys the user intent, but gives flexibility to the implementation. `CommitStagedClusters()` can always be called. * The new sink methods are `StageCluster()` and `CommitStagedClusters()`, for which `CommitCluster()` is a shorthand. The exception is `RPageSinkBuf` where we should still implement it directly because we can do so more efficiently. It is also needed to guarantee sequential files, which might not be the case with two separate critical sections. I also added a tutorial, here is an example output:. ```. === Writing with staged cluster committing ===. Thread #0 wrote events #0 - #24999 as entries #0 - #24999. Thread #1 wrote events #25000 - #49999 as entries #25000 - #49999. Thread #2 wrote events #50000 - #74999 as entries #50000 - #74999. Thread #3 wrote events #75000 - #99999 as entries #75000 - #99999. === ... with sequencing in blocks of 10000 events ===. Thread #0 wrote events #0 - #9999 as entries #0 - #9999. Thread #2 wrote events #50000 - #59999 as entries #10000 - #19999. Thread #3 wrote events #75000 - #84999 as entries #20000 - #29999. Thread #1 wrote events #25000 - #34999 as entries #30000 - #39999. Thread #0 wrote events #10000 - #19999 as entries #40000 - #49999. Thread #2 wrote events #60000 - #69999 as entries #50000 - #59999. Thread #3 wrote events #85000 - #94999 as entries #60000 - #69999.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16343
https://github.com/root-project/root/pull/16344:4,availability,failur,failures,4,"The failures are unrelated, understood and fixed by https://github.com/root-project/roottest/pull/1180",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16344
https://github.com/root-project/root/pull/16344:4,deployability,fail,failures,4,"The failures are unrelated, understood and fixed by https://github.com/root-project/roottest/pull/1180",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16344
https://github.com/root-project/root/pull/16344:4,performance,failur,failures,4,"The failures are unrelated, understood and fixed by https://github.com/root-project/roottest/pull/1180",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16344
https://github.com/root-project/root/pull/16344:4,reliability,fail,failures,4,"The failures are unrelated, understood and fixed by https://github.com/root-project/roottest/pull/1180",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16344
https://github.com/root-project/root/pull/16345:63,deployability,version,version,63,"Given that this breaks forward compatibility, should the major version number be bumped?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:63,integrability,version,version,63,"Given that this breaks forward compatibility, should the major version number be bumped?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:31,interoperability,compatib,compatibility,31,"Given that this breaks forward compatibility, should the major version number be bumped?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:63,modifiability,version,version,63,"Given that this breaks forward compatibility, should the major version number be bumped?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:65,deployability,version,version,65,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:110,deployability,version,version,110,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:65,integrability,version,version,65,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:110,integrability,version,version,110,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:33,interoperability,compatib,compatibility,33,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:65,modifiability,version,version,65,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:110,modifiability,version,version,110,"> Given that this breaks forward compatibility, should the major version number be bumped? Actually the minor version (RC), since we are still in epoch 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:39,interoperability,compatib,compatibility,39,"> Note that this change breaks forward compatibility. Will we still be able to read ""old"" rc2 files?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:41,interoperability,compatib,compatibility,41,"> > Note that this change breaks forward compatibility. > . > Will we still be able to read ""old"" rc2 files? Yes, also tested e.g. in the ntpl004 tutorial that reads a pre-PR file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:119,safety,test,tested,119,"> > Note that this change breaks forward compatibility. > . > Will we still be able to read ""old"" rc2 files? Yes, also tested e.g. in the ntpl004 tutorial that reads a pre-PR file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16345:119,testability,test,tested,119,"> > Note that this change breaks forward compatibility. > . > Will we still be able to read ""old"" rc2 files? Yes, also tested e.g. in the ntpl004 tutorial that reads a pre-PR file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16345
https://github.com/root-project/root/pull/16348:9,availability,failur,failure,9,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:9,deployability,fail,failure,9,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:9,performance,failur,failure,9,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:9,reliability,fail,failure,9,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:4,safety,test,test,4,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:4,testability,test,test,4,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:11,availability,failur,failure,11,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:11,deployability,fail,failure,11,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:96,deployability,fail,failing,96,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:221,deployability,fail,failing,221,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:11,performance,failur,failure,11,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:11,reliability,fail,failure,11,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:96,reliability,fail,failing,96,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:221,reliability,fail,failing,221,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:6,safety,test,test,6,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:82,safety,test,tests,82,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:207,safety,test,tests,207,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:172,security,Modif,Modified,172,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:6,testability,test,test,6,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:82,testability,test,tests,82,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:207,testability,test,tests,207,"> The test failure on mac13 is not due to the changes of this PR. So some old svg tests (o) are failing because of a changed fill attribute:. - Original: fill=""#917f6e"". - Modified: fill=""#6f2da8"". The json tests (j) are failing because of differences in fOper. Do we need new reference files ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:13,availability,failur,failure,13,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:13,deployability,fail,failure,13,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:104,deployability,fail,failing,104,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:243,deployability,fail,failing,243,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:13,performance,failur,failure,13,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:13,reliability,fail,failure,13,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:104,reliability,fail,failing,104,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:243,reliability,fail,failing,243,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:8,safety,test,test,8,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:90,safety,test,tests,90,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:229,safety,test,tests,229,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:188,security,Modif,Modified,188,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:8,testability,test,test,8,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:90,testability,test,tests,90,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:229,testability,test,tests,229,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:341,usability,help,help,341,"> > The test failure on mac13 is not due to the changes of this PR. > . > So some old svg tests (o) are failing because of a changed fill attribute:. > . > * Original: fill=""#917f6e"". > * Modified: fill=""#6f2da8"". > . > The json tests (j) are failing because of differences in fOper. > . > Do we need new reference files ? May be @linev can help ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:232,deployability,fail,failing,232,@couet . This PR introduces new colors. . TWebCanvas always transfer list of existing colors to the client - and coded it in compact form into `fOper` field of some JSON object. Thats why it changes. > So some old svg tests (o) are failing because of a changed fill attribute:. This need to be investigated. Most probably some of new colors overrides already existing one and therefore fill attributes of some drawing changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:410,energy efficiency,draw,drawing,410,@couet . This PR introduces new colors. . TWebCanvas always transfer list of existing colors to the client - and coded it in compact form into `fOper` field of some JSON object. Thats why it changes. > So some old svg tests (o) are failing because of a changed fill attribute:. This need to be investigated. Most probably some of new colors overrides already existing one and therefore fill attributes of some drawing changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:232,reliability,fail,failing,232,@couet . This PR introduces new colors. . TWebCanvas always transfer list of existing colors to the client - and coded it in compact form into `fOper` field of some JSON object. Thats why it changes. > So some old svg tests (o) are failing because of a changed fill attribute:. This need to be investigated. Most probably some of new colors overrides already existing one and therefore fill attributes of some drawing changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:218,safety,test,tests,218,@couet . This PR introduces new colors. . TWebCanvas always transfer list of existing colors to the client - and coded it in compact form into `fOper` field of some JSON object. Thats why it changes. > So some old svg tests (o) are failing because of a changed fill attribute:. This need to be investigated. Most probably some of new colors overrides already existing one and therefore fill attributes of some drawing changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:218,testability,test,tests,218,@couet . This PR introduces new colors. . TWebCanvas always transfer list of existing colors to the client - and coded it in compact form into `fOper` field of some JSON object. Thats why it changes. > So some old svg tests (o) are failing because of a changed fill attribute:. This need to be investigated. Most probably some of new colors overrides already existing one and therefore fill attributes of some drawing changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:18,deployability,log,log,18,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:851,deployability,fail,failed,851,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:851,reliability,fail,failed,851,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:18,safety,log,log,18,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:846,safety,test,test,846,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:18,security,log,log,18,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:18,testability,log,log,18,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:846,testability,test,test,846,"As I can see from log output - difference are in **OLD** svg files, generated not with the JSROOT but with TSVG. . Like here:. ```. 166, 166: <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#917f6e""/> <-> <path d=""M216.21,421.836l 12, -12h 125v -160l 12, -12v 184h -149z"" fill=""#6f2da8""/>. 207, 207: <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#917f6e""/> <-> <path d=""M429.154,421.836l 12, -12h 100v -160l 12, -12v 184h -124z"" fill=""#6f2da8""/>. 248, 248: <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M357.251,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. 255, 255: <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#67494e""/> <-> <path d=""M418.092,382.288l 3, -3h 13v -99l 3, -3v 105h -19z"" fill=""#92dadd""/>. SVG test failed for archi. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:0,reliability,Doe,Does,0,Does that mean the ref files are produced with TSVG ? It sounds a bit strange to me ... TSVG is old code and should not be used as a reference.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:102,reliability,doe,does,102,TSVG (old code) is like TPDF or TPostScript is simply producing an SVG file from what is displayed it does not create a new color.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:47,testability,simpl,simply,47,TSVG (old code) is like TPDF or TPostScript is simply producing an SVG file from what is displayed it does not create a new color.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:47,usability,simpl,simply,47,TSVG (old code) is like TPDF or TPostScript is simply producing an SVG file from what is displayed it does not create a new color.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:5,reliability,doe,does,5,> it does not create a new color. But somehow new color affects SVG production.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:42,safety,test,tests,42,> only on Mac ? ok I will check TSVG. The tests are only enabled on Mac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:42,testability,test,tests,42,> only on Mac ? ok I will check TSVG. The tests are only enabled on Mac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:25,availability,fault,faulty,25,`arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:25,energy efficiency,fault,faulty,25,`arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:25,performance,fault,faulty,25,`arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:25,reliability,fault,faulty,25,`arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:25,safety,fault,faulty,25,`arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever......,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:27,availability,fault,faulty,27,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:302,deployability,fail,failing,302,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:27,energy efficiency,fault,faulty,27,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:27,performance,fault,faulty,27,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:27,reliability,fault,faulty,27,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:302,reliability,fail,failing,302,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:27,safety,fault,faulty,27,"> `arrows.C` is one of the faulty examples in this PR. I have generated the SVG files (using TSVG) with and without the changes proposed in this PR. The files are the same! no color overwriting whatsoever...... Can you please try this with hstack.C, archi.C, basic3d.C or greyscale.C. Arrows.C is only failing for jsons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:121,usability,user,user-attachments,121,"ok I see a difference in the lego plot. <img width=""329"" alt=""Screenshot 2024-09-04 at 17 35 02"" src=""https://github.com/user-attachments/assets/ec8b3045-c14c-48fe-a68c-0c2dcbf649a4"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:115,deployability,updat,updated,115,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:98,safety,test,tests,98,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:115,safety,updat,updated,115,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:115,security,updat,updated,115,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:98,testability,test,tests,98,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:43,deployability,fail,failing,43,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:23,integrability,coupl,couple,23,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:23,modifiability,coupl,couple,23,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:43,reliability,fail,failing,43,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:38,safety,test,test,38,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:23,testability,coupl,couple,23,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:38,testability,test,test,38,I see there is still a couple of `_o` test failing. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16348:10,energy efficiency,green,green,10,It is all green. Can somebody approve it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16348
https://github.com/root-project/root/pull/16349:33,safety,test,tests,33,Thanks @cburgard . I started the tests and leave the review in the hands of @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16349:53,safety,review,review,53,Thanks @cburgard . I started the tests and leave the review in the hands of @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16349:33,testability,test,tests,33,Thanks @cburgard . I started the tests and leave the review in the hands of @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16349:53,testability,review,review,53,Thanks @cburgard . I started the tests and leave the review in the hands of @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16349
https://github.com/root-project/root/pull/16351:189,deployability,depend,dependencies,189,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:189,integrability,depend,dependencies,189,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:189,modifiability,depend,dependencies,189,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:330,modifiability,maintain,maintain,330,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:72,reliability,doe,doesn,72,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:163,reliability,doe,doesn,163,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:189,safety,depend,dependencies,189,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:330,safety,maintain,maintain,330,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:189,testability,depend,dependencies,189,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:0,usability,Person,Personally,0,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:67,usability,guid,guide,67,"I agree with Jonas it should stay ""Legacy"" as mentioned in the ref guide: https://root.cern/doc/v632/classTSpectrum.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:232,deployability,build,building,232,"Thanks for the input, which is very useful for the evolution of ROOT. Let's discuss further whether TSpectrum can be taken as the perfect example of the ""Legacy"" set of classes, the ones we will not further develop, that we'll keep building, and for which the bug reports will be treated on a case by case basis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:15,safety,input,input,15,"Thanks for the input, which is very useful for the evolution of ROOT. Let's discuss further whether TSpectrum can be taken as the perfect example of the ""Legacy"" set of classes, the ones we will not further develop, that we'll keep building, and for which the bug reports will be treated on a case by case basis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16351:15,usability,input,input,15,"Thanks for the input, which is very useful for the evolution of ROOT. Let's discuss further whether TSpectrum can be taken as the perfect example of the ""Legacy"" set of classes, the ones we will not further develop, that we'll keep building, and for which the bug reports will be treated on a case by case basis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16351
https://github.com/root-project/root/pull/16357:22,availability,failur,failures,22,@linev there are some failures on Windows: are they spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:22,deployability,fail,failures,22,@linev there are some failures on Windows: are they spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:22,performance,failur,failures,22,@linev there are some failures on Windows: are they spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:22,reliability,fail,failures,22,@linev there are some failures on Windows: are they spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:9,availability,Failur,Failure,9,"@dpiparo Failure is in `tutorial-v7-ntuple-ntpl007_mtFill`, has nothing to do with `TGxxx` classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:9,deployability,Fail,Failure,9,"@dpiparo Failure is in `tutorial-v7-ntuple-ntpl007_mtFill`, has nothing to do with `TGxxx` classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:9,performance,Failur,Failure,9,"@dpiparo Failure is in `tutorial-v7-ntuple-ntpl007_mtFill`, has nothing to do with `TGxxx` classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16357:9,reliability,Fail,Failure,9,"@dpiparo Failure is in `tutorial-v7-ntuple-ntpl007_mtFill`, has nothing to do with `TGxxx` classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16357
https://github.com/root-project/root/pull/16359:29,deployability,build,build,29,@guitargeek Waiting for test build on mac-beta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16359:24,safety,test,test,24,@guitargeek Waiting for test build on mac-beta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16359:24,testability,test,test,24,@guitargeek Waiting for test build on mac-beta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16359
https://github.com/root-project/root/pull/16362:18,reliability,doe,does,18,"Seems to be gcc14 does not like direct use of `sizeof...(ColTypes)` as argument for vector size. But when converted into unsigned - everything works. Actually, one can remove lambda here completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16362:187,safety,compl,completely,187,"Seems to be gcc14 does not like direct use of `sizeof...(ColTypes)` as argument for vector size. But when converted into unsigned - everything works. Actually, one can remove lambda here completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16362:187,security,compl,completely,187,"Seems to be gcc14 does not like direct use of `sizeof...(ColTypes)` as argument for vector size. But when converted into unsigned - everything works. Actually, one can remove lambda here completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16362:12,reliability,doe,does,12,Thanks. But does this fix the bug without introducing regressions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16362:54,testability,regress,regressions,54,Thanks. But does this fix the bug without introducing regressions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16362:47,reliability,doe,does,47,@vepadulano That about usage of lambdas here - does it make sense?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16362
https://github.com/root-project/root/pull/16363:20,usability,indicat,indicate,20,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:46,usability,user,user,46,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:67,usability,indicat,indicates,67,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:180,usability,person,personally,180,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:197,usability,prefer,prefer,197,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:346,usability,user,users,346,"To me `Owned` would indicate ownership by the user, while `Owning` indicates the opposite (so exactly what you describe). In that regard I think the proposed naming makes sense. I personally would prefer to have the first, so `Owned` and `Unowned` (like it is now). I think regarding the second point, unless we already have concrete cases where users would want to use `RNTupleViewBase`, it's okay to leave it non-constructible. It would be easier to relax this at a later point than do the opposite (and as you say, it's in `Internal` so it shouldn't really matter either way).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:524,deployability,version,version,524,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:356,energy efficiency,power,power,356,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:524,integrability,version,version,524,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:524,modifiability,version,version,524,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:193,testability,understand,understanding,193,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:184,usability,user,user,184,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:362,usability,user,users,362,"I agree with previous comments about the meaning of the `Owned/Unowned` wording. But I also wanted to point out that we might want to consider the aspect of what we communicate to the user. My understanding is that the `RNTupleUnownedView` view is also the view that we would recommend in the vast majority of cases, whereas the `Owned` alternative is for power users (i.e. mostly experiment frameworks). To this end, I would propose something akin to `RNTupleView` for the `Unowned` and `RNTupleUnsafeView` for the `Owned` version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:51,deployability,version,version,51,"@vepadulano I agree that if we foresee the Unowned version being the one used ""by default"" it should probably be just called RNTupleView, though I'm not sure if the ""Unsafe"" nomenclature communicates the concept well. I don't have better ideas right now either. Maybe ""Unmanaged""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:51,integrability,version,version,51,"@vepadulano I agree that if we foresee the Unowned version being the one used ""by default"" it should probably be just called RNTupleView, though I'm not sure if the ""Unsafe"" nomenclature communicates the concept well. I don't have better ideas right now either. Maybe ""Unmanaged""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:51,modifiability,version,version,51,"@vepadulano I agree that if we foresee the Unowned version being the one used ""by default"" it should probably be just called RNTupleView, though I'm not sure if the ""Unsafe"" nomenclature communicates the concept well. I don't have better ideas right now either. Maybe ""Unmanaged""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:166,safety,Unsaf,Unsafe,166,"@vepadulano I agree that if we foresee the Unowned version being the one used ""by default"" it should probably be just called RNTupleView, though I'm not sure if the ""Unsafe"" nomenclature communicates the concept well. I don't have better ideas right now either. Maybe ""Unmanaged""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:119,integrability,sub,subject,119,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:295,reliability,doe,does,295,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:419,safety,Compl,Completely,419,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:322,security,access,access,322,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:419,security,Compl,Completely,419,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:9,usability,clear,clear,9,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:161,usability,user,user,161,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:502,usability,user,user,502,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:41,deployability,version,version,41,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:138,deployability,version,version,138,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:187,deployability,manag,manage,187,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:15,energy efficiency,current,currently,15,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:187,energy efficiency,manag,manage,187,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:41,integrability,version,version,41,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:138,integrability,version,version,138,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:41,modifiability,version,version,41,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:138,modifiability,version,version,138,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:169,modifiability,responsibil,responsibility,169,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:75,performance,memor,memory,75,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:199,performance,memor,memory,199,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:58,reliability,doe,does,58,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:187,safety,manag,manage,187,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:53,usability,user,user,53,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:75,usability,memor,memory,75,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:199,usability,memor,memory,199,"@pcanal in the currently named `Unowned` version the user does not own the memory that will be populated with the results. In the `Owned` version they do, so it's their responsibility to manage that memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:68,energy efficiency,power,power,68,"As an idea for naming, and given that we foresee this being used by power users / frameworks, maybe communicate how it is created, with something like `RNTuplePointerView`? (because you get it by passing in a pointer to `GetView`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:74,usability,user,users,74,"As an idea for naming, and given that we foresee this being used by power users / frameworks, maybe communicate how it is created, with something like `RNTuplePointerView`? (because you get it by passing in a pointer to `GetView`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:70,energy efficiency,power,power,70,"> As an idea for naming, and given that we foresee this being used by power users / frameworks, maybe communicate how it is created, with something like `RNTuplePointerView`? (because you get it by passing in a pointer to `GetView`). Hmmm, I'm not so sure about this one. From this name alone I would expect to get a pointer as the return type, rather than indicating that I have to supply the pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:76,usability,user,users,76,"> As an idea for naming, and given that we foresee this being used by power users / frameworks, maybe communicate how it is created, with something like `RNTuplePointerView`? (because you get it by passing in a pointer to `GetView`). Hmmm, I'm not so sure about this one. From this name alone I would expect to get a pointer as the return type, rather than indicating that I have to supply the pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:357,usability,indicat,indicating,357,"> As an idea for naming, and given that we foresee this being used by power users / frameworks, maybe communicate how it is created, with something like `RNTuplePointerView`? (because you get it by passing in a pointer to `GetView`). Hmmm, I'm not so sure about this one. From this name alone I would expect to get a pointer as the return type, rather than indicating that I have to supply the pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:99,modifiability,paramet,parameter,99,"Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:185,modifiability,paramet,parameter,185,"Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:226,usability,clear,clearly,226,"Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:101,modifiability,paramet,parameter,101,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. . Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:187,modifiability,paramet,parameter,187,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. . Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:228,usability,clear,clearly,228,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. . Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:344,usability,Person,Personally,344,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. . Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:389,usability,help,help,389,"> Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. I guess we should ask the experiments about this, since this change proposal came from them. . Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:537,deployability,API,API,537,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:537,integrability,API,API,537,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:537,interoperability,API,API,537,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:103,modifiability,paramet,parameter,103,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:189,modifiability,paramet,parameter,189,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:541,safety,review,reviewers,541,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:541,testability,review,reviewers,541,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:230,usability,clear,clearly,230,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:350,usability,Person,Personally,350,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:395,usability,help,help,395,"> > Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out. > . > I guess we should ask the experiments about this, since this change proposal came from them. Personally, I'm not sure how much this would help, given that we would just move the naming problem to the enum values rather than the classes. I agree that we should discuss it with the API reviewers. The advantage I see is that I find it easier to be verbose in the enum constant names (e.g., `kOwnedByCaller`, `kOwnedByROOT`) than in the class name. Especially, if the non-owning view is the default value. E.g. ```. auto v1 = reader->GetView<float>(...);. auto v2 = reader->GetView<float, EViewType::kOwnedByCaller>(...). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:335,deployability,API,API,335,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:464,deployability,stage,stage,464,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:335,integrability,API,API,335,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:335,interoperability,API,API,335,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:61,performance,time,time,61,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:198,usability,support,support,198,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/pull/16363:343,usability,user,user,343,"Thinking about this again: the reason that we have a compile time option is essentially for zero-copy views of mappable fields. However, that's not really a critical use case. How about we drop the support for `RField<...>::Map()` for now, and every view has an actual backing `RField::RValue`. In this case, through the normal RValue API the user can provide their own storage and we don't need any other special handling. Zero-copy views can be added at a later stage, e.g. as `RNTupleZeroCopyView`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16363
https://github.com/root-project/root/issues/16366:87,performance,time,time,87,"Hi @DanielGeerts , thanks for the report. We'll look into this, but it might take some time. Would you feel like proposing a solution for this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16366
https://github.com/root-project/root/issues/16366:4,energy efficiency,current,currently,4,"I'm currently not (yet) set-up to compile ROOT myself, but I think changing both lines to:. `const char *sw = (const char *)intermediary;`. should work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16366
https://github.com/root-project/root/issues/16366:124,integrability,intermediar,intermediary,124,"I'm currently not (yet) set-up to compile ROOT myself, but I think changing both lines to:. `const char *sw = (const char *)intermediary;`. should work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16366
https://github.com/root-project/root/issues/16366:124,modifiability,interm,intermediary,124,"I'm currently not (yet) set-up to compile ROOT myself, but I think changing both lines to:. `const char *sw = (const char *)intermediary;`. should work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16366
https://github.com/root-project/root/pull/16370:73,safety,test,test,73,Hi @hqucms . Thanks for this fix! Do you think you could also add a unit test (https://github.com/root-project/root/tree/master/hist/hist/test)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:138,safety,test,test,138,Hi @hqucms . Thanks for this fix! Do you think you could also add a unit test (https://github.com/root-project/root/tree/master/hist/hist/test)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:68,testability,unit,unit,68,Hi @hqucms . Thanks for this fix! Do you think you could also add a unit test (https://github.com/root-project/root/tree/master/hist/hist/test)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:73,testability,test,test,73,Hi @hqucms . Thanks for this fix! Do you think you could also add a unit test (https://github.com/root-project/root/tree/master/hist/hist/test)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:138,testability,test,test,138,Hi @hqucms . Thanks for this fix! Do you think you could also add a unit test (https://github.com/root-project/root/tree/master/hist/hist/test)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:15,reliability,doe,does,15,How much sense does it actually make to use these constructors without arguments of the hist classes? I thought they were reserved for IO. Maybe this is a documentation issue? @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:155,usability,document,documentation,155,How much sense does it actually make to use these constructors without arguments of the hist classes? I thought they were reserved for IO. Maybe this is a documentation issue? @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:10,testability,unit,unittest,10,I added a unittest in https://github.com/root-project/root/pull/16370/commits/daa74274b51e4174bfdf23ecd26248e5f400a8e7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:17,reliability,doe,does,17,"> How much sense does it actually make to use these constructors without arguments of the hist classes? I thought they were reserved for IO. Maybe this is a documentation issue? @lmoneta. It's not just the default constructor. For `TH2Poly`, one needs to call `AddBin()` explicitly to create the bins, otherwise it will crash regardless of which constructor is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16370:157,usability,document,documentation,157,"> How much sense does it actually make to use these constructors without arguments of the hist classes? I thought they were reserved for IO. Maybe this is a documentation issue? @lmoneta. It's not just the default constructor. For `TH2Poly`, one needs to call `AddBin()` explicitly to create the bins, otherwise it will crash regardless of which constructor is called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16370
https://github.com/root-project/root/pull/16372:0,deployability,Fail,Failing,0,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:120,deployability,version,version,120,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:306,deployability,version,version,306,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:120,integrability,version,version,120,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:306,integrability,version,version,306,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:120,modifiability,version,version,120,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:306,modifiability,version,version,306,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:0,reliability,Fail,Failing,0,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:8,safety,test,tests,8,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:8,testability,test,tests,8,"Failing tests on Mac:. ```. 1575:roottest-graphics-AtlasExample_o << do not see any difference compared to the previous version ..... 1716:roottest-graphics-graphreverse_o << understood, more investigations needed. 1824:roottest-graphics-ratioplot1_o. << do not see any difference compared to the previous version ..... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:46,safety,test,tests,46,@linev @couet how is the process to fix those tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:46,testability,test,tests,46,@linev @couet how is the process to fix those tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:4,availability,failur,failure,4,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:232,availability,error,error,232,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:299,availability,error,error,299,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:4,deployability,fail,failure,4,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:169,deployability,version,version,169,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:138,energy efficiency,current,current,138,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:169,integrability,version,version,169,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:169,modifiability,version,version,169,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:4,performance,failur,failure,4,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:232,performance,error,error,232,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:299,performance,error,error,299,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:4,reliability,fail,failure,4,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:232,safety,error,error,232,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:299,safety,error,error,299,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:232,usability,error,error,232,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:299,usability,error,error,299,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:549,usability,user,user-attachments,549,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:31,safety,test,testing,31,I'd like to note that the same testing strategy used for this PR could be applied for https://github.com/root-project/root/pull/16348 in order to move it forward.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16372:31,testability,test,testing,31,I'd like to note that the same testing strategy used for this PR could be applied for https://github.com/root-project/root/pull/16348 in order to move it forward.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16372
https://github.com/root-project/root/pull/16373:32,deployability,fail,failing,32,Note that the new test is still failing on Windows x86... :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:32,reliability,fail,failing,32,Note that the new test is still failing on Windows x86... :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:18,safety,test,test,18,Note that the new test is still failing on Windows x86... :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:18,testability,test,test,18,Note that the new test is still failing on Windows x86... :disappointed:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:34,deployability,fail,failing,34,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:114,interoperability,share,shared,114,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:128,performance,time,time,128,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:34,reliability,fail,failing,34,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:20,safety,test,test,20,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/pull/16373:20,testability,test,test,20,> Note that the new test is still failing on Windows x86... 😞. @bellenot has it open in a debugger but needs some shared screen time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16373
https://github.com/root-project/root/issues/16374:161,testability,simpl,simple,161,> 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt`to it inclusion point in`SearchInstalledSoftware.cmake`. Sounds like a good and simple solution to me!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16374:161,usability,simpl,simple,161,> 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt`to it inclusion point in`SearchInstalledSoftware.cmake`. Sounds like a good and simple solution to me!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16374
https://github.com/root-project/root/issues/16375:126,performance,perform,performance,126,"Hi,. Could you explain why the classes are forced not to be selected without the ""+"", which brings many benefits, among which performance during the IO procedures?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:126,usability,perform,performance,126,"Hi,. Could you explain why the classes are forced not to be selected without the ""+"", which brings many benefits, among which performance during the IO procedures?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:205,interoperability,compatib,compatibility,205,"In the case for GENIE neutrino generator, its a software with a long history, I am unable to trace back to the time when the `LinkDef.h` was written. And it seems that adding the plus sign will break some compatibility with root files generated without the plus sign, so that's not going to be easy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:111,performance,time,time,111,"In the case for GENIE neutrino generator, its a software with a long history, I am unable to trace back to the time when the `LinkDef.h` was written. And it seems that adding the plus sign will break some compatibility with root files generated without the plus sign, so that's not going to be easy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:184,security,sign,sign,184,"In the case for GENIE neutrino generator, its a software with a long history, I am unable to trace back to the time when the `LinkDef.h` was written. And it seems that adding the plus sign will break some compatibility with root files generated without the plus sign, so that's not going to be easy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:262,security,sign,sign,262,"In the case for GENIE neutrino generator, its a software with a long history, I am unable to trace back to the time when the `LinkDef.h` was written. And it seems that adding the plus sign will break some compatibility with root files generated without the plus sign, so that's not going to be easy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:93,testability,trace,trace,93,"In the case for GENIE neutrino generator, its a software with a long history, I am unable to trace back to the time when the `LinkDef.h` was written. And it seems that adding the plus sign will break some compatibility with root files generated without the plus sign, so that's not going to be easy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:17,deployability,updat,updating,17,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1183,deployability,version,version,1183,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1267,deployability,version,version,1267,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1097,integrability,sub,substitutions,1097,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1183,integrability,version,version,1183,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1267,integrability,version,version,1267,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1183,modifiability,version,version,1183,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1267,modifiability,version,version,1267,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:34,performance,I/O,I/O,34,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:213,performance,I/O,I/O,213,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1004,performance,I/O,I/O,1004," no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1263,performance,I/O,I/O,1263,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1307,performance,I/O,I/O,1307,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1660,performance,memor,memory,1660,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1724,performance,memor,memory,1724,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:2032,performance,memor,memory,2032,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:2069,performance,I/O,I/O,2069,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:17,safety,updat,updating,17,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:79,safety,test,test,79,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:17,security,updat,updating,17,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:79,testability,test,test,79,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:93,usability,minim,minimal,93,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:126,usability,user,users,126,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:619,usability,custom,custom,619,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:868,usability,behavi,behavior,868,"We are no longer updating the old I/O (the one you get without the `+`) as its test suite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). Af",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1660,usability,memor,memory,1660,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:1724,usability,memor,memory,1724,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16375:2032,usability,memor,memory,2032,"ite is minimal and we have no idea what users still using are relying on. However you can straightforwardly migrate to the new I/O and solve the problem for you classes. The result of the process applied to your example can be seen in the merge request against your example: https://github.com/karuboniru/root_memory_leak_report/pull/1. This was created (beside the small tidying commits) by:. 1. Generating the dictionary without the `+`. 2. Copy/pasting the Streamer member function for the class from the dictionary and switch to custom streamer by adding `-` to the LinDef: [karuboniru/root_memory_leak_report@`f454e98` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/f454e9875ba71c9528b5e8a5f289681d35e41877). After this steps, there is no change in behavior yet. 3. Go back to the previous code, Generate the dictionary with the '+', this gives the Streamer function that uses the new I/O. Save the code for the next step (Note that the code is entirely boiler plate and with 2 substitutions applies to any class. 4. Go back to the new code. 5. Increase the class version number. 6. Replace the write part of the Streamer function with the new I/O version. Merge the read part of the new I/O into to the read part, keeping the old code to only read the data from the old files. This accomplish in [karuboniru/root_memory_leak_report@`37d09c9` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/37d09c96d41744cb524e30aca77a64fe977d8a44)?diff=split . After this step the new code will write and read new file without a memory lead. It will be able to read the old file with the same memory as before. 7. Add the missing delete in the part of the Streamer reading the old file. This is seen in [karuboniru/root_memory_leak_report@`8c6bb1d` (#1)](https://github.com/karuboniru/root_memory_leak_report/pull/1/commits/8c6bb1d3ab68000eba722b7d50ca69fdcbd5cd26). After this we have:. * Solved the memory leak. * Enabled using the new I/O from then on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16375
https://github.com/root-project/root/issues/16376:271,deployability,manag,managing,271,"@ferdymercury . In principle, `TGraph2D` already provides set of `x/y/z` points. One only needs:. - optional color value for each point, which may be ruled by some palette. - optional size value for each point. One can create `TGraph3D` class derived from `TGraph2D` and managing such additional properties. And I can implement them in JSROOT. . @ferdymercury - can you propose PR with `TGraph3D` class?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:271,energy efficiency,manag,managing,271,"@ferdymercury . In principle, `TGraph2D` already provides set of `x/y/z` points. One only needs:. - optional color value for each point, which may be ruled by some palette. - optional size value for each point. One can create `TGraph3D` class derived from `TGraph2D` and managing such additional properties. And I can implement them in JSROOT. . @ferdymercury - can you propose PR with `TGraph3D` class?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:271,safety,manag,managing,271,"@ferdymercury . In principle, `TGraph2D` already provides set of `x/y/z` points. One only needs:. - optional color value for each point, which may be ruled by some palette. - optional size value for each point. One can create `TGraph3D` class derived from `TGraph2D` and managing such additional properties. And I can implement them in JSROOT. . @ferdymercury - can you propose PR with `TGraph3D` class?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:97,interoperability,coordinat,coordinates,97,"TScatter2D might be the right approach. Internally, TScatter has a TGraph that holds the x and y coordinates, and TScatter adds the color and size dimensions, resulting in a 4D plot. The painting is handled by TGraphPainter. To achieve something similar and maintain the same naming convention, we could have a TScatter2D that holds a TGraph2D and adds the color and size dimensions, creating a 5D plot. The painting would then be handled by TGraph2DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:258,modifiability,maintain,maintain,258,"TScatter2D might be the right approach. Internally, TScatter has a TGraph that holds the x and y coordinates, and TScatter adds the color and size dimensions, resulting in a 4D plot. The painting is handled by TGraphPainter. To achieve something similar and maintain the same naming convention, we could have a TScatter2D that holds a TGraph2D and adds the color and size dimensions, creating a 5D plot. The painting would then be handled by TGraph2DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:258,safety,maintain,maintain,258,"TScatter2D might be the right approach. Internally, TScatter has a TGraph that holds the x and y coordinates, and TScatter adds the color and size dimensions, resulting in a 4D plot. The painting is handled by TGraphPainter. To achieve something similar and maintain the same naming convention, we could have a TScatter2D that holds a TGraph2D and adds the color and size dimensions, creating a 5D plot. The painting would then be handled by TGraph2DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:279,energy efficiency,current,currently,279,"Thanks a lot for your replies! TScatter2D sounds also reasonable to me, the problem is however that TGraph2DPainter assumes that all markers have the same size (and style), so TGraph2DPainter has to be modified accordingly, or a TGraph3DPainter class needs to be defined. I have currently limited time, so if someone wants to take over feel free! otherwise I will definitely come back to this, but later this year.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:297,performance,time,time,297,"Thanks a lot for your replies! TScatter2D sounds also reasonable to me, the problem is however that TGraph2DPainter assumes that all markers have the same size (and style), so TGraph2DPainter has to be modified accordingly, or a TGraph3DPainter class needs to be defined. I have currently limited time, so if someone wants to take over feel free! otherwise I will definitely come back to this, but later this year.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:202,security,modif,modified,202,"Thanks a lot for your replies! TScatter2D sounds also reasonable to me, the problem is however that TGraph2DPainter assumes that all markers have the same size (and style), so TGraph2DPainter has to be modified accordingly, or a TGraph3DPainter class needs to be defined. I have currently limited time, so if someone wants to take over feel free! otherwise I will definitely come back to this, but later this year.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:263,deployability,contain,contains,263,"TGraph and TGraphPainter work similarly, where the PaintScatter method is handled by TGraphPainter. TScatter extends functionality by adding marker size and color, but the actual drawing is still done in TGraphPainter. Instead of inheriting from TGraph, TScatter contains a TGraph as a data member. The same structure should be applied for 2D:. TScatter2D should have a TGraph2D as a member. The painting should be done in TGraph2DPainter::PaintScatter2D. There's no need for a TGraph3DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:179,energy efficiency,draw,drawing,179,"TGraph and TGraphPainter work similarly, where the PaintScatter method is handled by TGraphPainter. TScatter extends functionality by adding marker size and color, but the actual drawing is still done in TGraphPainter. Instead of inheriting from TGraph, TScatter contains a TGraph as a data member. The same structure should be applied for 2D:. TScatter2D should have a TGraph2D as a member. The painting should be done in TGraph2DPainter::PaintScatter2D. There's no need for a TGraph3DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:109,modifiability,exten,extends,109,"TGraph and TGraphPainter work similarly, where the PaintScatter method is handled by TGraphPainter. TScatter extends functionality by adding marker size and color, but the actual drawing is still done in TGraphPainter. Instead of inheriting from TGraph, TScatter contains a TGraph as a data member. The same structure should be applied for 2D:. TScatter2D should have a TGraph2D as a member. The painting should be done in TGraph2DPainter::PaintScatter2D. There's no need for a TGraph3DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/issues/16376:230,modifiability,inherit,inheriting,230,"TGraph and TGraphPainter work similarly, where the PaintScatter method is handled by TGraphPainter. TScatter extends functionality by adding marker size and color, but the actual drawing is still done in TGraphPainter. Instead of inheriting from TGraph, TScatter contains a TGraph as a data member. The same structure should be applied for 2D:. TScatter2D should have a TGraph2D as a member. The painting should be done in TGraph2DPainter::PaintScatter2D. There's no need for a TGraph3DPainter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16376
https://github.com/root-project/root/pull/16377:170,availability,Failur,Failure,170,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:403,availability,avail,available,403,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:492,availability,error,error-check-testing,492,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:662,availability,Failur,Failure,662,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:841,availability,avail,available,841,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:930,availability,error,error-check-testing,930,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1063,availability,error,error,1063,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:170,deployability,Fail,Failure,170,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:184,deployability,Fail,Failed,184,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:662,deployability,Fail,Failure,662,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:676,deployability,Fail,Failed,676,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1005,deployability,UPDAT,UPDATE,1005,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:128,energy efficiency,core,core,128,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:620,energy efficiency,core,core,620,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:253,integrability,messag,message,253,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:373,integrability,messag,message,373,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:747,integrability,messag,message,747,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:811,integrability,messag,message,811,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1069,integrability,messag,message,1069,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:253,interoperability,messag,message,253,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:373,interoperability,messag,message,373,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:747,interoperability,messag,message,747,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:811,interoperability,messag,message,811,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1069,interoperability,messag,message,1069,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:170,performance,Failur,Failure,170,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:313,performance,time,times,313,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:492,performance,error,error-check-testing,492,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:662,performance,Failur,Failure,662,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:930,performance,error,error-check-testing,930,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1063,performance,error,error,1063,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:170,reliability,Fail,Failure,170,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:184,reliability,Fail,Failed,184,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:242,reliability,diagno,diagnostic,242,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:403,reliability,availab,available,403,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:662,reliability,Fail,Failure,662,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:676,reliability,Fail,Failed,676,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:736,reliability,diagno,diagnostic,736,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:841,reliability,availab,available,841,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:133,safety,test,testsupport,133,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:149,safety,Test,TestSupport,149,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:204,safety,Test,TestSupport,204,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:403,safety,avail,available,403,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:492,safety,error,error-check-testing,492,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:530,safety,test,test,530,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:625,safety,test,testsupport,625,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:641,safety,Test,TestSupport,641,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:696,safety,Test,TestSupport,696,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:841,safety,avail,available,841,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:930,safety,error,error-check-testing,930,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:968,safety,test,test,968,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1005,safety,UPDAT,UPDATE,1005,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1063,safety,error,error,1063,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:403,security,availab,available,403,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:841,security,availab,available,841,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1005,security,UPDAT,UPDATE,1005,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:133,testability,test,testsupport,133,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:149,testability,Test,TestSupport,149,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:204,testability,Test,TestSupport,204,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:242,testability,diagno,diagnostic,242,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:504,testability,test,testing,504,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:530,testability,test,test,530,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:625,testability,test,testsupport,625,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:641,testability,Test,TestSupport,641,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:696,testability,Test,TestSupport,696,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:736,testability,diagno,diagnostic,736,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:942,testability,test,testing,942,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:968,testability,test,test,968,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:9,usability,document,documentation,9,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:492,usability,error,error-check-testing,492,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:930,usability,error,error-check-testing,930,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/pull/16377:1063,usability,error,error,1063,"Just for documentation purposes, I am having fun with this at the moment. ```. 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: . 503: severity: kError . 503: received: 0 times (required, fullMatch) . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. . 503: . 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure. 503: Failed . 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. 503: severity: kError . 503: origin: ""Setup()"" . 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree. player/test/DisappearingBranch1.root'. ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16377
https://github.com/root-project/root/issues/16380:539,availability,redund,redundant,539,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:154,deployability,contain,container,154,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:539,deployability,redundan,redundant,539,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:791,deployability,patch,patches,791,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:884,deployability,patch,patches,884,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:958,integrability,interfac,interface,958,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:33,interoperability,standard,standard,33,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:644,interoperability,compatib,compatibility,644,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:958,interoperability,interfac,interface,958,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:234,modifiability,variab,variable-in-root-files,234,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:958,modifiability,interfac,interface,958,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:539,reliability,redundan,redundant,539,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:539,safety,redund,redundant,539,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:791,safety,patch,patches,791,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:884,safety,patch,patches,884,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:791,security,patch,patches,791,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:884,security,patch,patches,884,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:227,testability,simpl,simple-variable-in-root-files,227,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:729,testability,simpl,simple,729,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:227,usability,simpl,simple-variable-in-root-files,227,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:729,usability,simpl,simple,729,"Hi, thanks for the question! The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:. https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:. ```C++. void write() {. TParameter<int> x1{""x1"", 5};. std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");. file->WriteObject(&x2, ""x2"");. }. ```. Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h. * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx. You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:345,availability,operat,operator,345,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:362,availability,operat,operator,362,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:414,availability,operat,operator,414,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:548,deployability,Contain,Container,548,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:173,integrability,pub,public,173,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:190,integrability,pub,public,190,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:609,integrability,interfac,interface,609,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:609,interoperability,interfac,interface,609,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:609,modifiability,interfac,interface,609,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:. ```python. ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {. public:. RooInt() = default;. RooInt(Int_t value) : _value(value) {}. RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator. inline operator Int_t() const { return _value ; }. RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload. ClassDefOverride(RooInt,1) // Container class for Int_t. };. """"""). ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:275,deployability,updat,update,275,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:286,integrability,event,eventually,286,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:125,interoperability,semant,semantically,125,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:275,safety,updat,update,275,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:275,security,updat,update,275,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:109,usability,clear,clearly,109,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:297,usability,close,close,297,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice. We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code. I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/issues/16380:31,testability,verif,verify,31,"Hi @PetrilloAtWork , could you verify that using TParameter works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16380
https://github.com/root-project/root/pull/16385:5,availability,failur,failure,5,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:55,availability,FAILUR,FAILURES,55,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:5,deployability,fail,failure,5,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:55,deployability,FAIL,FAILURES,55,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:5,performance,failur,failure,5,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:55,performance,FAILUR,FAILURES,55,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:5,reliability,fail,failure,5,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:55,reliability,FAIL,FAILURES,55,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:0,safety,Test,Test,0,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:50,safety,TEST,TEST,50,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:91,safety,test,test-dataframe-simple,91,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:0,testability,Test,Test,0,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:50,testability,TEST,TEST,50,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:91,testability,test,test-dataframe-simple,91,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16385:106,usability,simpl,simple,106,Test failure in `alma9-clang` unrelated:. ```txt. TEST FAILURES:. 470:gtest-tree-dataframe-test-dataframe-simple. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16385
https://github.com/root-project/root/pull/16386:70,reliability,doe,doesn,70,"Unfortunately `-Wstringop-overflow` causes warnings with Clang, which doesn't know about this flag...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16386:48,integrability,wrap,wrap,48,"@hahnjo yeah, I noticed too late. Should I just wrap that line in a `#ifndef __llvm__`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16386:50,integrability,wrap,wrap,50,"> @hahnjo yeah, I noticed too late. Should I just wrap that line in a `#ifndef __llvm__`? Probably, unless there is a more standard way to do it... (`__clang__` might be the more appropriate macro to check, judging by a quick `grep`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16386:123,interoperability,standard,standard,123,"> @hahnjo yeah, I noticed too late. Should I just wrap that line in a `#ifndef __llvm__`? Probably, unless there is a more standard way to do it... (`__clang__` might be the more appropriate macro to check, judging by a quick `grep`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16386
https://github.com/root-project/root/pull/16390:51,performance,disk,disk,51,> This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. . This sounds very similar to Double32 ... We will need to explain clearly the differences and advantages ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:75,usability,user,user-defined,75,> This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. . This sounds very similar to Double32 ... We will need to explain clearly the differences and advantages ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:124,usability,user,user-defined,124,> This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. . This sounds very similar to Double32 ... We will need to explain clearly the differences and advantages ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:217,usability,clear,clearly,217,> This column type stores floating point values on disk as integers with a user-defined precision (from 3 to 32 bits) and a user-defined value range. . This sounds very similar to Double32 ... We will need to explain clearly the differences and advantages ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:635,availability,sli,slightly,635,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:31,deployability,log,logically,31,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:714,deployability,scale,scale,714,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:714,energy efficiency,scale,scale,714,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:226,modifiability,variab,variable,226,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:431,modifiability,variab,variable,431,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:714,modifiability,scal,scale,714,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:785,modifiability,Pac,Pack,785,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:649,performance,perform,performant,649,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:714,performance,scale,scale,714,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:635,reliability,sli,slightly,635,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:680,reliability,doe,doesn,680,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:31,safety,log,logically,31,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:31,security,log,logically,31,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:31,testability,log,logically,31,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:649,usability,perform,performant,649,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. . The main difference is design-wise, for the fact that RNTuple's quantization is:. - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`. - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:7,availability,sli,slightly,7,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:86,deployability,scale,scale,86,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:362,deployability,log,logically,362,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:86,energy efficiency,scale,scale,86,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:86,modifiability,scal,scale,86,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:157,modifiability,Pac,Pack,157,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:21,performance,perform,performant,21,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:86,performance,scale,scale,86,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:7,reliability,sli,slightly,7,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:52,reliability,doe,doesn,52,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:362,safety,log,logically,362,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:362,security,log,logically,362,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:362,testability,log,logically,362,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:21,usability,perform,performant,21,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:785,energy efficiency,current,currently,785,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:664,interoperability,specif,specifications,664,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:709,interoperability,specif,specific,709,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:799,interoperability,specif,specifying,799,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:830,interoperability,specif,specifications,830,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:1024,interoperability,format,format,1024,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:171,modifiability,concern,concern,171,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:109,performance,time,time,109,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:141,performance,perform,performance,141,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:581,performance,perform,performance,581,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:507,safety,except,exception,507,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:1101,safety,input,input,1101,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:171,testability,concern,concern,171,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:141,usability,perform,performance,141,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:334,usability,behavi,behavior,334,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:581,usability,perform,performance,581,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:814,usability,behavi,behavior,814,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:904,usability,behavi,behavior,904,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:1101,usability,input,input,1101,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:1116,usability,user,user,1116,"> Isn't it the already same in the in Read/WriteFastArrayDouble32? Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. . ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:465,availability,error,error,465,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:27,energy efficiency,current,currently,27,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:41,interoperability,specif,specifying,41,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:72,interoperability,specif,specifications,72,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:266,interoperability,format,format,266,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:411,interoperability,specif,specification,411,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:530,interoperability,architectur,architecture,530,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:465,performance,error,error,465,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:343,safety,input,input,343,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:465,safety,error,error,465,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:56,usability,behavi,behavior,56,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:146,usability,behavi,behavior,146,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:343,usability,input,input,343,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:358,usability,user,user,358,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:465,usability,error,error,465,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:471,usability,behavi,behavior,471,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:480,usability,document,documentation,480,"> Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this? I think that the specification is not the ideal place for that sort of error behavior documentation. I'd suggest a brief section in the architecture.md that summarizes the low-precision float options in RNTuple and highlights the differences and similarities to the already existing `Double32_t` and `Float16_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:16,deployability,build,build,16,@silverweed the build is fine on mac14 now. macphsft18 needed some updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:67,deployability,updat,updates,67,@silverweed the build is fine on mac14 now. macphsft18 needed some updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:67,safety,updat,updates,67,@silverweed the build is fine on mac14 now. macphsft18 needed some updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16390:67,security,updat,updates,67,@silverweed the build is fine on mac14 now. macphsft18 needed some updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16390
https://github.com/root-project/root/pull/16393:76,deployability,updat,update,76,Very good point! `FCNGradientBase::HasGradient()` should can be final. I'll update the PR with this before merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16393
https://github.com/root-project/root/pull/16393:76,safety,updat,update,76,Very good point! `FCNGradientBase::HasGradient()` should can be final. I'll update the PR with this before merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16393
https://github.com/root-project/root/pull/16393:76,security,updat,update,76,Very good point! `FCNGradientBase::HasGradient()` should can be final. I'll update the PR with this before merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16393
https://github.com/root-project/root/pull/16394:4,availability,error,error,4,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:220,availability,error,error,220,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:540,availability,error,error,540,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:440,deployability,build,build,440,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:760,deployability,build,build,760,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:263,integrability,pub,public,263,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:583,integrability,pub,public,583,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:336,modifiability,Variab,VariableGroups,336,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:656,modifiability,Variab,VariableGroups,656,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:4,performance,error,error,4,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:220,performance,error,error,220,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:540,performance,error,error,540,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:4,safety,error,error,4,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:220,safety,error,error,220,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:540,safety,error,error,540,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:4,usability,error,error,4,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:220,usability,error,error,220,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16394:540,usability,error,error,540,"The error seems an unresolved symbol on Win. ```. 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp. 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16394
https://github.com/root-project/root/pull/16400:87,deployability,version,version,87,Is this a backwards-incompatible change that need to be reflected in the specification version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:87,integrability,version,version,87,Is this a backwards-incompatible change that need to be reflected in the specification version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:20,interoperability,incompatib,incompatible,20,Is this a backwards-incompatible change that need to be reflected in the specification version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:73,interoperability,specif,specification,73,Is this a backwards-incompatible change that need to be reflected in the specification version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:87,modifiability,version,version,87,Is this a backwards-incompatible change that need to be reflected in the specification version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:30,energy efficiency,measur,measured,30,"> Since there was very little measured benefit of the dense representation,. How confident are we that we measured 'all' the most important use cases? And/or what was the result of the 'best' case scenario for the dense representation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:106,energy efficiency,measur,measured,106,"> Since there was very little measured benefit of the dense representation,. How confident are we that we measured 'all' the most important use cases? And/or what was the result of the 'best' case scenario for the dense representation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16400:197,modifiability,scenario,scenario,197,"> Since there was very little measured benefit of the dense representation,. How confident are we that we measured 'all' the most important use cases? And/or what was the result of the 'best' case scenario for the dense representation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16400
https://github.com/root-project/root/pull/16401:70,safety,test,test,70,"I propose to merge it once we have the ARM nodes online to be able to test immediately, would this be ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:70,testability,test,test,70,"I propose to merge it once we have the ARM nodes online to be able to test immediately, would this be ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:58,safety,test,test,58,"Yes, I'm waiting for the AArch64 node in our CI so we can test there, and then (after) I'd still like to ask CMS to run their tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:126,safety,test,tests,126,"Yes, I'm waiting for the AArch64 node in our CI so we can test there, and then (after) I'd still like to ask CMS to run their tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:58,testability,test,test,58,"Yes, I'm waiting for the AArch64 node in our CI so we can test there, and then (after) I'd still like to ask CMS to run their tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:126,testability,test,tests,126,"Yes, I'm waiting for the AArch64 node in our CI so we can test there, and then (after) I'd still like to ask CMS to run their tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:122,deployability,configurat,configurations,122,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:122,integrability,configur,configurations,122,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:122,modifiability,configur,configurations,122,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:60,safety,test,test,60,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:122,security,configur,configurations,122,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:60,testability,test,test,60,"@aandvalenzuela @smuzaffar if you have some cycles, can you test this change with CMSSW on AArch64? This should align the configurations with x86_64 to also enable `runtime_cxxmodules` by default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:65,safety,test,tests,65,https://github.com/cms-sw/root/pull/212 is running cmssw aarch64 tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:65,testability,test,tests,65,https://github.com/cms-sw/root/pull/212 is running cmssw aarch64 tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:66,availability,error,errors,66,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:345,availability,error,error,345,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1253,availability,sli,slimmedMuonsWithUserData,1253,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1374,availability,Error,Error,1374,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:122,deployability,artifact,artifacts,122,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,deployability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:242,deployability,log,log,242,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:367,deployability,modul,module-,367,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:971,deployability,modul,module,971,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1020,deployability,modul,module,1020," passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1096,deployability,modul,module,1096,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1161,deployability,modul,module,1161,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1221,deployability,modul,module,1221,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1303,deployability,modul,module,1303,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1416,deployability,Fail,Failed,1416,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,integrability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:859,integrability,Event,Event,859,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:886,integrability,event,event,886,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1382,integrability,SUB,SUB,1382,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,interoperability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,modifiability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:367,modifiability,modul,module-,367,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:971,modifiability,modul,module,971,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1020,modifiability,modul,module,1020," passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1096,modifiability,modul,module,1096,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1161,modifiability,modul,module,1161,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1221,modifiability,modul,module,1221,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1303,modifiability,modul,module,1303,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:66,performance,error,errors,66,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:345,performance,error,error,345,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1374,performance,Error,Error,1374,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,reliability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1253,reliability,sli,slimmedMuonsWithUserData,1253,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1416,reliability,Fail,Failed,1416,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1460,reliability,pra,pragma,1460,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1473,reliability,diagno,diagnostic,1473,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1491,reliability,pra,pragma,1491,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1504,reliability,diagno,diagnostic,1504,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1869,reliability,pra,pragma,1869,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1882,reliability,diagno,diagnostic,1882,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:18,safety,test,tests,18,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:66,safety,error,errors,66,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:242,safety,log,log,242,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:345,safety,error,error,345,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:367,safety,modul,module-,367,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:726,safety,Except,Exception,726,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:789,safety,except,exception,789,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:971,safety,modul,module,971,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1020,safety,modul,module,1020," passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1096,safety,modul,module,1096,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1161,safety,modul,module,1161,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1221,safety,modul,module,1221,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1303,safety,modul,module,1303,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1374,safety,Error,Error,1374,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1757,safety,valid,validFraction,1757,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1834,safety,valid,validFraction,1834,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1936,safety,Except,Exception,1936,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:2005,safety,except,exception,2005,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:2081,safety,except,exception,2081,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,security,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:242,security,log,log,242,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:337,security,session,session,337,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1533,security,secur,security,1533,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:18,testability,test,tests,18,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:145,testability,integr,integration,145,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:242,testability,log,log,242,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1027,testability,Simpl,SimplePATTauFlatTableProducer,1027," relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1473,testability,diagno,diagnostic,1473,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1504,testability,diagno,diagnostic,1504,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1882,testability,diagno,diagnostic,1882,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:66,usability,error,errors,66,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:345,usability,error,error,345,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Ano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1027,usability,Simpl,SimplePATTauFlatTableProducer,1027," relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:1374,usability,Error,Error,1374,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log. ```#--------------------------------------------------------------------------. cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8). ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------. An exception of category 'FatalRootError' occurred while. [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0. [1] Running path 'dqmoffline_1_step'. [2] Prefetching for module NanoAODDQM/'nanoDQM'. [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'. [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'. [5] Prefetching for module PATMuonRefSelector/'finalMuons'. [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'. [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'. Additional Info:. [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper. Failed to compile. ==== SOURCE BEGIN ====. #pragma clang diagnostic push. #pragma clang diagnostic ignored ""-Wformat-security"". __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))). extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret). {. if (ret) {. new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());. return;. }. else {. (void)(((const reco::TrackBase*)obj)->validFraction());. return;. }. }. #pragma clang diagnostic pop. ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------. Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:68,availability,error,errors,68,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:68,performance,error,errors,68,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:20,safety,test,tests,20,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:68,safety,error,errors,68,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:93,safety,test,testing,93,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:20,testability,test,tests,20,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:93,testability,test,testing,93,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/pull/16401:68,usability,error,errors,68,"> Hi, most of cmssw tests passed but for few relvals we get runtime errors [...]. Thanks for testing! This needs debugging (likely after CHEP)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16401
https://github.com/root-project/root/issues/16402:33,deployability,API,API,33,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:122,deployability,API,API,122,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:325,deployability,API,API,325,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:341,deployability,modul,module,341,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:33,integrability,API,API,33,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:122,integrability,API,API,122,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:325,integrability,API,API,325,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:33,interoperability,API,API,33,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:122,interoperability,API,API,122,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:325,interoperability,API,API,325,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:341,modifiability,modul,module,341,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:184,safety,Test,Test,184,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:275,safety,Test,Test,275,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:341,safety,modul,module,341,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:184,testability,Test,Test,184,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:275,testability,Test,Test,275,"This is a problem with the cppyy API, as this reproducer is sufficient:. ```python. import cppyy. cppyy.include('CPyCppyy/API.h'). cppyy.gbl.CPyCppyy.Scope_Check(cppyy.nullptr). class Test(object):. def __init__(self):. print('Init'). def __del__(self):. print('Del'). obj = Test(). ```. From ROOT 6.32, we used the CPyCppyy API in the ROOT module. That's why there is this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:76,availability,avail,available,76,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:107,deployability,releas,released,107,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:76,reliability,availab,available,76,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:76,safety,avail,available,76,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/issues/16402:76,security,availab,available,76,Fixed in 6.34.00 and also I'll backport it to the 6.32 branch so the fix is available in 6.32.06 when it's released.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16402
https://github.com/root-project/root/pull/16404:118,deployability,build,builds,118,"I closed and re-open to run it with the new LLVM, which was merged about 9h ago. @alja feel free to merge in case the builds succeed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16404
https://github.com/root-project/root/pull/16404:2,usability,close,closed,2,"I closed and re-open to run it with the new LLVM, which was merged about 9h ago. @alja feel free to merge in case the builds succeed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16404
https://github.com/root-project/root/issues/16405:222,usability,close,close,222,"Hi @will-cern! Just to double check with you before closing this issue as duplicate: this is the same as #9909, right? Coincidentally, reported by Carsten :slightly_smiling_face: . In case it is really a duplicate, please close this issue here and make a comment in Carstens issue, so that it's documented that more than one person cares about it and we can bump the priority and have a discussion at a central place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:295,usability,document,documented,295,"Hi @will-cern! Just to double check with you before closing this issue as duplicate: this is the same as #9909, right? Coincidentally, reported by Carsten :slightly_smiling_face: . In case it is really a duplicate, please close this issue here and make a comment in Carstens issue, so that it's documented that more than one person cares about it and we can bump the priority and have a discussion at a central place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:325,usability,person,person,325,"Hi @will-cern! Just to double check with you before closing this issue as duplicate: this is the same as #9909, right? Coincidentally, reported by Carsten :slightly_smiling_face: . In case it is really a duplicate, please close this issue here and make a comment in Carstens issue, so that it's documented that more than one person cares about it and we can bump the priority and have a discussion at a central place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:392,availability,error,error,392,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:424,integrability,messag,message,424,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:424,interoperability,messag,message,424,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:392,performance,error,error,392,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:103,safety,except,exceptions,103,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:160,safety,except,exception,160,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:279,safety,except,exceptions,279,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:356,safety,except,exception,356,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:392,safety,error,error,392,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:146,usability,user,user,146,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:392,usability,error,error,392,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:399,availability,error,error,399,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:365,deployability,fail,fail,365,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:409,deployability,fail,failed,409,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:383,interoperability,convers,conversion,383,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:399,performance,error,error,399,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:365,reliability,fail,fail,365,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:409,reliability,fail,failed,409,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:319,safety,except,exception,319,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:399,safety,error,error,399,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:451,safety,except,exception,451,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:12,usability,clear,clearer,12,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16405:399,usability,error,error,399,"Maybe to be clearer, I would expect the output to be:. ```. TypeError: none of the 2 overloaded methods succeeded. Full details:. void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>. TypeError: takes at least 2 arguments (1 given). void MyClass::MyMethod(const MyClass::MyObj& x = """") =>. RuntimeError: My exception. ```. I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16405
https://github.com/root-project/root/issues/16406:160,integrability,interfac,interfaces,160,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:229,integrability,wrap,wrappers,229,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:160,interoperability,interfac,interfaces,160,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:229,interoperability,wrapper,wrappers,229,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:160,modifiability,interfac,interfaces,160,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:107,usability,support,support,107,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/issues/16406:135,usability,help,help,135,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16406
https://github.com/root-project/root/pull/16410:88,usability,user,user-attachments,88,"This was deprecated in 6.32, i.e. <img width=""1110"" alt=""image"" src=""https://github.com/user-attachments/assets/0885647e-ad79-4351-a5e8-565fd4dfbfe1"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:935,deployability,upgrad,upgrade,935,"> This was deprecated in 6.32, i.e. <img alt=""image"" width=""1110"" src=""https://private-user-images.githubusercontent.com/7850302/366769614-0885647e-ad79-4351-a5e8-565fd4dfbfe1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYxMjc2MDcsIm5iZiI6MTcyNjEyNzMwNywicGF0aCI6Ii83ODUwMzAyLzM2Njc2OTYxNC0wODg1NjQ3ZS1hZDc5LTQzNTEtYTVlOC01NjVmZDRkZmJmZTEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTJUMDc0ODI3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OThhYTU4ZTRjMjM1NTMzNTE5NmYyNjQ2MzllN2Q5NTU3ZWQwYmE0MDg0YjhiZDY4MDlmY2M3NDFkMzBkOTIwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.RY-31lQULczm9iaRAHgJweGvDyXb3aSJxZT2Ks3AMqU"">. Yes, but I don't think people will do every upgrade and especially not for old macros. This was discussed in the ROOT meeting back then when we agreed that it would only be removed for ROOT 7. I'm ok with revisiting this decision, but I'm against just merging a PR less than half a year after it was deprecated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:935,modifiability,upgrad,upgrade,935,"> This was deprecated in 6.32, i.e. <img alt=""image"" width=""1110"" src=""https://private-user-images.githubusercontent.com/7850302/366769614-0885647e-ad79-4351-a5e8-565fd4dfbfe1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYxMjc2MDcsIm5iZiI6MTcyNjEyNzMwNywicGF0aCI6Ii83ODUwMzAyLzM2Njc2OTYxNC0wODg1NjQ3ZS1hZDc5LTQzNTEtYTVlOC01NjVmZDRkZmJmZTEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTJUMDc0ODI3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OThhYTU4ZTRjMjM1NTMzNTE5NmYyNjQ2MzllN2Q5NTU3ZWQwYmE0MDg0YjhiZDY4MDlmY2M3NDFkMzBkOTIwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.RY-31lQULczm9iaRAHgJweGvDyXb3aSJxZT2Ks3AMqU"">. Yes, but I don't think people will do every upgrade and especially not for old macros. This was discussed in the ROOT meeting back then when we agreed that it would only be removed for ROOT 7. I'm ok with revisiting this decision, but I'm against just merging a PR less than half a year after it was deprecated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:180,security,jwt,jwt,180,"> This was deprecated in 6.32, i.e. <img alt=""image"" width=""1110"" src=""https://private-user-images.githubusercontent.com/7850302/366769614-0885647e-ad79-4351-a5e8-565fd4dfbfe1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYxMjc2MDcsIm5iZiI6MTcyNjEyNzMwNywicGF0aCI6Ii83ODUwMzAyLzM2Njc2OTYxNC0wODg1NjQ3ZS1hZDc5LTQzNTEtYTVlOC01NjVmZDRkZmJmZTEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTJUMDc0ODI3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OThhYTU4ZTRjMjM1NTMzNTE5NmYyNjQ2MzllN2Q5NTU3ZWQwYmE0MDg0YjhiZDY4MDlmY2M3NDFkMzBkOTIwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.RY-31lQULczm9iaRAHgJweGvDyXb3aSJxZT2Ks3AMqU"">. Yes, but I don't think people will do every upgrade and especially not for old macros. This was discussed in the ROOT meeting back then when we agreed that it would only be removed for ROOT 7. I'm ok with revisiting this decision, but I'm against just merging a PR less than half a year after it was deprecated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:87,usability,user,user-images,87,"> This was deprecated in 6.32, i.e. <img alt=""image"" width=""1110"" src=""https://private-user-images.githubusercontent.com/7850302/366769614-0885647e-ad79-4351-a5e8-565fd4dfbfe1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjYxMjc2MDcsIm5iZiI6MTcyNjEyNzMwNywicGF0aCI6Ii83ODUwMzAyLzM2Njc2OTYxNC0wODg1NjQ3ZS1hZDc5LTQzNTEtYTVlOC01NjVmZDRkZmJmZTEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDkxMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA5MTJUMDc0ODI3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OThhYTU4ZTRjMjM1NTMzNTE5NmYyNjQ2MzllN2Q5NTU3ZWQwYmE0MDg0YjhiZDY4MDlmY2M3NDFkMzBkOTIwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.RY-31lQULczm9iaRAHgJweGvDyXb3aSJxZT2Ks3AMqU"">. Yes, but I don't think people will do every upgrade and especially not for old macros. This was discussed in the ROOT meeting back then when we agreed that it would only be removed for ROOT 7. I'm ok with revisiting this decision, but I'm against just merging a PR less than half a year after it was deprecated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:51,deployability,releas,release,51,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:93,deployability,releas,release-notes,93,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:184,deployability,releas,release,184,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:285,deployability,releas,release,285,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:244,integrability,event,eventually,244,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:117,interoperability,standard,standard,117,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:328,interoperability,standard,standard,328,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:88,deployability,releas,release,88,> including the information on when it will be eventually removed (which is usually one release later). In this case it was discussed: It will be removed in ROOT 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:47,integrability,event,eventually,47,> including the information on when it will be eventually removed (which is usually one release later). In this case it was discussed: It will be removed in ROOT 7.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:19,usability,document,documented,19,Is that discussion documented somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:74,integrability,event,event,74,"> Is that discussion documented somewhere? Yes, in https://indico.cern.ch/event/1381548/. > Regarding the deprecation `auto auto`: will break a lot of unnamed old macros, we should wait with removing until ROOT 7. We will start issuing deprecation messages starting from ROOT 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:248,integrability,messag,messages,248,"> Is that discussion documented somewhere? Yes, in https://indico.cern.ch/event/1381548/. > Regarding the deprecation `auto auto`: will break a lot of unnamed old macros, we should wait with removing until ROOT 7. We will start issuing deprecation messages starting from ROOT 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:248,interoperability,messag,messages,248,"> Is that discussion documented somewhere? Yes, in https://indico.cern.ch/event/1381548/. > Regarding the deprecation `auto auto`: will break a lot of unnamed old macros, we should wait with removing until ROOT 7. We will start issuing deprecation messages starting from ROOT 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16410:21,usability,document,documented,21,"> Is that discussion documented somewhere? Yes, in https://indico.cern.ch/event/1381548/. > Regarding the deprecation `auto auto`: will break a lot of unnamed old macros, we should wait with removing until ROOT 7. We will start issuing deprecation messages starting from ROOT 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16410
https://github.com/root-project/root/pull/16415:85,safety,test,test,85,Could we enhance this type of commits to include the reason why we are disabling the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:85,testability,test,test,85,Could we enhance this type of commits to include the reason why we are disabling the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:34,deployability,build,builds,34,"Note that `overrides` only for PR builds. For all builds, you need to modify `.github/workflows/root-ci-config/buildconfig/mac13.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:50,deployability,build,builds,50,"Note that `overrides` only for PR builds. For all builds, you need to modify `.github/workflows/root-ci-config/buildconfig/mac13.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:111,deployability,build,buildconfig,111,"Note that `overrides` only for PR builds. For all builds, you need to modify `.github/workflows/root-ci-config/buildconfig/mac13.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:70,security,modif,modify,70,"Note that `overrides` only for PR builds. For all builds, you need to modify `.github/workflows/root-ci-config/buildconfig/mac13.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16415:86,usability,workflow,workflows,86,"Note that `overrides` only for PR builds. For all builds, you need to modify `.github/workflows/root-ci-config/buildconfig/mac13.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16415
https://github.com/root-project/root/pull/16418:67,deployability,patch,patches,67,@linev @osschar Please check. . I will back-port the change in the patches branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16418
https://github.com/root-project/root/pull/16418:67,safety,patch,patches,67,@linev @osschar Please check. . I will back-port the change in the patches branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16418
https://github.com/root-project/root/pull/16418:67,security,patch,patches,67,@linev @osschar Please check. . I will back-port the change in the patches branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16418
https://github.com/root-project/root/issues/16419:17,deployability,manag,manage,17,"Hello,. I do not manage to reproduce. For me the snippet works out of the box. ```. RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );. std::string blindname = ""blindTau"";. std::string blindString = ""McFluff"";. RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );. RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));. std::cout << Gamma->evaluate() << std::endl;. ```. prints `-0.628406`, both for the master branch and 6.32.04 on macos 14. Perhaps I am missing some code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:17,energy efficiency,manag,manage,17,"Hello,. I do not manage to reproduce. For me the snippet works out of the box. ```. RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );. std::string blindname = ""blindTau"";. std::string blindString = ""McFluff"";. RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );. RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));. std::cout << Gamma->evaluate() << std::endl;. ```. prints `-0.628406`, both for the master branch and 6.32.04 on macos 14. Perhaps I am missing some code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:17,safety,manag,manage,17,"Hello,. I do not manage to reproduce. For me the snippet works out of the box. ```. RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );. std::string blindname = ""blindTau"";. std::string blindString = ""McFluff"";. RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );. RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));. std::cout << Gamma->evaluate() << std::endl;. ```. prints `-0.628406`, both for the master branch and 6.32.04 on macos 14. Perhaps I am missing some code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:67,deployability,stack,stacktrace,67,"There is definitely some code missing in the reproducer, since the stacktrace you link shows that you're doing a fit, which is not happening in the reproducer you posted. Please share the full reproducer code so we can reproducer the segfault and investigate the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:178,interoperability,share,share,178,"There is definitely some code missing in the reproducer, since the stacktrace you link shows that you're doing a fit, which is not happening in the reproducer you posted. Please share the full reproducer code so we can reproducer the segfault and investigate the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:201,usability,user,user-attachments,201,". hi, . sorry for the missing pieces. I added a zip file now, everything you need should be there. To run the code just type . ```. root -l . .L fit2d.C. fit2D(). ```. [forROOT.zip](https://github.com/user-attachments/files/17005958/forROOT.zip).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:62,availability,operat,operator,62,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:1277,availability,operat,operator,1277,"cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 0x00007f80e44852a6 in std::__invoke_r<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:114. #25 0x00007f80e4484d49 in std::_Function_handler<double (double const*), std::reference_wrapper<RooMinimizerFcn const> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:1738,availability,operat,operator,1738,"t/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 0x00007f80e44852a6 in std::__invoke_r<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:114. #25 0x00007f80e4484d49 in std::_Function_handler<double (double const*), std::reference_wrapper<RooMinimizerFcn const> >::_M_invoke(std::_Any_data const&, double const*&&) (__functor=..., __args#0=. 0x7ffdaea534f0: 0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:290. #26 0x00007f80e50cf333 in std::function<double (double const*)>::operator()(double const*) const (this=0x556343f537b0, __args#0=0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:590. #27 0x00007f80e50cb211 in ROOT::Math::Functor::DoEval (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:2506,availability,operat,operator,2506,"++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 0x00007f80e44852a6 in std::__invoke_r<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:114. #25 0x00007f80e4484d49 in std::_Function_handler<double (double const*), std::reference_wrapper<RooMinimizerFcn const> >::_M_invoke(std::_Any_data const&, double const*&&) (__functor=..., __args#0=. 0x7ffdaea534f0: 0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:290. #26 0x00007f80e50cf333 in std::function<double (double const*)>::operator()(double const*) const (this=0x556343f537b0, __args#0=0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:590. #27 0x00007f80e50cb211 in ROOT::Math::Functor::DoEval (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/Functor.h:73. #28 0x00007f80e50d0a68 in ROOT::Math::IBaseFunctionMultiDimTempl<double>::operator() (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/IFunction.h:79. #29 0x00007f80e363875d in TMinuitMinimizer::Fcn (f=. 0x7ffdaea53600: 4.638526896782574e-310, x=0x556343e8ccd0) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:240. #30 0x00007f80e3610da2 in TMinuit::Eval (this=0x556344339230, npar=9, grad=0x556343e7b490, fval=. 0x7ffdaea53600: 4.638526896782574e-310, par=0x556343e8ccd0, flag=4) at /opt/root_src/math/minuit/src/TMinuit.cxx:820. #31 0x00007f80e36112d2 in TMinuit::mnamin (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:2855,availability,operat,operator,2855,":__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 0x00007f80e44852a6 in std::__invoke_r<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:114. #25 0x00007f80e4484d49 in std::_Function_handler<double (double const*), std::reference_wrapper<RooMinimizerFcn const> >::_M_invoke(std::_Any_data const&, double const*&&) (__functor=..., __args#0=. 0x7ffdaea534f0: 0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:290. #26 0x00007f80e50cf333 in std::function<double (double const*)>::operator()(double const*) const (this=0x556343f537b0, __args#0=0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:590. #27 0x00007f80e50cb211 in ROOT::Math::Functor::DoEval (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/Functor.h:73. #28 0x00007f80e50d0a68 in ROOT::Math::IBaseFunctionMultiDimTempl<double>::operator() (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/IFunction.h:79. #29 0x00007f80e363875d in TMinuitMinimizer::Fcn (f=. 0x7ffdaea53600: 4.638526896782574e-310, x=0x556343e8ccd0) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:240. #30 0x00007f80e3610da2 in TMinuit::Eval (this=0x556344339230, npar=9, grad=0x556343e7b490, fval=. 0x7ffdaea53600: 4.638526896782574e-310, par=0x556343e8ccd0, flag=4) at /opt/root_src/math/minuit/src/TMinuit.cxx:820. #31 0x00007f80e36112d2 in TMinuit::mnamin (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:5060. #33 0x00007f80e361b181 in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7ffdaea53f70, llist=2, ierflg=. 0x7ffdaea53f5c: 0) at /opt/root_src/math/minuit/src/TMinuit.cxx:2849. #34 0x00007f80e3639bd2 in TMinuitMinimizer::Minimize (this=0x5563442fb250) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:0,deployability,Stack,Stack,0,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:23,deployability,build,build,23,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5285,deployability,build,builds,5285,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5292,deployability,build,build-,5292,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5440,deployability,build,builds,5440,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5447,deployability,build,build-,5447,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5622,deployability,build,builds,5622,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5629,deployability,build,build-,5629,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5807,deployability,build,builds,5807,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5814,deployability,build,build-,5814,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5951,deployability,build,builds,5951,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5958,deployability,build,build-,5958,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:106,energy efficiency,core,core,106,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:378,performance,content,contents,378,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:2680,reliability,DoE,DoEval,2680,"5d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 0x00007f80e44852a6 in std::__invoke_r<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:114. #25 0x00007f80e4484d49 in std::_Function_handler<double (double const*), std::reference_wrapper<RooMinimizerFcn const> >::_M_invoke(std::_Any_data const&, double const*&&) (__functor=..., __args#0=. 0x7ffdaea534f0: 0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:290. #26 0x00007f80e50cf333 in std::function<double (double const*)>::operator()(double const*) const (this=0x556343f537b0, __args#0=0x556343e8ccd0) at /usr/include/c++/11/bits/std_function.h:590. #27 0x00007f80e50cb211 in ROOT::Math::Functor::DoEval (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/Functor.h:73. #28 0x00007f80e50d0a68 in ROOT::Math::IBaseFunctionMultiDimTempl<double>::operator() (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/IFunction.h:79. #29 0x00007f80e363875d in TMinuitMinimizer::Fcn (f=. 0x7ffdaea53600: 4.638526896782574e-310, x=0x556343e8ccd0) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:240. #30 0x00007f80e3610da2 in TMinuit::Eval (this=0x556344339230, npar=9, grad=0x556343e7b490, fval=. 0x7ffdaea53600: 4.638526896782574e-310, par=0x556343e8ccd0, flag=4) at /opt/root_src/math/minuit/src/TMinuit.cxx:820. #31 0x00007f80e36112d2 in TMinuit::mnamin (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:5060. #33 0x00007f80e361b181 in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:6,testability,trace,trace,6,"Stack trace in a debug build:. ```. #11 0x00007f80ff7cf506 in operator<< (os=..., s=...) at /opt/root_src/core/base/src/Stringio.cxx:179. #12 0x00007f80e424c44d in RooAbsArg::printMultiline (this=0x556341467170, os=..., indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsArg.cxx:1591. #13 0x00007f80e4268884 in RooAbsCategory::printMultiline (this=0x556341467170, os=..., contents=-467236072, verbose=224, indent=...) at /opt/root_src/roofit/roofitcore/src/RooAbsCategory.cxx:413. #14 0x00007f80e43d1b5b in RooFit::Evaluator::computeCPUNode (this=0x556343f555c0, node=0x5563414671b0, info=...) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:375. #15 0x00007f80e43d1f37 in RooFit::Evaluator::run (this=0x556343f555c0) at /opt/root_src/roofit/roofitcore/src/RooFit/Evaluator.cxx:430. #16 0x00007f80e439dcaf in RooEvaluatorWrapper::evaluate (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:77. #17 0x00007f80e439e6c2 in RooEvaluatorWrapper::getValV (this=0x55634429b1f0) at /opt/root_src/roofit/roofitcore/src/RooEvaluatorWrapper.h:51. #18 0x00007f80e419f08c in RooAbsReal::getVal (this=0x55634429b1f0, normalisationSet=0x0) at /opt/root_src/roofit/roofitcore/inc/RooAbsReal.h:117. #19 0x00007f80e4483205 in RooMinimizerFcn::operator() (this=0x55634429bbd0, x=0x556343e8ccd0) at /opt/root_src/roofit/roofitcore/src/RooMinimizerFcn.cxx:82. #20 0x00007f80e4486317 in std::__invoke_impl<double, RooMinimizerFcn const&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #21 0x00007f80e4486082 in std::__invoke<RooMinimizerFcn const&, double const*> (__fn=...) at /usr/include/c++/11/bits/invoke.h:96. #22 0x00007f80e4485d0d in std::reference_wrapper<RooMinimizerFcn const>::operator()<double const*> (this=0x556343f537b0) at /usr/include/c++/11/bits/refwrap.h:349. #23 0x00007f80e4485975 in std::__invoke_impl<double, std::reference_wrapper<RooMinimizerFcn const>&, double const*> (__f=...) at /usr/include/c++/11/bits/invoke.h:61. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:3641,usability,command,command,3641,"80e50cb211 in ROOT::Math::Functor::DoEval (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/Functor.h:73. #28 0x00007f80e50d0a68 in ROOT::Math::IBaseFunctionMultiDimTempl<double>::operator() (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/IFunction.h:79. #29 0x00007f80e363875d in TMinuitMinimizer::Fcn (f=. 0x7ffdaea53600: 4.638526896782574e-310, x=0x556343e8ccd0) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:240. #30 0x00007f80e3610da2 in TMinuit::Eval (this=0x556344339230, npar=9, grad=0x556343e7b490, fval=. 0x7ffdaea53600: 4.638526896782574e-310, par=0x556343e8ccd0, flag=4) at /opt/root_src/math/minuit/src/TMinuit.cxx:820. #31 0x00007f80e36112d2 in TMinuit::mnamin (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:5060. #33 0x00007f80e361b181 in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7ffdaea53f70, llist=2, ierflg=. 0x7ffdaea53f5c: 0) at /opt/root_src/math/minuit/src/TMinuit.cxx:2849. #34 0x00007f80e3639bd2 in TMinuitMinimizer::Minimize (this=0x5563442fb250) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:521. #35 0x00007f80e5160836 in ROOT::Fit::Fitter::DoMinimization (this=0x556343eaefc0, chi2func=0x0) at /opt/root_src/math/mathcore/src/Fitter.cxx:800. #36 0x00007f80e515bcd1 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:3828,usability,Minim,Minimize,3828,"MultiDimTempl<double>::operator() (this=0x556343f537a0, x=0x556343e8ccd0) at /opt/root_src/math/mathcore/inc/Math/IFunction.h:79. #29 0x00007f80e363875d in TMinuitMinimizer::Fcn (f=. 0x7ffdaea53600: 4.638526896782574e-310, x=0x556343e8ccd0) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:240. #30 0x00007f80e3610da2 in TMinuit::Eval (this=0x556344339230, npar=9, grad=0x556343e7b490, fval=. 0x7ffdaea53600: 4.638526896782574e-310, par=0x556343e8ccd0, flag=4) at /opt/root_src/math/minuit/src/TMinuit.cxx:820. #31 0x00007f80e36112d2 in TMinuit::mnamin (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:5060. #33 0x00007f80e361b181 in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7ffdaea53f70, llist=2, ierflg=. 0x7ffdaea53f5c: 0) at /opt/root_src/math/minuit/src/TMinuit.cxx:2849. #34 0x00007f80e3639bd2 in TMinuitMinimizer::Minimize (this=0x5563442fb250) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:521. #35 0x00007f80e5160836 in ROOT::Fit::Fitter::DoMinimization (this=0x556343eaefc0, chi2func=0x0) at /opt/root_src/math/mathcore/src/Fitter.cxx:800. #36 0x00007f80e515bcd1 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:4399,usability,minim,minimize,4399,"4339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:983. #32 0x00007f80e3626d8f in TMinuit::mnmigr (this=0x556344339230) at /opt/root_src/math/minuit/src/TMinuit.cxx:5060. #33 0x00007f80e361b181 in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7ffdaea53f70, llist=2, ierflg=. 0x7ffdaea53f5c: 0) at /opt/root_src/math/minuit/src/TMinuit.cxx:2849. #34 0x00007f80e3639bd2 in TMinuitMinimizer::Minimize (this=0x5563442fb250) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:521. #35 0x00007f80e5160836 in ROOT::Fit::Fitter::DoMinimization (this=0x556343eaefc0, chi2func=0x0) at /opt/root_src/math/mathcore/src/Fitter.cxx:800. #36 0x00007f80e515bcd1 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:4596,usability,minim,minimize,4596,"in TMinuit::mnexcm (this=0x556344339230, command=0x7f80e3647126 ""MIGRAD"", plist=0x7ffdaea53f70, llist=2, ierflg=. 0x7ffdaea53f5c: 0) at /opt/root_src/math/minuit/src/TMinuit.cxx:2849. #34 0x00007f80e3639bd2 in TMinuitMinimizer::Minimize (this=0x5563442fb250) at /opt/root_src/math/minuit/src/TMinuitMinimizer.cxx:521. #35 0x00007f80e5160836 in ROOT::Fit::Fitter::DoMinimization (this=0x556343eaefc0, chi2func=0x0) at /opt/root_src/math/mathcore/src/Fitter.cxx:800. #36 0x00007f80e515bcd1 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TStri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5280,usability,user,user,5280,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5435,usability,user,user,5435,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5617,usability,user,user,5617,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5802,usability,user,user,5802,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:5946,usability,user,user,5946,"r::FitFCN (this=0x556343eaefc0) at /opt/root_src/math/mathcore/src/Fitter.cxx:285. #37 0x00007f80e515b850 in ROOT::Fit::Fitter::FitFCN (this=0x556343eaefc0, fcn=..., params=0x0, dataSize=0, fitType=0) at /opt/root_src/math/mathcore/src/Fitter.cxx:223. #38 0x00007f80e447b5c0 in RooMinimizer::minimize (this=0x7ffdaea54390, type=0x7ffdaea54358 ""Minuit"", alg=0x7ffdaea54378 ""Migrad"") at /opt/root_src/roofit/roofitcore/src/RooMinimizer.cxx:305. #39 0x00007f80e421cc66 in RooFit::FitHelpers::minimize (pdf=..., nll=..., data=..., pc=...) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:554. #40 0x00007f80e42211e0 in RooFit::FitHelpers::fitTo (real=..., data=..., cmdList=..., chi2=false) at /opt/root_src/roofit/roofitcore/src/FitHelpers.cxx:1058. #41 0x00007f80e42b74d5 in RooAbsPdf::fitToImpl (this=0x7ffdaea55af8, data=..., cmdList=...) at /opt/root_src/roofit/roofitcore/src/RooAbsPdf.cxx:1074. #42 0x00007f80e442df23 in RooAbsPdf::fitTo<RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg> (this=0x7ffdaea55af8, data=...) at /opt/root_src/roofit/roofitcore/inc/RooAbsPdf.h:159. #43 0x00007f80f4af7732 in ?? (). #44 0x00007f80e482a650 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #45 0x0200000000000000 in ?? (). #46 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #47 0x00007f8000626e04 in ?? (). #48 0x00007ffdaea558e0 in ?? (). #49 0x00007f80ffb137f8 in vtable for TString () from /home/user/builds/build-root_src-Desktop-Debug/lib/libCore.so. #50 0x0000000f00000011 in ?? (). #51 0x0000556343efb900 in ?? (). #52 0x00007f80e482ac48 in vtable for RooRealVar () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #53 0x00007f80e4801cf0 in vtable for RooSTLRefCountList<RooAbsArg> () from /home/user/builds/build-root_src-Desktop-Debug/lib/libRooFitCore.so. #54 0x0000000000000000 in ?? (). ===========================================================. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:18,availability,Error,Error,18,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:72,availability,Error,Error,72,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:18,performance,Error,Error,18,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:72,performance,Error,Error,72,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:18,safety,Error,Error,18,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:72,safety,Error,Error,72,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:18,usability,Error,Error,18,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:72,usability,Error,Error,72,I see also:. ```. Error in <Streamer>: Cannot stream interpreted class. Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:697,availability,slo,slow,697,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:412,energy efficiency,measur,measurements,412,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:657,energy efficiency,CPU,CPU,657,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:630,modifiability,scal,scaling,630,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:501,performance,time,time,501,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:549,performance,time,time,549,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:657,performance,CPU,CPU,657,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:752,performance,time,time,752,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:800,performance,time,time,800,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:930,performance,time,time,930,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:974,performance,time,time,974,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:697,reliability,slo,slow,697,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:1159,usability,document,documentation,1159,"Thanks for the reproducer! I opened a PR to fix it. Sorry you had this trouble in the meantime, but the trouble should be worth it: your script is running 10x faster now with the new RooFit implementation in 6.32! The new implementation ignores the `NumCPU()` option by the way, because it is faster than the old multithreaded implementation with any number of threads, even on a single thread. Here some timing measurements. ROOT 6.30, no `NumCPU()`:. ```. Executed in 316.69 secs fish external. usr time 316.36 secs 650.00 micros 316.36 secs. sys time 0.11 secs 58.00 micros 0.11 secs. ```. ROOT 6.30, `NumCPU(4)` (actually the scaling with the number of CPU is not too terrible, but still very slow):. ```. Executed in 98.90 secs fish external. usr time 368.33 secs 402.00 micros 368.33 secs. sys time 0.20 secs 276.00 micros 0.20 secs. ```. ROOT 6.32 with the PR that fixes it:. ```. Executed in 32.31 secs fish external. usr time 32.13 secs 0.00 micros 32.13 secs. sys time 0.11 secs 716.00 micros 0.11 secs. ```. By the way, you can enable the old evaluation backend also in ROOT 6.32 or newer by passing `EvalBackend(""legacy"")` to fit to. See also the documentation for [RooAbsPdf::createNLL()](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:303,availability,avail,available,303,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:387,deployability,releas,release,387,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:330,energy efficiency,current,current,330,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:303,reliability,availab,available,303,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:303,safety,avail,available,303,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:160,security,sign,significantly,160,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:303,security,availab,available,303,"hi, thanks for taking care! I do use the option of `EvalBackend(""legacy"")` and then was convinced that it is indeed a bug. But as you nicely point out, 6.32 is significantly faster than the older ones so it is not very pleasant to make a 2D fit for hours. I really appreciate the fix - when would it be available to use it in the current root? or will you make it functional in the next release?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:9,deployability,updat,update,9,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:30,deployability,releas,releases,30,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:73,deployability,releas,release,73,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:9,safety,updat,update,9,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:9,security,updat,update,9,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/issues/16419:137,usability,feedback,feedback,137,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16419
https://github.com/root-project/root/pull/16420:90,safety,test,tests,90,"> I feel uneasy about this change. @smuzaffar, can you run the cmssw CI on this PR? cmssw tests started via https://github.com/cms-sw/root/pull/210",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16420:90,testability,test,tests,90,"> I feel uneasy about this change. @smuzaffar, can you run the cmssw CI on this PR? cmssw tests started via https://github.com/cms-sw/root/pull/210",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16420:6,safety,test,tests,6,cmssw tests look good https://github.com/cms-sw/root/pull/210#issuecomment-2353450566.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16420:6,testability,test,tests,6,cmssw tests look good https://github.com/cms-sw/root/pull/210#issuecomment-2353450566.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16420
https://github.com/root-project/root/pull/16426:47,safety,test,test,47,Thanks @sawenzel . What could be a good way to test this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16426
https://github.com/root-project/root/pull/16426:47,testability,test,test,47,Thanks @sawenzel . What could be a good way to test this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16426
https://github.com/root-project/root/pull/16427:432,safety,test,test,432,"I have successfully made the following ROOT macro work:. ```c++. void task1(int i). {. std::stringstream code;. code << ""print("" << i << "")"";. TPython::Exec(code.str().c_str());. }. void repro(). {. int nThreads = 1000;. std::vector<std::thread> threads;. for (int i = 0; i < nThreads; i++) {. threads.emplace_back(task1, i);. }. for (int i = 0; i < threads.size(); i++) {. threads[i].join();. }. }. ```. I'll turn this into a unit test tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16427
https://github.com/root-project/root/pull/16427:427,testability,unit,unit,427,"I have successfully made the following ROOT macro work:. ```c++. void task1(int i). {. std::stringstream code;. code << ""print("" << i << "")"";. TPython::Exec(code.str().c_str());. }. void repro(). {. int nThreads = 1000;. std::vector<std::thread> threads;. for (int i = 0; i < nThreads; i++) {. threads.emplace_back(task1, i);. }. for (int i = 0; i < threads.size(); i++) {. threads[i].join();. }. }. ```. I'll turn this into a unit test tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16427
https://github.com/root-project/root/pull/16427:432,testability,test,test,432,"I have successfully made the following ROOT macro work:. ```c++. void task1(int i). {. std::stringstream code;. code << ""print("" << i << "")"";. TPython::Exec(code.str().c_str());. }. void repro(). {. int nThreads = 1000;. std::vector<std::thread> threads;. for (int i = 0; i < nThreads; i++) {. threads.emplace_back(task1, i);. }. for (int i = 0; i < threads.size(); i++) {. threads[i].join();. }. }. ```. I'll turn this into a unit test tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16427
https://github.com/root-project/root/issues/16428:161,deployability,continu,continuously,161,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:174,deployability,build,build,174,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:280,deployability,updat,update,280,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:293,deployability,updat,update,293,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:319,deployability,version,version,319,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:319,integrability,version,version,319,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:319,modifiability,version,version,319,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:280,safety,updat,update,280,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:293,safety,updat,update,293,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:280,security,updat,update,280,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:293,security,updat,update,293,"Hi @xkzl , thanks for the report. Macos15 is still in beta mode, therefore it could be that some features are not well established yet. However, this is odd. We continuously build the master and 6.32 branch on macos15 betas since months to be sure that everything works, xcode/os update after update. What is the exact version of macos you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:234,deployability,patch,patches,234,"Yes agree, you are right. MacOSX Sequoia 15.0 Beta (24A5320a). Here are the git information I can extract in case it helps. ```. [16:38:14] marcomeyer@MarcoMacBook-Pro:~/Software/root/20240914-src $ . $ git status. On branch v6-32-00-patches. Your branch is up to date with 'origin/v6-32-00-patches'. ```. I use a MacBook Pro Apple M1 Max with XCode SDK 15.0. ```. $ ls -ls /Library/Developer/CommandLineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Loo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:291,deployability,patch,patches,291,"Yes agree, you are right. MacOSX Sequoia 15.0 Beta (24A5320a). Here are the git information I can extract in case it helps. ```. [16:38:14] marcomeyer@MarcoMacBook-Pro:~/Software/root/20240914-src $ . $ git status. On branch v6-32-00-patches. Your branch is up to date with 'origin/v6-32-00-patches'. ```. I use a MacBook Pro Apple M1 Max with XCode SDK 15.0. ```. $ ls -ls /Library/Developer/CommandLineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Loo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1269,deployability,Build,Building,1269," 'origin/v6-32-00-patches'. ```. I use a MacBook Pro Apple M1 Max with XCode SDK 15.0. ```. $ ls -ls /Library/Developer/CommandLineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1283,deployability,version,version,1283,"-00-patches'. ```. I use a MacBook Pro Apple M1 Max with XCode SDK 15.0. ```. $ ls -ls /Library/Developer/CommandLineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1797,deployability,Build,Building,1797,"ication is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1815,deployability,version,version,1815,"ang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-proje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1941,deployability,Build,Building,1941,"r: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2080,deployability,version,version,2080,"- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2185,deployability,Modul,Module,2185," -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2321,deployability,modul,module,2321,"nectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2360,deployability,version,version,2360,"vity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been depre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2461,deployability,Build,Building,2461," than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2474,deployability,version,version,2474,"Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2493,deployability,Build,Building,2493,"e minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen dis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2511,deployability,Releas,Release,2511,". -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3250,deployability,version,version,3250,"ml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3782,deployability,Build,Building,3782,"oject is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3854,deployability,version,version,3854,"roject is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3886,deployability,version,version,3886,"oject is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3908,deployability,Build,Building,3908,"lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3949,deployability,version,version,3949,"is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3963,deployability,VERSION,VERSION,3963,"- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4270,deployability,version,version,4270,"m required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4500,deployability,version,version,4500,"-- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4521,deployability,Configurat,Configuration,4521,"/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nloh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4656,deployability,Build,Build,4656,"dings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4668,deployability,Releas,Release,4668,"d. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4677,deployability,Instal,Install,4677,"M host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5325,deployability,version,version-min,5325,". -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5345,deployability,Modul,Module,5345,"t found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Lookin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5826,deployability,Build,Build,5826,"l -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- L",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5901,deployability,build,build,5901,"ecific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5911,deployability,Build,Building,5911,"3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5925,deployability,version,version,5925,"C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6363,deployability,Build,Building,6363,"-- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6381,deployability,version,version,6381," for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6507,deployability,Build,Building,6507,"llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6646,deployability,version,version,6646,"oot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/pyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6751,deployability,Modul,Module,6751," xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6887,deployability,modul,module,6887,"t/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6926,deployability,version,version,6926,"on 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7027,deployability,Build,Building,7027,"ult C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7040,deployability,version,version,7040,"ard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VER",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7059,deployability,Build,Building,7059,"etected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7077,deployability,Releas,Release,7077,"/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7673,deployability,version,version,7673,"red is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8205,deployability,Build,Building,8205,"oject is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8277,deployability,version,version,8277,"roject is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8309,deployability,version,version,8309,"oject is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8331,deployability,Build,Building,8331,"lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8372,deployability,version,version,8372,"is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8386,deployability,VERSION,VERSION,8386,"- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8693,deployability,version,version,8693,"m required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8923,deployability,version,version,8923,"-- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8944,deployability,Configurat,Configuration,8944,"/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nloh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9079,deployability,Build,Build,9079,"dings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9091,deployability,Releas,Release,9091,"d. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9100,deployability,Instal,Install,9100,"M host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9748,deployability,version,version-min,9748,"n24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9768,deployability,Modul,Module,9768,"n24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1749,energy efficiency,gpu,gpu,1749,"Clang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4629,energy efficiency,core,core,4629,"_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5727,energy efficiency,cpu,cpu,5727,"14. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Developm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6315,energy efficiency,gpu,gpu,6315,"mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc projec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9052,energy efficiency,core,core,9052,"_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:10150,energy efficiency,cpu,cpu,10150,"n24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1283,integrability,version,version,1283,"-00-patches'. ```. I use a MacBook Pro Apple M1 Max with XCode SDK 15.0. ```. $ ls -ls /Library/Developer/CommandLineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1815,integrability,version,version,1815,"ang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-proje",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2080,integrability,version,version,2080,"- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2131,integrability,compon,components,2131,"or working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /L",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2360,integrability,version,version,2360,"vity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been depre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:2474,integrability,version,version,2474,"Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3250,integrability,version,version,3250,"ml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3301,integrability,compon,components,3301,"- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is Clang with GNU-like command-line. -- Found assembler: /Library/Developer/CommandLineTools/usr/bin/clang. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3854,integrability,version,version,3854,"roject is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3886,integrability,version,version,3886,"oject is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3949,integrability,version,version,3949,"is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:3963,integrability,VERSION,VERSION,3963,"- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4233,integrability,MESSAG,MESSAGE,4233,"und suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4270,integrability,version,version,4270,"m required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4500,integrability,version,version,4500,"-- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:4521,integrability,Configur,Configuration,4521,"/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nloh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5325,integrability,version,version-min,5325,". -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5770,integrability,Configur,Configuring,5770,"tandard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:5925,integrability,version,version,5925,"C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6381,integrability,version,version,6381," for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6646,integrability,version,version,6646,"oot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/pyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6697,integrability,compon,components,6697,"red sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. -- Configuring done (17.6s). -- Generating done (3.7s). -- Build files have been written to: /Users/marcomeyer/Software/root/20240914-build. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum req",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:6926,integrability,version,version,6926,"on 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7040,integrability,version,version,7040,"ard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VER",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7673,integrability,version,version,7673,"red is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:7724,integrability,compon,components,7724,"ent NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in 'Release' mode. -- bolt project is disabled. -- clang project is enabled. -- clang-tools-extra project is disabled. -- compiler-rt project is disabled. -- cross-project-tests project is disabled. -- libc project is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8277,integrability,version,version,8277,"roject is disabled. -- libclc project is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8309,integrability,version,version,8309,"oject is disabled. -- lld project is disabled. -- lldb project is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8372,integrability,version,version,8372,"is disabled. -- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8386,integrability,VERSION,VERSION,8386,"- mlir project is disabled. -- openmp project is disabled. -- polly project is disabled. -- pstl project is disabled. -- flang project is disabled. -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8656,integrability,MESSAG,MESSAGE,8656,"und suitable version ""3.12.6"", minimum required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8693,integrability,version,version,8693,"m required is ""3.0"") found components: Interpreter . -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future. -- Native target architecture is AArch64. -- Threads disabled. -- Doxygen disabled. -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8923,integrability,version,version,8923,"-- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:8944,integrability,Configur,Configuration,8944,"/Developer/CommandLineTools/usr/bin/ld. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) . -- OCaml bindings disabled. -- LLVM host triple: arm64-apple-darwin24.0.0. -- LLVM default target triple: arm64-apple-darwin24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nloh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:9748,integrability,version,version-min,9748,"n24.0.0. -- Building with -fPIC. -- Targeting AArch64. -- Targeting NVPTX. -- Clang version: 16.0.6. -- Host linker version: 1115.6.2. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.1~dev. -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime. -- And then fallback to: 'clang++'. -- Found arc4random_buf in stdlib.h. CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):. Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled. -- RapidYAML not found, only compiling RooFit with nlohmann-json parser. -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128. -- ROOT Configuration . System: Darwin-24.0.0. ROOT Platform: macosx. ROOT Architecture: macosxarm64. Processor: 10 core Apple M1 Max (arm64). Build type: Release. Install path: /Users/marcomeyer/Software/root/20240914. Compiler: AppleClang 16.0.0.16000022. C++ standard: 17. Compiler flags:. - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread. - C (built type specific): -O3 -DNDEBUG. - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++. - C++ (built type specific): -O3 -DNDEBUG. Linker flags:. - Executable: -mmacosx-version-min=15.0. - Module: . - Shared: . -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash clad cocoa dataframe davix gdml http imt libcxx opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1397,interoperability,standard,standard,1397,"ineTools/SDKs/ . total 0. 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk. [...]. ```. Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
https://github.com/root-project/root/issues/16428:1507,interoperability,standard,standard,1507,"Here is the result of the cmake command. ```. cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8. -- The C compiler identification is AppleClang 16.0.0.16000022. -- The CXX compiler identification is AppleClang 16.0.0.16000022. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building ROOT version 6.32.04. -- Checking internet connectivity. -- Checking internet connectivity - found. -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard. -- Performing Test HAS_LIBCXX11. -- Performing Test HAS_LIBCXX11 - Success. -- Found a macOS system 15.0. -- Found an AArch64 system. -- ROOT default compression algorithm: zlib. -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled. -- Looking for ZLib. -- Building freetype version 2.12.1 included in ROOT itself. -- Looking for PCRE. -- Looking for LZMA. -- Looking for ZSTD. -- Looking for LZ4. -- Building AfterImage library included in ROOT itself. -- Looking for Python. -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed . -- Looking for OpenGL. -- Looking for LibXml2. -- Looking for SQLite. -- Looking for XROOTD. -- Checking for module 'davix>=0.6.4'. -- Found davix, version 0.8.7. -- Looking for BLAS for optional parts of TMVA. -- PyROOT: development package found. Building for version 3.12.6. -- Building LLVM in '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16428
